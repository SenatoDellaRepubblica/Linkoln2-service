/* The following code was generated by JFlex 1.7.0 */

/*******************************************************************************
 * Copyright (c) 2016-2021 Institute of Legal Information and Judicial Systems IGSG-CNR (formerly ITTIG-CNR)
 * 
 * This program and the accompanying materials  are made available under the terms of the GNU General Public
 * License as published by the Free Software Foundation; either version 3 of the License, or (at your option)
 * any later version. 
 * You may not use this work except in compliance with the Licence.
 * You may obtain a copy of the Licence at: https://www.gnu.org/licenses/gpl-3.0.txt
 * Unless required by applicable law or agreed to in writing, software distributed under the Licence is 
 * distributed on an "AS IS" basis, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the Licence for the specific language governing permissions and limitations under the Licence.
 *  
 * Authors: Lorenzo Bacci (IGSG-CNR)
 ******************************************************************************/
 package it.cnr.igsg.linkoln.service.impl.it;

import java.io.IOException;
import java.io.StringReader;

import it.cnr.igsg.linkoln.entity.*;
import it.cnr.igsg.linkoln.service.*;

import it.cnr.igsg.linkoln.service.impl.Util;


/**
 * This class is a scanner generated by 
 * <a href="http://www.jflex.de/">JFlex</a> 1.7.0
 * from the specification file <tt>jflex/ExtendAuthorities.jflex</tt>
 */
public class ExtendAuthorities extends LinkolnAnnotationService {

  /** This character denotes the end of file */
  public static final int YYEOF = -1;

  /** initial size of the lookahead buffer */
  private static final int ZZ_BUFFERSIZE = 16384;

  /** lexical states */
  public static final int YYINITIAL = 0;
  public static final int lkn = 2;
  public static final int extendAuth = 4;
  public static final int extendLegislativeAuth = 6;

  /**
   * ZZ_LEXSTATE[l] is the state in the DFA for the lexical state l
   * ZZ_LEXSTATE[l+1] is the state in the DFA for the lexical state l
   *                  at the beginning of a line
   * l is of the form l = 2*k, k a non negative integer
   */
  private static final int ZZ_LEXSTATE[] = { 
     0,  0,  1,  1,  2,  2,  3, 3
  };

  /** 
   * Translates characters to character classes
   */
  private static final String ZZ_CMAP_PACKED = 
    "\11\0\1\1\1\1\1\0\1\1\1\1\22\0\1\1\5\0\1\4"+
    "\1\0\1\1\1\1\2\0\1\1\1\2\1\0\1\45\1\44\1\44"+
    "\1\44\1\44\1\44\1\44\1\44\1\44\1\44\1\44\1\12\1\11"+
    "\5\0\1\21\1\6\1\33\1\53\1\31\1\16\1\23\1\63\1\41"+
    "\1\16\1\55\1\51\1\47\1\5\1\43\1\10\1\16\1\25\1\17"+
    "\1\37\1\35\1\27\1\65\1\16\1\61\1\16\1\56\1\0\1\57"+
    "\1\0\1\3\1\0\1\20\1\14\1\32\1\52\1\30\1\0\1\22"+
    "\1\62\1\40\1\0\1\54\1\50\1\46\1\13\1\42\1\15\1\0"+
    "\1\24\1\7\1\36\1\34\1\26\1\64\1\0\1\60\1\0\12\0"+
    "\1\0\44\0\1\0\5\0\1\0\3\0\1\0\5\0\1\0\5\0"+
    "\1\0\1\0\4\0\1\0\1\0\1\0\1\0\2\0\1\0\1\0"+
    "\2\0\1\0\1\0\1\0\1\0\3\0\2\0\1\0\1\0\2\0"+
    "\3\0\1\0\1\0\4\0\1\0\1\0\1\0\1\0\2\0\1\0"+
    "\1\0\2\0\1\0\1\0\1\0\1\0\3\0\2\0\1\0\1\0"+
    "\2\0\53\0\1\0\1\0\6\0\2\40\66\0\1\0\1\0\4\0"+
    "\1\0\1\0\17\0\1\7\u1c88\0\1\0\1\0\216\0\2\0\42\0"+
    "\1\0\1\0\u0144\0\1\1\20\0\1\2\1\2\4\0\1\0\16\0"+
    "\1\0\1\0\u0100\0\1\54\uffff\0\uffff\0\uffff\0\uffff\0\uffff\0\uffff\0\uffff\0\uffff\0\uffff\0\uffff\0\uffff\0\uffff\0\uffff\0\uffff\0\uffff\0\uffff\0\udee5\0";

  /** 
   * Translates characters to character classes
   */
  private static final char [] ZZ_CMAP = zzUnpackCMap(ZZ_CMAP_PACKED);

  /** 
   * Translates DFA states to action switch labels.
   */
  private static final int [] ZZ_ACTION = zzUnpackAction();

  private static final String ZZ_ACTION_PACKED_0 =
    "\4\0\2\1\2\2\3\3\15\0\1\4\106\0\1\5"+
    "\135\0\1\5\17\0\1\6\65\0\1\7\66\0\1\10"+
    "\175\0\1\5\16\0\1\11\22\0\1\12\44\0\1\13";

  private static int [] zzUnpackAction() {
    int [] result = new int[512];
    int offset = 0;
    offset = zzUnpackAction(ZZ_ACTION_PACKED_0, offset, result);
    return result;
  }

  private static int zzUnpackAction(String packed, int offset, int [] result) {
    int i = 0;       /* index in packed string  */
    int j = offset;  /* index in unpacked array */
    int l = packed.length();
    while (i < l) {
      int count = packed.charAt(i++);
      int value = packed.charAt(i++);
      do result[j++] = value; while (--count > 0);
    }
    return j;
  }


  /** 
   * Translates a state to a row index in the transition table
   */
  private static final int [] ZZ_ROWMAP = zzUnpackRowMap();

  private static final String ZZ_ROWMAP_PACKED_0 =
    "\0\0\0\66\0\154\0\242\0\330\0\u010e\0\330\0\u0144"+
    "\0\330\0\u017a\0\u01b0\0\u01e6\0\u021c\0\u0252\0\u0288\0\u02be"+
    "\0\u02f4\0\u032a\0\u0360\0\u0396\0\u03cc\0\u0402\0\u0438\0\u046e"+
    "\0\330\0\u04a4\0\u04da\0\u0510\0\u0546\0\u057c\0\u05b2\0\u05e8"+
    "\0\u061e\0\u0654\0\u068a\0\u06c0\0\u06f6\0\u072c\0\u0762\0\u0798"+
    "\0\u07ce\0\u0804\0\u083a\0\u0870\0\u08a6\0\u08dc\0\u0912\0\u0948"+
    "\0\u097e\0\u09b4\0\u09ea\0\u0a20\0\u0a56\0\u0a8c\0\u0ac2\0\u0af8"+
    "\0\u0b2e\0\u0b64\0\u0b9a\0\u0bd0\0\u0c06\0\u0c3c\0\u0c72\0\u0ca8"+
    "\0\u0cde\0\u0d14\0\u0d4a\0\u0d80\0\u0db6\0\u0dec\0\u0e22\0\u0e58"+
    "\0\u0e8e\0\u0ec4\0\u0efa\0\u0f30\0\u0f66\0\u0f9c\0\u0fd2\0\u1008"+
    "\0\u103e\0\u1074\0\u10aa\0\u10e0\0\u1116\0\u114c\0\u1182\0\u11b8"+
    "\0\u11ee\0\u1224\0\u125a\0\u1290\0\u12c6\0\u12fc\0\u1332\0\330"+
    "\0\u1368\0\u139e\0\u13d4\0\u140a\0\u1440\0\u1476\0\u14ac\0\u14e2"+
    "\0\u1518\0\u154e\0\u1584\0\u15ba\0\u15f0\0\u1626\0\u165c\0\u1692"+
    "\0\u16c8\0\u16fe\0\u1734\0\u176a\0\u17a0\0\u17d6\0\u180c\0\u1842"+
    "\0\u1878\0\u18ae\0\u18e4\0\u191a\0\u1950\0\u1986\0\u19bc\0\u19f2"+
    "\0\u1a28\0\u1a5e\0\u1a94\0\u1aca\0\u1b00\0\u1b36\0\u1b6c\0\u1ba2"+
    "\0\u1bd8\0\u1c0e\0\u1c44\0\u1c7a\0\u1cb0\0\u1ce6\0\u1d1c\0\u1d52"+
    "\0\u1d88\0\u1dbe\0\u1df4\0\u1e2a\0\u1e60\0\u1e96\0\u1ecc\0\u1f02"+
    "\0\u1f38\0\u1f6e\0\u1fa4\0\u1fda\0\u2010\0\u2046\0\u207c\0\u20b2"+
    "\0\u20e8\0\u211e\0\u2154\0\u218a\0\u21c0\0\u21f6\0\u222c\0\u2262"+
    "\0\u2298\0\u22ce\0\u2304\0\u233a\0\u2370\0\u23a6\0\u23dc\0\u2412"+
    "\0\u2448\0\u247e\0\u24b4\0\u24ea\0\u2520\0\u2556\0\u258c\0\u25c2"+
    "\0\u25f8\0\u262e\0\u2664\0\u269a\0\u26d0\0\u269a\0\u2706\0\u273c"+
    "\0\u2772\0\u27a8\0\u27de\0\u2814\0\u284a\0\u2880\0\u28b6\0\u28ec"+
    "\0\u2922\0\u2958\0\u298e\0\u29c4\0\u29fa\0\330\0\u2a30\0\u2a66"+
    "\0\u2a9c\0\u2ad2\0\u2b08\0\u2b3e\0\u2b74\0\u2baa\0\u2be0\0\u2c16"+
    "\0\u2c4c\0\u2c82\0\u2cb8\0\u2cee\0\u2d24\0\u2d5a\0\u2d90\0\u2dc6"+
    "\0\u2dfc\0\u2e32\0\u2e68\0\u2e9e\0\u2ed4\0\u2f0a\0\u2f40\0\u2f76"+
    "\0\u2fac\0\u2fe2\0\u3018\0\u304e\0\u3084\0\u30ba\0\u30f0\0\u3126"+
    "\0\u315c\0\u3192\0\u31c8\0\u31fe\0\u3234\0\u326a\0\u32a0\0\u32d6"+
    "\0\u330c\0\u3342\0\u3378\0\u33ae\0\u33e4\0\u341a\0\u3450\0\u3486"+
    "\0\u34bc\0\u34f2\0\u3528\0\330\0\u355e\0\u3594\0\u35ca\0\u3600"+
    "\0\u3636\0\u366c\0\u36a2\0\u36d8\0\u370e\0\u3744\0\u377a\0\u37b0"+
    "\0\u37e6\0\u381c\0\u3852\0\u3888\0\u38be\0\u38f4\0\u392a\0\u3960"+
    "\0\u3996\0\u39cc\0\u3a02\0\u3a38\0\u3a6e\0\u3aa4\0\u3ada\0\u3b10"+
    "\0\u3b46\0\u3b7c\0\u3bb2\0\u3be8\0\u3c1e\0\u3c54\0\u3c8a\0\u3cc0"+
    "\0\u3cf6\0\u3d2c\0\u3d62\0\u3d98\0\u3dce\0\u3e04\0\u3e3a\0\u3e70"+
    "\0\u3ea6\0\u3edc\0\u3f12\0\u3f48\0\u3f7e\0\u3fb4\0\u3fea\0\u4020"+
    "\0\u4056\0\u408c\0\330\0\u40c2\0\u40f8\0\u412e\0\u4164\0\u419a"+
    "\0\u41d0\0\u4206\0\u423c\0\u4272\0\u42a8\0\u42de\0\u4314\0\u434a"+
    "\0\u4380\0\u43b6\0\u43ec\0\u4422\0\u4458\0\u448e\0\u44c4\0\u44fa"+
    "\0\u4530\0\u4566\0\u459c\0\u45d2\0\u4608\0\u463e\0\u4674\0\u46aa"+
    "\0\u46e0\0\u4716\0\u474c\0\u4782\0\u47b8\0\u47ee\0\u4824\0\u485a"+
    "\0\u4890\0\u48c6\0\u48fc\0\u4932\0\u4968\0\u499e\0\u49d4\0\u4a0a"+
    "\0\u4a40\0\u4a76\0\u4aac\0\u4ae2\0\u4b18\0\u4b4e\0\u4b84\0\u4bba"+
    "\0\u4bf0\0\u4c26\0\u4c5c\0\u4c92\0\u4cc8\0\u4cfe\0\u4d34\0\u4d6a"+
    "\0\u4da0\0\u4dd6\0\u4e0c\0\u4e42\0\u4e78\0\u4eae\0\u4ee4\0\u4f1a"+
    "\0\u4f50\0\u4f86\0\u4fbc\0\u4ff2\0\u5028\0\u505e\0\u5094\0\u50ca"+
    "\0\u5100\0\u5136\0\u516c\0\u51a2\0\u51d8\0\u520e\0\u5244\0\u527a"+
    "\0\u52b0\0\u52e6\0\u531c\0\u5352\0\u5388\0\u53be\0\u53f4\0\u542a"+
    "\0\u5460\0\u5496\0\u54cc\0\u5502\0\u5538\0\u556e\0\u55a4\0\u55da"+
    "\0\u5610\0\u5646\0\u567c\0\u56b2\0\u56e8\0\u571e\0\u5754\0\u578a"+
    "\0\u57c0\0\u57f6\0\u582c\0\u5862\0\u5898\0\u58ce\0\u5904\0\u593a"+
    "\0\u5970\0\u59a6\0\u59dc\0\u5a12\0\u5a48\0\u5a7e\0\u5ab4\0\u5aea"+
    "\0\u5ab4\0\u5b20\0\u5b56\0\u5b8c\0\u5bc2\0\u5bf8\0\u5c2e\0\u5c64"+
    "\0\u5c9a\0\u5cd0\0\u5d06\0\u5d3c\0\u5d72\0\u5da8\0\u5dde\0\330"+
    "\0\u5e14\0\u5e4a\0\u5e80\0\u5eb6\0\u5eec\0\u5f22\0\u5f58\0\u5f8e"+
    "\0\u5fc4\0\u5ffa\0\u6030\0\u6066\0\u609c\0\u60d2\0\u6108\0\u613e"+
    "\0\u6174\0\u61aa\0\330\0\u61e0\0\u6216\0\u624c\0\u6282\0\u62b8"+
    "\0\u62ee\0\u6324\0\u635a\0\u6390\0\u63c6\0\u63fc\0\u6432\0\u6468"+
    "\0\u649e\0\u64d4\0\u650a\0\u6540\0\u6576\0\u65ac\0\u65e2\0\u6618"+
    "\0\u664e\0\u6684\0\u66ba\0\u66f0\0\u6726\0\u675c\0\u6792\0\u67c8"+
    "\0\u67fe\0\u6834\0\u686a\0\u68a0\0\u68d6\0\u690c\0\u6942\0\330";

  private static int [] zzUnpackRowMap() {
    int [] result = new int[512];
    int offset = 0;
    offset = zzUnpackRowMap(ZZ_ROWMAP_PACKED_0, offset, result);
    return result;
  }

  private static int zzUnpackRowMap(String packed, int offset, int [] result) {
    int i = 0;  /* index in packed string  */
    int j = offset;  /* index in unpacked array */
    int l = packed.length();
    while (i < l) {
      int high = packed.charAt(i++) << 16;
      result[j++] = high | packed.charAt(i++);
    }
    return j;
  }

  /** 
   * The transition table of the DFA
   */
  private static final int [] ZZ_TRANS = zzUnpackTrans();

  private static final String ZZ_TRANS_PACKED_0 =
    "\56\5\1\6\7\5\56\7\1\10\7\7\56\11\1\12"+
    "\65\11\1\13\7\11\136\0\2\14\61\0\1\15\70\0"+
    "\2\16\64\0\2\17\70\0\2\20\60\0\2\21\70\0"+
    "\2\22\64\0\2\23\15\0\1\24\5\0\1\24\126\0"+
    "\2\25\15\0\1\26\5\0\1\26\57\0\1\27\5\0"+
    "\1\27\64\0\1\30\60\0\1\31\5\0\1\31\64\0"+
    "\1\32\65\0\1\33\56\0\1\34\1\0\2\34\1\0"+
    "\1\34\5\0\2\34\1\0\1\34\1\0\1\34\1\0"+
    "\1\34\1\0\1\34\1\0\1\34\1\35\1\36\1\0"+
    "\1\34\1\0\1\34\1\0\1\34\1\0\1\34\3\0"+
    "\1\34\1\37\1\40\1\0\1\34\1\0\1\34\3\0"+
    "\1\34\1\0\1\34\1\0\1\34\3\0\1\41\1\0"+
    "\2\41\1\0\1\41\5\0\2\41\1\0\1\41\1\0"+
    "\1\41\1\0\1\41\1\0\1\41\1\0\1\41\1\42"+
    "\1\43\1\0\1\41\1\0\1\41\1\0\1\41\1\0"+
    "\1\41\2\0\1\44\1\45\1\0\1\41\1\0\1\41"+
    "\1\0\1\41\3\0\1\41\1\0\1\41\1\0\1\41"+
    "\3\0\1\41\1\0\2\41\1\0\1\41\5\0\2\41"+
    "\1\0\1\41\1\0\1\41\1\46\1\47\1\0\1\41"+
    "\1\0\1\41\1\50\1\51\1\0\1\41\1\0\1\41"+
    "\1\0\1\41\1\0\1\41\2\0\1\44\1\45\1\52"+
    "\1\53\1\0\1\41\1\0\1\41\3\0\1\41\1\0"+
    "\1\41\1\0\1\41\3\0\1\34\1\0\2\34\1\0"+
    "\1\34\1\0\1\54\3\0\2\34\1\0\1\34\1\0"+
    "\1\34\1\0\1\34\1\0\1\34\1\0\1\34\1\0"+
    "\1\34\1\0\1\34\1\0\1\34\1\0\1\34\1\0"+
    "\1\34\3\0\1\34\1\0\1\34\1\0\1\34\1\0"+
    "\1\34\3\0\1\34\1\0\1\34\1\0\1\34\50\0"+
    "\2\55\17\0\1\34\1\0\2\34\1\0\1\34\1\0"+
    "\1\54\3\0\2\34\1\0\1\34\1\0\1\34\1\0"+
    "\1\34\1\0\1\34\1\0\1\34\1\0\1\34\1\0"+
    "\1\34\1\0\1\34\1\0\1\34\1\0\1\34\3\0"+
    "\1\34\1\55\1\56\1\0\1\34\1\0\1\34\3\0"+
    "\1\34\1\0\1\34\1\0\1\34\30\0\2\57\37\0"+
    "\1\34\1\0\2\34\1\0\1\34\1\0\1\54\3\0"+
    "\2\34\1\0\1\34\1\0\1\34\1\0\1\34\1\0"+
    "\1\34\1\57\1\60\1\0\1\34\1\0\1\34\1\0"+
    "\1\34\1\0\1\34\1\0\1\34\3\0\1\34\1\0"+
    "\1\34\1\0\1\34\1\0\1\34\3\0\1\34\1\0"+
    "\1\34\1\0\1\34\3\0\1\41\1\0\2\41\1\0"+
    "\1\41\1\0\1\61\3\0\2\41\1\0\1\41\1\0"+
    "\1\41\1\0\1\41\1\0\1\41\1\0\1\41\1\0"+
    "\1\41\1\0\1\41\1\0\1\41\1\0\1\41\1\0"+
    "\1\41\3\0\1\41\1\0\1\41\1\0\1\41\1\0"+
    "\1\41\3\0\1\41\1\0\1\41\1\0\1\41\40\0"+
    "\2\62\6\0\2\63\17\0\1\41\1\0\2\41\1\0"+
    "\1\41\1\0\1\61\3\0\2\41\1\0\1\41\1\0"+
    "\1\41\1\0\1\41\1\0\1\41\1\0\1\41\1\0"+
    "\1\41\1\0\1\41\1\0\1\41\1\62\1\64\1\0"+
    "\1\41\3\0\1\41\1\63\1\65\1\0\1\41\1\0"+
    "\1\41\3\0\1\41\1\0\1\41\1\0\1\41\34\0"+
    "\2\66\33\0\1\41\1\0\2\41\1\0\1\41\1\0"+
    "\1\61\3\0\2\41\1\0\1\41\1\0\1\41\1\0"+
    "\1\41\1\0\1\41\1\0\1\41\1\0\1\41\1\66"+
    "\1\67\1\0\1\41\1\0\1\41\1\0\1\41\3\0"+
    "\1\41\1\0\1\41\1\0\1\41\1\0\1\41\3\0"+
    "\1\41\1\0\1\41\1\0\1\41\30\0\2\70\37\0"+
    "\1\41\1\0\2\41\1\0\1\41\1\0\1\61\3\0"+
    "\2\41\1\0\1\41\1\0\1\41\1\0\1\41\1\0"+
    "\1\41\1\70\1\71\1\0\1\41\1\0\1\41\1\0"+
    "\1\41\1\0\1\41\1\0\1\41\3\0\1\41\1\0"+
    "\1\41\1\0\1\41\1\0\1\41\3\0\1\41\1\0"+
    "\1\41\1\0\1\41\40\0\2\62\27\0\1\41\1\0"+
    "\2\41\1\0\1\41\1\0\1\61\3\0\2\41\1\0"+
    "\1\41\1\0\1\41\1\0\1\41\1\0\1\41\1\0"+
    "\1\41\1\0\1\41\1\0\1\41\1\0\1\41\1\62"+
    "\1\64\1\0\1\41\3\0\1\41\1\0\1\41\1\0"+
    "\1\41\1\0\1\41\3\0\1\41\1\0\1\41\1\0"+
    "\1\41\30\0\2\72\37\0\1\41\1\0\2\41\1\0"+
    "\1\41\1\0\1\61\3\0\2\41\1\0\1\41\1\0"+
    "\1\41\1\0\1\41\1\0\1\41\1\72\1\73\1\0"+
    "\1\41\1\0\1\41\1\0\1\41\1\0\1\41\1\0"+
    "\1\41\3\0\1\41\1\0\1\41\1\0\1\41\1\0"+
    "\1\41\3\0\1\41\1\0\1\41\1\0\1\41\2\0"+
    "\2\54\1\0\2\54\1\0\1\54\1\0\1\74\3\0"+
    "\2\54\1\0\1\54\1\0\1\54\1\0\1\54\1\0"+
    "\1\54\1\0\1\54\1\0\1\54\1\0\1\54\1\0"+
    "\1\54\1\0\1\54\1\0\2\54\2\0\1\54\1\0"+
    "\1\54\1\0\1\54\1\0\1\54\3\0\1\54\1\0"+
    "\1\54\1\0\1\54\3\0\1\75\65\0\1\76\1\0"+
    "\2\34\1\0\1\34\1\0\1\54\3\0\2\34\1\0"+
    "\1\34\1\0\1\34\1\0\1\34\1\0\1\34\1\0"+
    "\1\34\1\0\1\34\1\0\1\34\1\0\1\34\1\0"+
    "\1\34\1\0\1\34\3\0\1\34\1\0\1\34\1\0"+
    "\1\34\1\0\1\34\3\0\1\34\1\0\1\34\1\0"+
    "\1\34\22\0\2\77\45\0\1\34\1\0\2\34\1\0"+
    "\1\34\1\0\1\54\3\0\2\34\1\0\1\34\1\77"+
    "\1\100\1\0\1\34\1\0\1\34\1\0\1\34\1\0"+
    "\1\34\1\0\1\34\1\0\1\34\1\0\1\34\1\0"+
    "\1\34\3\0\1\34\1\0\1\34\1\0\1\34\1\0"+
    "\1\34\3\0\1\34\1\0\1\34\1\0\1\34\2\0"+
    "\2\61\1\0\2\61\1\0\1\61\1\0\1\101\3\0"+
    "\2\61\1\0\1\61\1\0\1\61\1\0\1\61\1\0"+
    "\1\61\1\0\1\61\1\0\1\61\1\0\1\61\1\0"+
    "\1\61\1\0\1\61\1\0\2\61\2\0\1\61\1\0"+
    "\1\61\1\0\1\61\1\0\1\61\3\0\1\61\1\0"+
    "\1\61\1\0\1\61\36\0\2\102\31\0\1\103\65\0"+
    "\1\41\1\0\2\41\1\0\1\41\1\0\1\61\3\0"+
    "\2\41\1\0\1\41\1\0\1\41\1\0\1\41\1\0"+
    "\1\41\1\0\1\41\1\0\1\41\1\0\1\41\1\102"+
    "\1\104\1\0\1\41\1\0\1\41\3\0\1\41\1\0"+
    "\1\41\1\0\1\41\1\0\1\41\3\0\1\41\1\0"+
    "\1\41\1\0\1\41\3\0\1\105\1\0\2\41\1\0"+
    "\1\41\1\0\1\61\3\0\2\41\1\0\1\41\1\0"+
    "\1\41\1\0\1\41\1\0\1\41\1\0\1\41\1\0"+
    "\1\41\1\0\1\41\1\0\1\41\1\0\1\41\1\0"+
    "\1\41\3\0\1\41\1\0\1\41\1\0\1\41\1\0"+
    "\1\41\3\0\1\41\1\0\1\41\1\0\1\41\5\0"+
    "\1\106\5\0\1\106\55\0\1\41\1\0\1\107\1\41"+
    "\1\0\1\41\1\0\1\61\1\106\2\0\2\41\1\0"+
    "\1\41\1\0\1\41\1\0\1\41\1\0\1\41\1\0"+
    "\1\41\1\0\1\41\1\0\1\41\1\0\1\41\1\0"+
    "\1\41\1\0\1\41\3\0\1\41\1\0\1\41\1\0"+
    "\1\41\1\0\1\41\3\0\1\41\1\0\1\41\1\0"+
    "\1\41\22\0\2\110\45\0\1\41\1\0\2\41\1\0"+
    "\1\41\1\0\1\61\3\0\2\41\1\0\1\41\1\110"+
    "\1\111\1\0\1\41\1\0\1\41\1\0\1\41\1\0"+
    "\1\41\1\0\1\41\1\0\1\41\1\0\1\41\1\0"+
    "\1\41\3\0\1\41\1\0\1\41\1\0\1\41\1\0"+
    "\1\41\3\0\1\41\1\0\1\41\1\0\1\41\22\0"+
    "\2\112\45\0\1\41\1\0\2\41\1\0\1\41\1\0"+
    "\1\61\3\0\2\41\1\0\1\41\1\112\1\113\1\0"+
    "\1\41\1\0\1\41\1\0\1\41\1\0\1\41\1\0"+
    "\1\41\1\0\1\41\1\0\1\41\1\0\1\41\3\0"+
    "\1\41\1\0\1\41\1\0\1\41\1\0\1\41\3\0"+
    "\1\41\1\0\1\41\1\0\1\41\44\0\1\114\41\0"+
    "\2\115\30\0\2\116\15\0\1\34\1\0\2\34\1\0"+
    "\1\34\1\0\1\54\3\0\2\34\1\115\1\117\1\0"+
    "\1\34\1\0\1\34\1\0\1\34\1\0\1\34\1\0"+
    "\1\34\1\0\1\34\1\0\1\34\1\0\1\34\1\0"+
    "\1\34\3\0\1\34\1\0\1\34\1\116\1\120\1\0"+
    "\1\34\3\0\1\34\1\0\1\34\1\0\1\34\3\0"+
    "\1\121\65\0\1\122\1\0\2\34\1\0\1\34\1\0"+
    "\1\54\3\0\2\34\1\0\1\34\1\0\1\34\1\0"+
    "\1\34\1\0\1\34\1\0\1\34\1\0\1\34\1\0"+
    "\1\34\1\0\1\34\1\0\1\34\1\0\1\34\3\0"+
    "\1\34\1\0\1\34\1\0\1\34\1\0\1\34\3\0"+
    "\1\34\1\0\1\34\1\0\1\34\44\0\1\123\101\0"+
    "\2\124\24\0\2\125\30\0\2\126\15\0\1\41\1\0"+
    "\2\41\1\0\1\41\1\0\1\61\3\0\2\41\1\0"+
    "\1\41\1\0\1\41\1\0\1\41\1\0\1\41\1\0"+
    "\1\41\1\0\1\41\1\0\1\41\1\0\1\41\1\0"+
    "\1\41\1\0\1\41\3\0\1\41\1\0\1\41\1\0"+
    "\1\41\1\0\1\41\2\0\1\124\1\127\1\0\1\41"+
    "\1\0\1\41\3\0\1\41\1\0\2\41\1\0\1\41"+
    "\1\0\1\61\3\0\2\41\1\125\1\130\1\0\1\41"+
    "\1\0\1\41\1\0\1\41\1\0\1\41\1\0\1\41"+
    "\1\0\1\41\1\0\1\41\1\0\1\41\1\0\1\41"+
    "\3\0\1\41\1\0\1\41\1\126\1\131\1\0\1\41"+
    "\3\0\1\41\1\0\1\41\1\0\1\41\40\0\2\132"+
    "\27\0\1\41\1\0\2\41\1\0\1\41\1\0\1\61"+
    "\3\0\2\41\1\0\1\41\1\0\1\41\1\0\1\41"+
    "\1\0\1\41\1\0\1\41\1\0\1\41\1\0\1\41"+
    "\1\0\1\41\1\132\1\133\1\0\1\41\3\0\1\41"+
    "\1\0\1\41\1\0\1\41\1\0\1\41\3\0\1\41"+
    "\1\0\1\41\1\0\1\41\40\0\2\134\27\0\1\41"+
    "\1\0\2\41\1\0\1\41\1\0\1\61\3\0\2\41"+
    "\1\0\1\41\1\0\1\41\1\0\1\41\1\0\1\41"+
    "\1\0\1\41\1\0\1\41\1\0\1\41\1\0\1\41"+
    "\1\134\1\135\1\0\1\41\3\0\1\41\1\0\1\41"+
    "\1\0\1\41\1\0\1\41\3\0\1\41\1\0\1\41"+
    "\1\0\1\41\3\0\1\136\65\0\1\137\1\0\2\41"+
    "\1\0\1\41\1\0\1\61\3\0\2\41\1\0\1\41"+
    "\1\0\1\41\1\0\1\41\1\0\1\41\1\0\1\41"+
    "\1\0\1\41\1\0\1\41\1\0\1\41\1\0\1\41"+
    "\1\0\1\41\3\0\1\41\1\0\1\41\1\0\1\41"+
    "\1\0\1\41\3\0\1\41\1\0\1\41\1\0\1\41"+
    "\44\0\1\114\12\0\1\140\42\0\2\141\60\0\2\142"+
    "\37\0\1\34\1\0\2\34\1\0\1\34\1\0\1\54"+
    "\3\0\2\34\1\0\1\34\1\0\1\34\1\0\1\34"+
    "\1\0\1\34\1\0\1\34\1\0\1\34\1\141\1\143"+
    "\1\0\1\34\1\0\1\34\1\0\1\34\3\0\1\34"+
    "\1\0\1\34\1\0\1\34\1\0\1\34\3\0\1\34"+
    "\1\0\1\34\1\0\1\34\3\0\1\34\1\0\2\34"+
    "\1\0\1\34\1\0\1\54\3\0\2\34\1\0\1\34"+
    "\1\0\1\34\1\0\1\34\1\0\1\34\1\142\1\144"+
    "\1\0\1\34\1\0\1\34\1\0\1\34\1\0\1\34"+
    "\1\0\1\34\3\0\1\34\1\0\1\34\1\0\1\34"+
    "\1\0\1\34\3\0\1\34\1\0\1\34\1\0\1\34"+
    "\20\0\2\145\47\0\1\34\1\0\2\34\1\0\1\34"+
    "\1\0\1\54\3\0\2\34\1\145\1\146\1\0\1\34"+
    "\1\0\1\34\1\0\1\34\1\0\1\34\1\0\1\34"+
    "\1\0\1\34\1\0\1\34\1\0\1\34\1\0\1\34"+
    "\3\0\1\34\1\0\1\34\1\0\1\34\1\0\1\34"+
    "\3\0\1\34\1\0\1\34\1\0\1\34\44\0\1\123"+
    "\12\0\1\147\20\0\1\150\107\0\2\151\60\0\2\152"+
    "\37\0\1\41\1\0\2\41\1\0\1\41\1\0\1\150"+
    "\3\0\2\41\1\0\1\41\1\0\1\41\1\0\1\41"+
    "\1\0\1\41\1\0\1\41\1\0\1\41\1\0\1\41"+
    "\1\0\1\41\1\0\1\41\1\0\1\41\3\0\1\41"+
    "\1\0\1\41\1\0\1\41\1\0\1\41\3\0\1\41"+
    "\1\0\1\41\1\0\1\41\3\0\1\41\1\0\2\41"+
    "\1\0\1\41\1\0\1\61\3\0\2\41\1\0\1\41"+
    "\1\0\1\41\1\0\1\41\1\0\1\41\1\0\1\41"+
    "\1\0\1\41\1\151\1\153\1\0\1\41\1\0\1\41"+
    "\1\0\1\41\3\0\1\41\1\0\1\41\1\0\1\41"+
    "\1\0\1\41\3\0\1\41\1\0\1\41\1\0\1\41"+
    "\3\0\1\41\1\0\2\41\1\0\1\41\1\0\1\61"+
    "\3\0\2\41\1\0\1\41\1\0\1\41\1\0\1\41"+
    "\1\0\1\41\1\152\1\154\1\0\1\41\1\0\1\41"+
    "\1\0\1\41\1\0\1\41\1\0\1\41\3\0\1\41"+
    "\1\0\1\41\1\0\1\41\1\0\1\41\3\0\1\41"+
    "\1\0\1\41\1\0\1\41\32\0\2\155\35\0\1\41"+
    "\1\0\2\41\1\0\1\41\1\0\1\61\3\0\2\41"+
    "\1\0\1\41\1\0\1\41\1\0\1\41\1\0\1\41"+
    "\1\0\1\41\1\155\1\156\1\0\1\41\1\0\1\41"+
    "\1\0\1\41\1\0\1\41\3\0\1\41\1\0\1\41"+
    "\1\0\1\41\1\0\1\41\3\0\1\41\1\0\1\41"+
    "\1\0\1\41\42\0\2\157\25\0\1\41\1\0\2\41"+
    "\1\0\1\41\1\0\1\61\3\0\2\41\1\0\1\41"+
    "\1\0\1\41\1\0\1\41\1\0\1\41\1\0\1\41"+
    "\1\0\1\41\1\0\1\41\1\0\1\41\1\0\1\41"+
    "\1\157\1\160\3\0\1\41\1\0\1\41\1\0\1\41"+
    "\1\0\1\41\3\0\1\41\1\0\1\41\1\0\1\41"+
    "\20\0\2\161\47\0\1\41\1\0\2\41\1\0\1\41"+
    "\1\0\1\61\3\0\2\41\1\161\1\162\1\0\1\41"+
    "\1\0\1\41\1\0\1\41\1\0\1\41\1\0\1\41"+
    "\1\0\1\41\1\0\1\41\1\0\1\41\1\0\1\41"+
    "\3\0\1\41\1\0\1\41\1\0\1\41\1\0\1\41"+
    "\3\0\1\41\1\0\1\41\1\0\1\41\36\0\2\163"+
    "\64\0\2\164\31\0\1\34\1\0\2\34\1\0\1\34"+
    "\1\0\1\54\3\0\2\34\1\0\1\34\1\0\1\34"+
    "\1\0\1\34\1\0\1\34\1\0\1\34\1\0\1\34"+
    "\1\0\1\34\1\163\1\165\1\0\1\34\1\0\1\34"+
    "\3\0\1\34\1\0\1\34\1\0\1\34\1\0\1\34"+
    "\3\0\1\34\1\0\1\34\1\0\1\34\3\0\1\34"+
    "\1\0\2\34\1\0\1\34\1\0\1\54\3\0\2\34"+
    "\1\0\1\34\1\0\1\34\1\0\1\34\1\0\1\34"+
    "\1\0\1\34\1\0\1\34\1\0\1\34\1\164\1\166"+
    "\1\0\1\34\1\0\1\34\3\0\1\34\1\0\1\34"+
    "\1\0\1\34\1\0\1\34\3\0\1\34\1\0\1\34"+
    "\1\0\1\34\34\0\2\167\33\0\1\34\1\0\2\34"+
    "\1\0\1\34\1\0\1\54\3\0\2\34\1\0\1\34"+
    "\1\0\1\34\1\0\1\34\1\0\1\34\1\0\1\34"+
    "\1\0\1\34\1\167\1\170\1\0\1\34\1\0\1\34"+
    "\1\0\1\34\3\0\1\34\1\0\1\34\1\0\1\34"+
    "\1\0\1\34\3\0\1\34\1\0\1\34\1\0\1\34"+
    "\56\171\1\0\7\171\2\0\2\150\1\0\2\150\1\0"+
    "\1\150\1\0\1\172\3\0\2\150\1\0\1\150\1\0"+
    "\1\150\1\0\1\150\1\0\1\150\1\0\1\150\1\0"+
    "\1\150\1\0\1\150\1\0\1\150\1\0\1\150\1\0"+
    "\2\150\2\0\1\150\1\0\1\150\1\0\1\150\1\0"+
    "\1\150\3\0\1\150\1\0\1\150\1\0\1\150\36\0"+
    "\2\173\64\0\2\174\31\0\1\41\1\0\2\41\1\0"+
    "\1\41\1\0\1\61\3\0\2\41\1\0\1\41\1\0"+
    "\1\41\1\0\1\41\1\0\1\41\1\0\1\41\1\0"+
    "\1\41\1\0\1\41\1\173\1\175\1\0\1\41\1\0"+
    "\1\41\3\0\1\41\1\0\1\41\1\0\1\41\1\0"+
    "\1\41\3\0\1\41\1\0\1\41\1\0\1\41\3\0"+
    "\1\41\1\0\2\41\1\0\1\41\1\0\1\61\3\0"+
    "\2\41\1\0\1\41\1\0\1\41\1\0\1\41\1\0"+
    "\1\41\1\0\1\41\1\0\1\41\1\0\1\41\1\174"+
    "\1\176\1\0\1\41\1\0\1\41\3\0\1\41\1\0"+
    "\1\41\1\0\1\41\1\0\1\41\3\0\1\41\1\0"+
    "\1\41\1\0\1\41\40\0\2\177\27\0\1\41\1\0"+
    "\2\41\1\0\1\41\1\0\1\61\3\0\2\41\1\0"+
    "\1\41\1\0\1\41\1\0\1\41\1\0\1\41\1\0"+
    "\1\41\1\0\1\41\1\0\1\41\1\0\1\41\1\177"+
    "\1\200\1\0\1\41\3\0\1\41\1\0\1\41\1\0"+
    "\1\41\1\0\1\41\3\0\1\41\1\0\1\41\1\0"+
    "\1\41\5\0\1\124\5\0\1\124\55\0\1\41\1\0"+
    "\1\127\1\41\1\0\1\41\1\0\1\61\1\124\2\0"+
    "\2\41\1\0\1\41\1\0\1\41\1\0\1\41\1\0"+
    "\1\41\1\0\1\41\1\0\1\41\1\0\1\41\1\0"+
    "\1\41\1\0\1\41\1\0\1\41\3\0\1\41\1\0"+
    "\1\41\1\0\1\41\1\0\1\41\3\0\1\41\1\0"+
    "\1\41\1\0\1\41\34\0\2\201\33\0\1\41\1\0"+
    "\2\41\1\0\1\41\1\0\1\61\3\0\2\41\1\0"+
    "\1\41\1\0\1\41\1\0\1\41\1\0\1\41\1\0"+
    "\1\41\1\0\1\41\1\201\1\202\1\0\1\41\1\0"+
    "\1\41\1\0\1\41\3\0\1\41\1\0\1\41\1\0"+
    "\1\41\1\0\1\41\3\0\1\41\1\0\1\41\1\0"+
    "\1\41\62\0\2\203\22\0\2\204\47\0\1\34\1\0"+
    "\2\34\1\0\1\34\1\0\1\54\3\0\2\34\1\0"+
    "\1\34\1\0\1\34\1\0\1\34\1\0\1\34\1\0"+
    "\1\34\1\0\1\34\1\0\1\34\1\0\1\34\1\0"+
    "\1\34\1\0\1\34\3\0\1\34\1\0\1\34\1\0"+
    "\1\34\1\0\1\34\3\0\1\34\1\203\1\205\1\0"+
    "\1\34\3\0\1\34\1\0\2\34\1\0\1\34\1\0"+
    "\1\54\3\0\2\34\1\204\1\206\1\0\1\34\1\0"+
    "\1\34\1\0\1\34\1\0\1\34\1\0\1\34\1\0"+
    "\1\34\1\0\1\34\1\0\1\34\1\0\1\34\3\0"+
    "\1\34\1\0\1\34\1\0\1\34\1\0\1\34\3\0"+
    "\1\34\1\0\1\34\1\0\1\34\36\0\2\207\31\0"+
    "\1\34\1\0\2\34\1\0\1\34\1\0\1\54\3\0"+
    "\2\34\1\0\1\34\1\0\1\34\1\0\1\34\1\0"+
    "\1\34\1\0\1\34\1\0\1\34\1\0\1\34\1\207"+
    "\1\210\1\0\1\34\1\0\1\34\3\0\1\34\1\0"+
    "\1\34\1\0\1\34\1\0\1\34\3\0\1\34\1\0"+
    "\1\34\1\0\1\34\56\171\1\211\7\171\44\0\1\212"+
    "\103\0\2\213\22\0\2\214\47\0\1\41\1\0\2\41"+
    "\1\0\1\41\1\0\1\61\3\0\2\41\1\0\1\41"+
    "\1\0\1\41\1\0\1\41\1\0\1\41\1\0\1\41"+
    "\1\0\1\41\1\0\1\41\1\0\1\41\1\0\1\41"+
    "\1\0\1\41\3\0\1\41\1\0\1\41\1\0\1\41"+
    "\1\0\1\41\3\0\1\41\1\213\1\215\1\0\1\41"+
    "\3\0\1\41\1\0\2\41\1\0\1\41\1\0\1\61"+
    "\3\0\2\41\1\214\1\216\1\0\1\41\1\0\1\41"+
    "\1\0\1\41\1\0\1\41\1\0\1\41\1\0\1\41"+
    "\1\0\1\41\1\0\1\41\1\0\1\41\3\0\1\41"+
    "\1\0\1\41\1\0\1\41\1\0\1\41\3\0\1\41"+
    "\1\0\1\41\1\0\1\41\10\0\1\217\4\0\1\217"+
    "\53\0\1\41\1\0\2\41\1\0\1\220\1\0\1\61"+
    "\2\0\1\217\2\41\1\0\1\41\1\0\1\41\1\0"+
    "\1\41\1\0\1\41\1\0\1\41\1\0\1\41\1\0"+
    "\1\41\1\0\1\41\1\0\1\41\1\0\1\41\3\0"+
    "\1\41\1\0\1\41\1\0\1\41\1\0\1\41\3\0"+
    "\1\41\1\0\1\41\1\0\1\41\36\0\2\221\31\0"+
    "\1\41\1\0\2\41\1\0\1\41\1\0\1\61\3\0"+
    "\2\41\1\0\1\41\1\0\1\41\1\0\1\41\1\0"+
    "\1\41\1\0\1\41\1\0\1\41\1\0\1\41\1\221"+
    "\1\222\1\0\1\41\1\0\1\41\3\0\1\41\1\0"+
    "\1\41\1\0\1\41\1\0\1\41\3\0\1\41\1\0"+
    "\1\41\1\0\1\41\12\0\1\223\105\0\2\224\35\0"+
    "\1\34\1\0\2\34\1\0\1\34\1\0\1\225\3\0"+
    "\2\34\1\0\1\34\1\0\1\34\1\0\1\34\1\0"+
    "\1\34\1\0\1\34\1\0\1\34\1\0\1\34\1\0"+
    "\1\34\1\0\1\34\1\0\1\34\3\0\1\34\1\0"+
    "\1\34\1\0\1\34\1\0\1\34\3\0\1\34\1\0"+
    "\1\34\1\0\1\34\3\0\1\34\1\0\2\34\1\0"+
    "\1\34\1\0\1\54\3\0\2\34\1\0\1\34\1\0"+
    "\1\34\1\0\1\34\1\0\1\34\1\0\1\34\1\224"+
    "\1\226\1\0\1\34\1\0\1\34\1\0\1\34\1\0"+
    "\1\34\3\0\1\34\1\0\1\34\1\0\1\34\1\0"+
    "\1\34\3\0\1\34\1\0\1\34\1\0\1\34\62\0"+
    "\2\227\5\0\1\34\1\0\2\34\1\0\1\34\1\0"+
    "\1\54\3\0\2\34\1\0\1\34\1\0\1\34\1\0"+
    "\1\34\1\0\1\34\1\0\1\34\1\0\1\34\1\0"+
    "\1\34\1\0\1\34\1\0\1\34\1\0\1\34\3\0"+
    "\1\34\1\0\1\34\1\0\1\34\1\0\1\34\3\0"+
    "\1\34\1\227\1\230\1\0\1\34\45\0\1\231\64\0"+
    "\1\212\12\0\1\232\20\0\1\233\105\0\2\234\35\0"+
    "\1\41\1\0\2\41\1\0\1\41\1\0\1\233\3\0"+
    "\2\41\1\0\1\41\1\0\1\41\1\0\1\41\1\0"+
    "\1\41\1\0\1\41\1\0\1\41\1\0\1\41\1\0"+
    "\1\41\1\0\1\41\1\0\1\41\3\0\1\41\1\0"+
    "\1\41\1\0\1\41\1\0\1\41\3\0\1\41\1\0"+
    "\1\41\1\0\1\41\3\0\1\41\1\0\2\41\1\0"+
    "\1\41\1\0\1\61\3\0\2\41\1\0\1\41\1\0"+
    "\1\41\1\0\1\41\1\0\1\41\1\0\1\41\1\234"+
    "\1\235\1\0\1\41\1\0\1\41\1\0\1\41\1\0"+
    "\1\41\3\0\1\41\1\0\1\41\1\0\1\41\1\0"+
    "\1\41\3\0\1\41\1\0\1\41\1\0\1\41\20\0"+
    "\2\236\47\0\1\41\1\0\2\41\1\0\1\41\1\0"+
    "\1\61\3\0\2\41\1\236\1\237\1\0\1\41\1\0"+
    "\1\41\1\0\1\41\1\0\1\41\1\0\1\41\1\0"+
    "\1\41\1\0\1\41\1\0\1\41\1\0\1\41\3\0"+
    "\1\41\1\0\1\41\1\0\1\41\1\0\1\41\3\0"+
    "\1\41\1\0\1\41\1\0\1\41\62\0\2\240\5\0"+
    "\1\41\1\0\2\41\1\0\1\41\1\0\1\61\3\0"+
    "\2\41\1\0\1\41\1\0\1\41\1\0\1\41\1\0"+
    "\1\41\1\0\1\41\1\0\1\41\1\0\1\41\1\0"+
    "\1\41\1\0\1\41\1\0\1\41\3\0\1\41\1\0"+
    "\1\41\1\0\1\41\1\0\1\41\3\0\1\41\1\240"+
    "\1\241\1\0\1\41\2\0\2\223\1\0\2\223\1\0"+
    "\1\223\1\0\1\242\3\0\2\223\1\0\1\223\1\0"+
    "\1\223\1\0\1\223\1\0\1\223\1\0\1\223\1\0"+
    "\1\223\1\0\1\223\1\0\1\223\1\0\1\223\1\0"+
    "\2\223\2\0\1\223\1\0\1\223\1\0\1\223\1\0"+
    "\1\223\3\0\1\223\1\0\1\223\1\0\1\223\62\0"+
    "\2\243\4\0\2\225\1\0\2\225\1\0\1\225\1\0"+
    "\1\244\3\0\2\225\1\0\1\225\1\0\1\225\1\0"+
    "\1\225\1\0\1\225\1\0\1\225\1\0\1\225\1\0"+
    "\1\225\1\0\1\225\1\0\1\225\1\0\2\225\2\0"+
    "\1\225\1\0\1\225\1\0\1\225\1\0\1\225\3\0"+
    "\1\225\1\0\1\225\1\0\1\225\3\0\1\34\1\0"+
    "\2\34\1\0\1\34\1\0\1\54\3\0\2\34\1\0"+
    "\1\34\1\0\1\34\1\0\1\34\1\0\1\34\1\0"+
    "\1\34\1\0\1\34\1\0\1\34\1\0\1\34\1\0"+
    "\1\34\1\0\1\34\3\0\1\34\1\0\1\34\1\0"+
    "\1\34\1\0\1\34\3\0\1\34\1\243\1\245\1\0"+
    "\1\34\12\0\1\246\56\0\1\34\1\0\2\34\1\0"+
    "\1\34\1\0\1\247\3\0\2\34\1\0\1\34\1\0"+
    "\1\34\1\0\1\34\1\0\1\34\1\0\1\34\1\0"+
    "\1\34\1\0\1\34\1\0\1\34\1\0\1\34\1\0"+
    "\1\34\3\0\1\34\1\0\1\34\1\0\1\34\1\0"+
    "\1\34\3\0\1\34\1\0\1\34\1\0\1\34\50\0"+
    "\2\250\14\0\56\251\1\0\7\251\2\0\2\233\1\0"+
    "\2\233\1\0\1\233\1\0\1\252\3\0\2\233\1\0"+
    "\1\233\1\0\1\233\1\0\1\233\1\0\1\233\1\0"+
    "\1\233\1\0\1\233\1\0\1\233\1\0\1\233\1\0"+
    "\1\233\1\0\2\233\2\0\1\233\1\0\1\233\1\0"+
    "\1\233\1\0\1\233\3\0\1\233\1\0\1\233\1\0"+
    "\1\233\62\0\2\253\5\0\1\41\1\0\2\41\1\0"+
    "\1\41\1\0\1\61\3\0\2\41\1\0\1\41\1\0"+
    "\1\41\1\0\1\41\1\0\1\41\1\0\1\41\1\0"+
    "\1\41\1\0\1\41\1\0\1\41\1\0\1\41\1\0"+
    "\1\41\3\0\1\41\1\0\1\41\1\0\1\41\1\0"+
    "\1\41\3\0\1\41\1\253\1\254\1\0\1\41\50\0"+
    "\2\50\17\0\1\41\1\0\2\41\1\0\1\41\1\0"+
    "\1\61\3\0\2\41\1\0\1\41\1\0\1\41\1\0"+
    "\1\41\1\0\1\41\1\0\1\41\1\0\1\41\1\0"+
    "\1\41\1\0\1\41\1\0\1\41\1\0\1\41\3\0"+
    "\1\41\1\50\1\51\1\0\1\41\1\0\1\41\3\0"+
    "\1\41\1\0\1\41\1\0\1\41\12\0\1\255\56\0"+
    "\1\41\1\0\2\41\1\0\1\41\1\0\1\256\3\0"+
    "\2\41\1\0\1\41\1\0\1\41\1\0\1\41\1\0"+
    "\1\41\1\0\1\41\1\0\1\41\1\0\1\41\1\0"+
    "\1\41\1\0\1\41\1\0\1\41\3\0\1\41\1\0"+
    "\1\41\1\0\1\41\1\0\1\41\3\0\1\41\1\0"+
    "\1\41\1\0\1\41\44\0\1\257\51\0\2\260\100\0"+
    "\1\261\24\0\1\34\1\0\2\34\1\0\1\34\1\0"+
    "\1\54\3\0\2\34\1\0\1\34\1\0\1\34\1\0"+
    "\1\34\1\0\1\34\1\260\1\262\1\0\1\34\1\0"+
    "\1\34\1\0\1\34\1\0\1\34\1\0\1\34\3\0"+
    "\1\34\1\0\1\34\1\0\1\34\1\0\1\34\3\0"+
    "\1\34\1\0\1\34\1\0\1\34\40\0\2\263\26\0"+
    "\2\54\1\0\2\54\1\0\1\54\1\0\1\74\3\0"+
    "\2\54\1\0\1\54\1\0\1\54\1\0\1\54\1\0"+
    "\1\54\1\0\1\54\1\0\1\54\1\0\1\54\1\0"+
    "\1\54\1\263\1\264\1\0\2\54\2\0\1\54\1\0"+
    "\1\54\1\0\1\54\1\0\1\54\3\0\1\54\1\0"+
    "\1\54\1\0\1\54\54\0\2\265\10\0\56\251\1\266"+
    "\7\251\44\0\1\267\51\0\2\270\37\0\1\41\1\0"+
    "\2\41\1\0\1\41\1\0\1\61\3\0\2\41\1\0"+
    "\1\41\1\0\1\41\1\0\1\41\1\0\1\41\1\270"+
    "\1\271\1\0\1\41\1\0\1\41\1\0\1\41\1\0"+
    "\1\41\1\0\1\41\3\0\1\41\1\0\1\41\1\0"+
    "\1\41\1\0\1\41\3\0\1\41\1\0\1\41\1\0"+
    "\1\41\40\0\2\272\26\0\2\61\1\0\2\61\1\0"+
    "\1\61\1\0\1\101\3\0\2\61\1\0\1\61\1\0"+
    "\1\61\1\0\1\61\1\0\1\61\1\0\1\61\1\0"+
    "\1\61\1\0\1\61\1\0\1\61\1\272\1\273\1\0"+
    "\2\61\2\0\1\61\1\0\1\61\1\0\1\61\1\0"+
    "\1\61\3\0\1\61\1\0\1\61\1\0\1\61\44\0"+
    "\1\257\12\0\1\274\60\0\2\275\56\0\1\261\12\0"+
    "\1\276\11\0\1\34\1\0\2\34\1\0\1\34\1\0"+
    "\1\54\3\0\2\34\1\0\1\34\1\0\1\34\1\0"+
    "\1\34\1\0\1\34\1\0\1\34\1\0\1\34\1\0"+
    "\1\34\1\0\1\34\1\0\1\34\1\0\1\34\3\0"+
    "\1\34\1\0\1\34\1\275\1\277\1\0\1\34\3\0"+
    "\1\34\1\0\1\34\1\0\1\34\36\0\2\300\30\0"+
    "\2\54\1\0\2\54\1\0\1\54\1\0\1\74\3\0"+
    "\2\54\1\0\1\54\1\0\1\54\1\0\1\54\1\0"+
    "\1\54\1\0\1\54\1\0\1\54\1\0\1\54\1\300"+
    "\1\301\1\0\1\54\1\0\2\54\2\0\1\54\1\0"+
    "\1\54\1\0\1\54\1\0\1\54\3\0\1\54\1\0"+
    "\1\54\1\0\1\54\5\0\1\302\5\0\1\302\117\0"+
    "\1\303\64\0\1\267\12\0\1\304\60\0\2\305\15\0"+
    "\1\41\1\0\2\41\1\0\1\41\1\0\1\61\3\0"+
    "\2\41\1\0\1\41\1\0\1\41\1\0\1\41\1\0"+
    "\1\41\1\0\1\41\1\0\1\41\1\0\1\41\1\0"+
    "\1\41\1\0\1\41\1\0\1\41\3\0\1\41\1\0"+
    "\1\41\1\305\1\306\1\0\1\41\3\0\1\41\1\0"+
    "\1\41\1\0\1\41\36\0\2\307\30\0\2\61\1\0"+
    "\2\61\1\0\1\61\1\0\1\101\3\0\2\61\1\0"+
    "\1\61\1\0\1\61\1\0\1\61\1\0\1\61\1\0"+
    "\1\61\1\0\1\61\1\0\1\61\1\307\1\310\1\0"+
    "\1\61\1\0\2\61\2\0\1\61\1\0\1\61\1\0"+
    "\1\61\1\0\1\61\3\0\1\61\1\0\1\61\1\0"+
    "\1\61\56\311\1\0\7\311\3\0\1\312\65\0\1\313"+
    "\1\0\2\34\1\0\1\34\1\0\1\54\3\0\2\34"+
    "\1\0\1\34\1\0\1\34\1\0\1\34\1\0\1\34"+
    "\1\0\1\34\1\0\1\34\1\0\1\34\1\0\1\34"+
    "\1\0\1\34\1\0\1\34\3\0\1\34\1\0\1\34"+
    "\1\0\1\34\1\0\1\34\3\0\1\34\1\0\1\34"+
    "\1\0\1\34\3\0\1\314\64\0\1\54\1\315\1\0"+
    "\2\54\1\0\1\54\1\0\1\74\3\0\2\54\1\0"+
    "\1\54\1\0\1\54\1\0\1\54\1\0\1\54\1\0"+
    "\1\54\1\0\1\54\1\0\1\54\1\0\1\54\1\0"+
    "\1\54\1\0\2\54\2\0\1\54\1\0\1\54\1\0"+
    "\1\54\1\0\1\54\3\0\1\54\1\0\1\54\1\0"+
    "\1\54\57\0\1\316\56\0\2\317\14\0\56\320\1\0"+
    "\7\320\3\0\1\321\65\0\1\322\1\0\2\41\1\0"+
    "\1\41\1\0\1\61\3\0\2\41\1\0\1\41\1\0"+
    "\1\41\1\0\1\41\1\0\1\41\1\0\1\41\1\0"+
    "\1\41\1\0\1\41\1\0\1\41\1\0\1\41\1\0"+
    "\1\41\3\0\1\41\1\0\1\41\1\0\1\41\1\0"+
    "\1\41\3\0\1\41\1\0\1\41\1\0\1\41\3\0"+
    "\1\323\64\0\1\61\1\324\1\0\2\61\1\0\1\61"+
    "\1\0\1\101\3\0\2\61\1\0\1\61\1\0\1\61"+
    "\1\0\1\61\1\0\1\61\1\0\1\61\1\0\1\61"+
    "\1\0\1\61\1\0\1\61\1\0\1\61\1\0\2\61"+
    "\2\0\1\61\1\0\1\61\1\0\1\61\1\0\1\61"+
    "\3\0\1\61\1\0\1\61\1\0\1\61\56\311\1\325"+
    "\7\311\7\0\1\326\7\0\1\326\51\0\1\34\1\0"+
    "\2\34\1\326\1\34\1\0\1\54\3\0\1\34\1\327"+
    "\1\0\1\34\1\0\1\34\1\0\1\34\1\0\1\34"+
    "\1\0\1\34\1\0\1\34\1\0\1\34\1\0\1\34"+
    "\1\0\1\34\1\0\1\34\3\0\1\34\1\0\1\34"+
    "\1\0\1\34\1\0\1\34\3\0\1\34\1\0\1\34"+
    "\1\0\1\34\10\0\1\330\4\0\1\330\6\0\2\331"+
    "\20\0\2\332\20\0\2\54\1\0\2\54\1\0\1\333"+
    "\1\0\1\74\2\0\1\330\2\54\1\0\1\54\1\0"+
    "\1\54\1\331\1\334\1\0\1\54\1\0\1\54\1\0"+
    "\1\54\1\0\1\54\1\0\1\54\1\0\1\54\1\0"+
    "\2\54\1\0\1\332\1\335\1\0\1\54\1\0\1\54"+
    "\1\0\1\54\3\0\1\54\1\0\1\54\1\0\1\54"+
    "\54\0\2\336\10\0\56\320\1\337\7\320\7\0\1\340"+
    "\7\0\1\340\51\0\1\41\1\0\2\41\1\340\1\41"+
    "\1\0\1\61\3\0\1\41\1\341\1\0\1\41\1\0"+
    "\1\41\1\0\1\41\1\0\1\41\1\0\1\41\1\0"+
    "\1\41\1\0\1\41\1\0\1\41\1\0\1\41\1\0"+
    "\1\41\3\0\1\41\1\0\1\41\1\0\1\41\1\0"+
    "\1\41\3\0\1\41\1\0\1\41\1\0\1\41\10\0"+
    "\1\342\4\0\1\342\6\0\2\343\20\0\2\344\20\0"+
    "\2\61\1\0\2\61\1\0\1\345\1\0\1\101\2\0"+
    "\1\342\2\61\1\0\1\61\1\0\1\61\1\343\1\346"+
    "\1\0\1\61\1\0\1\61\1\0\1\61\1\0\1\61"+
    "\1\0\1\61\1\0\1\61\1\0\2\61\1\0\1\344"+
    "\1\347\1\0\1\61\1\0\1\61\1\0\1\61\3\0"+
    "\1\61\1\0\1\61\1\0\1\61\45\0\1\350\50\0"+
    "\2\351\37\0\1\34\1\0\2\34\1\0\1\34\1\0"+
    "\1\54\3\0\2\34\1\0\1\34\1\0\1\34\1\0"+
    "\1\34\1\0\1\34\1\351\1\352\1\0\1\34\1\0"+
    "\1\34\1\0\1\34\1\0\1\34\1\0\1\34\3\0"+
    "\1\34\1\0\1\34\1\0\1\34\1\0\1\34\3\0"+
    "\1\34\1\0\1\34\1\0\1\34\24\0\2\353\70\0"+
    "\2\354\70\0\2\355\32\0\2\54\1\0\2\54\1\0"+
    "\1\54\1\0\1\74\3\0\2\54\1\0\1\54\1\0"+
    "\1\54\1\353\1\356\1\0\1\54\1\0\1\54\1\0"+
    "\1\54\1\0\1\54\1\0\1\54\1\0\1\54\1\0"+
    "\2\54\2\0\1\54\1\0\1\54\1\0\1\54\1\0"+
    "\1\54\3\0\1\54\1\0\1\54\1\0\1\54\2\0"+
    "\2\54\1\0\2\54\1\0\1\54\1\0\1\74\3\0"+
    "\2\54\1\0\1\54\1\0\1\54\1\0\1\54\1\0"+
    "\1\54\1\354\1\357\1\0\1\54\1\0\1\54\1\0"+
    "\1\54\1\0\1\54\1\0\2\54\2\0\1\54\1\0"+
    "\1\54\1\0\1\54\1\0\1\54\3\0\1\54\1\0"+
    "\1\54\1\0\1\54\2\0\2\54\1\0\2\54\1\0"+
    "\1\54\1\0\1\74\3\0\2\54\1\0\1\54\1\0"+
    "\1\54\1\0\1\54\1\0\1\54\1\0\1\54\1\0"+
    "\1\54\1\355\1\360\1\0\1\54\1\0\1\54\1\0"+
    "\2\54\2\0\1\54\1\0\1\54\1\0\1\54\1\0"+
    "\1\54\3\0\1\54\1\0\1\54\1\0\1\54\5\0"+
    "\1\361\5\0\1\361\117\0\1\362\50\0\2\363\37\0"+
    "\1\41\1\0\2\41\1\0\1\41\1\0\1\61\3\0"+
    "\2\41\1\0\1\41\1\0\1\41\1\0\1\41\1\0"+
    "\1\41\1\363\1\364\1\0\1\41\1\0\1\41\1\0"+
    "\1\41\1\0\1\41\1\0\1\41\3\0\1\41\1\0"+
    "\1\41\1\0\1\41\1\0\1\41\3\0\1\41\1\0"+
    "\1\41\1\0\1\41\24\0\2\365\70\0\2\366\70\0"+
    "\2\367\32\0\2\61\1\0\2\61\1\0\1\61\1\0"+
    "\1\101\3\0\2\61\1\0\1\61\1\0\1\61\1\365"+
    "\1\370\1\0\1\61\1\0\1\61\1\0\1\61\1\0"+
    "\1\61\1\0\1\61\1\0\1\61\1\0\2\61\2\0"+
    "\1\61\1\0\1\61\1\0\1\61\1\0\1\61\3\0"+
    "\1\61\1\0\1\61\1\0\1\61\2\0\2\61\1\0"+
    "\2\61\1\0\1\61\1\0\1\101\3\0\2\61\1\0"+
    "\1\61\1\0\1\61\1\0\1\61\1\0\1\61\1\366"+
    "\1\371\1\0\1\61\1\0\1\61\1\0\1\61\1\0"+
    "\1\61\1\0\2\61\2\0\1\61\1\0\1\61\1\0"+
    "\1\61\1\0\1\61\3\0\1\61\1\0\1\61\1\0"+
    "\1\61\2\0\2\61\1\0\2\61\1\0\1\61\1\0"+
    "\1\101\3\0\2\61\1\0\1\61\1\0\1\61\1\0"+
    "\1\61\1\0\1\61\1\0\1\61\1\0\1\61\1\367"+
    "\1\372\1\0\1\61\1\0\1\61\1\0\2\61\2\0"+
    "\1\61\1\0\1\61\1\0\1\61\1\0\1\61\3\0"+
    "\1\61\1\0\1\61\1\0\1\61\50\0\2\373\46\0"+
    "\2\374\35\0\1\34\1\0\2\34\1\0\1\34\1\0"+
    "\1\54\3\0\2\34\1\0\1\34\1\0\1\34\1\0"+
    "\1\34\1\0\1\34\1\0\1\34\1\374\1\375\1\0"+
    "\1\34\1\0\1\34\1\0\1\34\1\0\1\34\3\0"+
    "\1\34\1\0\1\34\1\0\1\34\1\0\1\34\3\0"+
    "\1\34\1\0\1\34\1\0\1\34\42\0\2\376\44\0"+
    "\2\377\47\0\1\u0100\5\0\1\u0100\54\0\2\54\1\0"+
    "\2\54\1\0\1\54\1\0\1\74\3\0\2\54\1\0"+
    "\1\54\1\0\1\54\1\0\1\54\1\0\1\54\1\0"+
    "\1\54\1\0\1\54\1\0\1\54\1\0\1\54\1\0"+
    "\1\54\1\376\1\u0101\1\54\2\0\1\54\1\0\1\54"+
    "\1\0\1\54\1\0\1\54\3\0\1\54\1\0\1\54"+
    "\1\0\1\54\2\0\2\54\1\0\2\54\1\0\1\54"+
    "\1\0\1\74\3\0\2\54\1\0\1\54\1\377\1\u0102"+
    "\1\0\1\54\1\0\1\54\1\0\1\54\1\0\1\54"+
    "\1\0\1\54\1\0\1\54\1\0\1\54\1\0\2\54"+
    "\2\0\1\54\1\0\1\54\1\0\1\54\1\0\1\54"+
    "\3\0\1\54\1\0\1\54\1\0\1\54\2\0\2\54"+
    "\1\0\1\u0103\1\54\1\0\1\54\1\0\1\74\1\u0100"+
    "\2\0\2\54\1\0\1\54\1\0\1\54\1\0\1\54"+
    "\1\0\1\54\1\0\1\54\1\0\1\54\1\0\1\54"+
    "\1\0\1\54\1\0\1\54\1\0\2\54\2\0\1\54"+
    "\1\0\1\54\1\0\1\54\1\0\1\54\3\0\1\54"+
    "\1\0\1\54\1\0\1\54\57\0\1\u0104\56\0\2\u0105"+
    "\46\0\2\u0106\35\0\1\41\1\0\2\41\1\0\1\41"+
    "\1\0\1\61\3\0\2\41\1\0\1\41\1\0\1\41"+
    "\1\0\1\41\1\0\1\41\1\0\1\41\1\u0106\1\u0107"+
    "\1\0\1\41\1\0\1\41\1\0\1\41\1\0\1\41"+
    "\3\0\1\41\1\0\1\41\1\0\1\41\1\0\1\41"+
    "\3\0\1\41\1\0\1\41\1\0\1\41\42\0\2\u0108"+
    "\44\0\2\u0109\47\0\1\u010a\5\0\1\u010a\54\0\2\61"+
    "\1\0\2\61\1\0\1\61\1\0\1\101\3\0\2\61"+
    "\1\0\1\61\1\0\1\61\1\0\1\61\1\0\1\61"+
    "\1\0\1\61\1\0\1\61\1\0\1\61\1\0\1\61"+
    "\1\0\1\61\1\u0108\1\u010b\1\61\2\0\1\61\1\0"+
    "\1\61\1\0\1\61\1\0\1\61\3\0\1\61\1\0"+
    "\1\61\1\0\1\61\2\0\2\61\1\0\2\61\1\0"+
    "\1\61\1\0\1\101\3\0\2\61\1\0\1\61\1\u0109"+
    "\1\u010c\1\0\1\61\1\0\1\61\1\0\1\61\1\0"+
    "\1\61\1\0\1\61\1\0\1\61\1\0\1\61\1\0"+
    "\2\61\2\0\1\61\1\0\1\61\1\0\1\61\1\0"+
    "\1\61\3\0\1\61\1\0\1\61\1\0\1\61\2\0"+
    "\2\61\1\0\1\u010d\1\61\1\0\1\61\1\0\1\101"+
    "\1\u010a\2\0\2\61\1\0\1\61\1\0\1\61\1\0"+
    "\1\61\1\0\1\61\1\0\1\61\1\0\1\61\1\0"+
    "\1\61\1\0\1\61\1\0\1\61\1\0\2\61\2\0"+
    "\1\61\1\0\1\61\1\0\1\61\1\0\1\61\3\0"+
    "\1\61\1\0\1\61\1\0\1\61\54\0\2\u010e\46\0"+
    "\2\u010f\31\0\1\34\1\0\2\34\1\0\1\34\1\0"+
    "\1\54\3\0\2\34\1\0\1\34\1\0\1\34\1\0"+
    "\1\34\1\0\1\34\1\0\1\34\1\0\1\34\1\0"+
    "\1\34\1\u010f\1\u0110\1\0\1\34\1\0\1\34\3\0"+
    "\1\34\1\0\1\34\1\0\1\34\1\0\1\34\3\0"+
    "\1\34\1\0\1\34\1\0\1\34\26\0\2\u0111\76\0"+
    "\2\u0112\64\0\2\u0113\26\0\2\54\1\0\2\54\1\0"+
    "\1\54\1\0\1\74\3\0\2\54\1\0\1\54\1\0"+
    "\1\54\1\0\1\54\1\u0111\1\u0114\1\0\1\54\1\0"+
    "\1\54\1\0\1\54\1\0\1\54\1\0\1\54\1\0"+
    "\2\54\2\0\1\54\1\0\1\54\1\0\1\54\1\0"+
    "\1\54\3\0\1\54\1\0\1\54\1\0\1\54\2\0"+
    "\2\54\1\0\2\54\1\0\1\54\1\0\1\74\3\0"+
    "\2\54\1\0\1\54\1\0\1\54\1\0\1\54\1\0"+
    "\1\54\1\0\1\54\1\0\1\54\1\0\1\54\1\0"+
    "\1\54\1\u0112\1\u0115\1\0\2\54\2\0\1\54\1\0"+
    "\1\54\1\0\1\54\1\0\1\54\3\0\1\54\1\0"+
    "\1\54\1\0\1\54\2\0\2\54\1\0\2\54\1\0"+
    "\1\54\1\0\1\74\3\0\2\54\1\0\1\54\1\0"+
    "\1\54\1\0\1\54\1\0\1\54\1\0\1\54\1\0"+
    "\1\54\1\0\1\54\1\0\1\54\1\u0113\1\u0116\1\0"+
    "\2\54\2\0\1\54\1\0\1\54\1\0\1\54\1\0"+
    "\1\54\3\0\1\54\1\0\1\54\1\0\1\54\54\0"+
    "\2\u0117\46\0\2\u0118\31\0\1\41\1\0\2\41\1\0"+
    "\1\41\1\0\1\61\3\0\2\41\1\0\1\41\1\0"+
    "\1\41\1\0\1\41\1\0\1\41\1\0\1\41\1\0"+
    "\1\41\1\0\1\41\1\u0118\1\u0119\1\0\1\41\1\0"+
    "\1\41\3\0\1\41\1\0\1\41\1\0\1\41\1\0"+
    "\1\41\3\0\1\41\1\0\1\41\1\0\1\41\26\0"+
    "\2\u011a\76\0\2\u011b\64\0\2\u011c\26\0\2\61\1\0"+
    "\2\61\1\0\1\61\1\0\1\101\3\0\2\61\1\0"+
    "\1\61\1\0\1\61\1\0\1\61\1\u011a\1\u011d\1\0"+
    "\1\61\1\0\1\61\1\0\1\61\1\0\1\61\1\0"+
    "\1\61\1\0\2\61\2\0\1\61\1\0\1\61\1\0"+
    "\1\61\1\0\1\61\3\0\1\61\1\0\1\61\1\0"+
    "\1\61\2\0\2\61\1\0\2\61\1\0\1\61\1\0"+
    "\1\101\3\0\2\61\1\0\1\61\1\0\1\61\1\0"+
    "\1\61\1\0\1\61\1\0\1\61\1\0\1\61\1\0"+
    "\1\61\1\0\1\61\1\u011b\1\u011e\1\0\2\61\2\0"+
    "\1\61\1\0\1\61\1\0\1\61\1\0\1\61\3\0"+
    "\1\61\1\0\1\61\1\0\1\61\2\0\2\61\1\0"+
    "\2\61\1\0\1\61\1\0\1\101\3\0\2\61\1\0"+
    "\1\61\1\0\1\61\1\0\1\61\1\0\1\61\1\0"+
    "\1\61\1\0\1\61\1\0\1\61\1\0\1\61\1\u011c"+
    "\1\u011f\1\0\2\61\2\0\1\61\1\0\1\61\1\0"+
    "\1\61\1\0\1\61\3\0\1\61\1\0\1\61\1\0"+
    "\1\61\5\0\1\u0120\5\0\1\u0120\112\0\2\u0121\27\0"+
    "\1\34\1\0\2\34\1\0\1\34\1\0\1\54\3\0"+
    "\2\34\1\0\1\34\1\0\1\34\1\0\1\34\1\0"+
    "\1\34\1\0\1\34\1\0\1\34\1\0\1\34\1\0"+
    "\1\34\1\u0121\1\u0122\1\0\1\34\3\0\1\34\1\0"+
    "\1\34\1\0\1\34\1\0\1\34\3\0\1\34\1\0"+
    "\1\34\1\0\1\34\40\0\2\u0123\66\0\2\u0124\54\0"+
    "\2\u0125\34\0\2\54\1\0\2\54\1\0\1\54\1\0"+
    "\1\74\3\0\2\54\1\0\1\54\1\0\1\54\1\0"+
    "\1\54\1\0\1\54\1\0\1\54\1\0\1\54\1\0"+
    "\1\54\1\0\1\54\1\u0123\1\u0126\1\0\2\54\2\0"+
    "\1\54\1\0\1\54\1\0\1\54\1\0\1\54\3\0"+
    "\1\54\1\0\1\54\1\0\1\54\2\0\2\54\1\0"+
    "\2\54\1\0\1\54\1\0\1\74\3\0\2\54\1\0"+
    "\1\54\1\0\1\54\1\0\1\54\1\0\1\54\1\0"+
    "\1\54\1\0\1\54\1\0\1\54\1\0\1\54\1\0"+
    "\1\54\1\u0124\1\u0127\1\54\2\0\1\54\1\0\1\54"+
    "\1\0\1\54\1\0\1\54\3\0\1\54\1\0\1\54"+
    "\1\0\1\54\2\0\2\54\1\0\2\54\1\0\1\54"+
    "\1\0\1\74\3\0\2\54\1\0\1\54\1\0\1\54"+
    "\1\0\1\54\1\0\1\54\1\0\1\54\1\u0125\1\u0128"+
    "\1\0\1\54\1\0\1\54\1\0\1\54\1\0\2\54"+
    "\2\0\1\54\1\0\1\54\1\0\1\54\1\0\1\54"+
    "\3\0\1\54\1\0\1\54\1\0\1\54\5\0\1\u0129"+
    "\5\0\1\u0129\112\0\2\u012a\27\0\1\41\1\0\2\41"+
    "\1\0\1\41\1\0\1\61\3\0\2\41\1\0\1\41"+
    "\1\0\1\41\1\0\1\41\1\0\1\41\1\0\1\41"+
    "\1\0\1\41\1\0\1\41\1\0\1\41\1\u012a\1\u012b"+
    "\1\0\1\41\3\0\1\41\1\0\1\41\1\0\1\41"+
    "\1\0\1\41\3\0\1\41\1\0\1\41\1\0\1\41"+
    "\40\0\2\u012c\66\0\2\u012d\54\0\2\u012e\34\0\2\61"+
    "\1\0\2\61\1\0\1\61\1\0\1\101\3\0\2\61"+
    "\1\0\1\61\1\0\1\61\1\0\1\61\1\0\1\61"+
    "\1\0\1\61\1\0\1\61\1\0\1\61\1\0\1\61"+
    "\1\u012c\1\u012f\1\0\2\61\2\0\1\61\1\0\1\61"+
    "\1\0\1\61\1\0\1\61\3\0\1\61\1\0\1\61"+
    "\1\0\1\61\2\0\2\61\1\0\2\61\1\0\1\61"+
    "\1\0\1\101\3\0\2\61\1\0\1\61\1\0\1\61"+
    "\1\0\1\61\1\0\1\61\1\0\1\61\1\0\1\61"+
    "\1\0\1\61\1\0\1\61\1\0\1\61\1\u012d\1\u0130"+
    "\1\61\2\0\1\61\1\0\1\61\1\0\1\61\1\0"+
    "\1\61\3\0\1\61\1\0\1\61\1\0\1\61\2\0"+
    "\2\61\1\0\2\61\1\0\1\61\1\0\1\101\3\0"+
    "\2\61\1\0\1\61\1\0\1\61\1\0\1\61\1\0"+
    "\1\61\1\0\1\61\1\u012e\1\u0131\1\0\1\61\1\0"+
    "\1\61\1\0\1\61\1\0\2\61\2\0\1\61\1\0"+
    "\1\61\1\0\1\61\1\0\1\61\3\0\1\61\1\0"+
    "\1\61\1\0\1\61\57\0\1\u0132\50\0\2\u0133\25\0"+
    "\1\34\1\0\2\34\1\0\1\34\1\0\1\54\3\0"+
    "\2\34\1\0\1\34\1\0\1\34\1\0\1\34\1\0"+
    "\1\34\1\0\1\34\1\0\1\34\1\0\1\34\1\0"+
    "\1\34\1\0\1\34\1\u0133\1\u0134\3\0\1\34\1\0"+
    "\1\34\1\0\1\34\1\0\1\34\3\0\1\34\1\0"+
    "\1\34\1\0\1\34\5\0\1\u0135\5\0\1\u0135\57\0"+
    "\1\u0136\5\0\1\u0136\112\0\2\u0137\26\0\2\54\1\0"+
    "\1\u0138\1\54\1\0\1\54\1\0\1\74\1\u0135\2\0"+
    "\2\54\1\0\1\54\1\0\1\54\1\0\1\54\1\0"+
    "\1\54\1\0\1\54\1\0\1\54\1\0\1\54\1\0"+
    "\1\54\1\0\1\54\1\0\2\54\2\0\1\54\1\0"+
    "\1\54\1\0\1\54\1\0\1\54\3\0\1\54\1\0"+
    "\1\54\1\0\1\54\2\0\2\54\1\0\1\u0139\1\54"+
    "\1\0\1\54\1\0\1\74\1\u0136\2\0\2\54\1\0"+
    "\1\54\1\0\1\54\1\0\1\54\1\0\1\54\1\0"+
    "\1\54\1\0\1\54\1\0\1\54\1\0\1\54\1\0"+
    "\1\54\1\0\2\54\2\0\1\54\1\0\1\54\1\0"+
    "\1\54\1\0\1\54\3\0\1\54\1\0\1\54\1\0"+
    "\1\54\2\0\2\54\1\0\2\54\1\0\1\54\1\0"+
    "\1\74\3\0\2\54\1\0\1\54\1\0\1\54\1\0"+
    "\1\54\1\0\1\54\1\0\1\54\1\0\1\54\1\0"+
    "\1\54\1\0\1\54\1\u0137\1\u013a\1\0\2\54\2\0"+
    "\1\54\1\0\1\54\1\0\1\54\1\0\1\54\3\0"+
    "\1\54\1\0\1\54\1\0\1\54\57\0\1\u013b\50\0"+
    "\2\u013c\25\0\1\41\1\0\2\41\1\0\1\41\1\0"+
    "\1\61\3\0\2\41\1\0\1\41\1\0\1\41\1\0"+
    "\1\41\1\0\1\41\1\0\1\41\1\0\1\41\1\0"+
    "\1\41\1\0\1\41\1\0\1\41\1\u013c\1\u013d\3\0"+
    "\1\41\1\0\1\41\1\0\1\41\1\0\1\41\3\0"+
    "\1\41\1\0\1\41\1\0\1\41\5\0\1\u013e\5\0"+
    "\1\u013e\57\0\1\u013f\5\0\1\u013f\112\0\2\u0140\26\0"+
    "\2\61\1\0\1\u0141\1\61\1\0\1\61\1\0\1\101"+
    "\1\u013e\2\0\2\61\1\0\1\61\1\0\1\61\1\0"+
    "\1\61\1\0\1\61\1\0\1\61\1\0\1\61\1\0"+
    "\1\61\1\0\1\61\1\0\1\61\1\0\2\61\2\0"+
    "\1\61\1\0\1\61\1\0\1\61\1\0\1\61\3\0"+
    "\1\61\1\0\1\61\1\0\1\61\2\0\2\61\1\0"+
    "\1\u0142\1\61\1\0\1\61\1\0\1\101\1\u013f\2\0"+
    "\2\61\1\0\1\61\1\0\1\61\1\0\1\61\1\0"+
    "\1\61\1\0\1\61\1\0\1\61\1\0\1\61\1\0"+
    "\1\61\1\0\1\61\1\0\2\61\2\0\1\61\1\0"+
    "\1\61\1\0\1\61\1\0\1\61\3\0\1\61\1\0"+
    "\1\61\1\0\1\61\2\0\2\61\1\0\2\61\1\0"+
    "\1\61\1\0\1\101\3\0\2\61\1\0\1\61\1\0"+
    "\1\61\1\0\1\61\1\0\1\61\1\0\1\61\1\0"+
    "\1\61\1\0\1\61\1\0\1\61\1\u0140\1\u0143\1\0"+
    "\2\61\2\0\1\61\1\0\1\61\1\0\1\61\1\0"+
    "\1\61\3\0\1\61\1\0\1\61\1\0\1\61\1\0"+
    "\3\u0132\1\u0144\4\0\2\u0132\43\0\1\u0145\14\0\1\203"+
    "\5\0\1\203\55\0\1\34\1\0\1\205\1\34\1\0"+
    "\1\34\1\0\1\54\1\203\2\0\2\34\1\0\1\34"+
    "\1\0\1\34\1\0\1\34\1\0\1\34\1\0\1\34"+
    "\1\0\1\34\1\0\1\34\1\0\1\34\1\0\1\34"+
    "\1\0\1\34\3\0\1\34\1\0\1\34\1\0\1\34"+
    "\1\0\1\34\3\0\1\34\1\0\1\34\1\0\1\34"+
    "\32\0\2\u0146\52\0\2\u0147\54\0\1\u0148\4\0\1\u0148"+
    "\52\0\2\54\1\0\2\54\1\0\1\54\1\0\1\74"+
    "\3\0\2\54\1\0\1\54\1\0\1\54\1\0\1\54"+
    "\1\0\1\54\1\0\1\54\1\u0146\1\u0149\1\0\1\54"+
    "\1\0\1\54\1\0\1\54\1\0\2\54\2\0\1\54"+
    "\1\0\1\54\1\0\1\54\1\0\1\54\3\0\1\54"+
    "\1\0\1\54\1\0\1\54\2\0\2\54\1\0\2\54"+
    "\1\0\1\54\1\0\1\74\3\0\2\54\1\u0147\1\u014a"+
    "\1\0\1\54\1\0\1\54\1\0\1\54\1\0\1\54"+
    "\1\0\1\54\1\0\1\54\1\0\1\54\1\0\1\54"+
    "\1\0\2\54\2\0\1\54\1\0\1\54\1\0\1\54"+
    "\1\0\1\54\3\0\1\54\1\0\1\54\1\0\1\54"+
    "\2\0\2\54\1\0\2\54\1\0\1\u014b\1\0\1\74"+
    "\2\0\1\u0148\2\54\1\0\1\54\1\0\1\54\1\0"+
    "\1\54\1\0\1\54\1\0\1\54\1\0\1\54\1\0"+
    "\1\54\1\0\1\54\1\0\1\54\1\0\2\54\2\0"+
    "\1\54\1\0\1\54\1\0\1\54\1\0\1\54\3\0"+
    "\1\54\1\0\1\54\1\0\1\54\5\0\1\u014c\5\0"+
    "\1\u014c\55\0\1\41\1\0\1\u014d\1\41\1\0\1\41"+
    "\1\0\1\61\1\u014c\2\0\2\41\1\0\1\41\1\0"+
    "\1\41\1\0\1\41\1\0\1\41\1\0\1\41\1\0"+
    "\1\41\1\0\1\41\1\0\1\41\1\0\1\41\1\0"+
    "\1\41\3\0\1\41\1\0\1\41\1\0\1\41\1\0"+
    "\1\41\3\0\1\41\1\0\1\41\1\0\1\41\32\0"+
    "\2\u014e\52\0\2\u014f\54\0\1\u0150\4\0\1\u0150\52\0"+
    "\2\61\1\0\2\61\1\0\1\61\1\0\1\101\3\0"+
    "\2\61\1\0\1\61\1\0\1\61\1\0\1\61\1\0"+
    "\1\61\1\0\1\61\1\u014e\1\u0151\1\0\1\61\1\0"+
    "\1\61\1\0\1\61\1\0\2\61\2\0\1\61\1\0"+
    "\1\61\1\0\1\61\1\0\1\61\3\0\1\61\1\0"+
    "\1\61\1\0\1\61\2\0\2\61\1\0\2\61\1\0"+
    "\1\61\1\0\1\101\3\0\2\61\1\u014f\1\u0152\1\0"+
    "\1\61\1\0\1\61\1\0\1\61\1\0\1\61\1\0"+
    "\1\61\1\0\1\61\1\0\1\61\1\0\1\61\1\0"+
    "\2\61\2\0\1\61\1\0\1\61\1\0\1\61\1\0"+
    "\1\61\3\0\1\61\1\0\1\61\1\0\1\61\2\0"+
    "\2\61\1\0\2\61\1\0\1\u0153\1\0\1\101\2\0"+
    "\1\u0150\2\61\1\0\1\61\1\0\1\61\1\0\1\61"+
    "\1\0\1\61\1\0\1\61\1\0\1\61\1\0\1\61"+
    "\1\0\1\61\1\0\1\61\1\0\2\61\2\0\1\61"+
    "\1\0\1\61\1\0\1\61\1\0\1\61\3\0\1\61"+
    "\1\0\1\61\1\0\1\61\5\0\1\u0154\5\0\1\u0154"+
    "\122\0\2\u0155\54\0\2\u0136\74\0\2\u0156\34\0\2\u0157"+
    "\46\0\2\54\1\0\2\54\1\0\1\54\1\0\1\74"+
    "\3\0\2\54\1\0\1\54\1\0\1\54\1\0\1\54"+
    "\1\0\1\54\1\0\1\54\1\0\1\54\1\0\1\54"+
    "\1\0\1\54\1\u0136\1\u0139\1\0\2\54\2\0\1\54"+
    "\1\0\1\54\1\0\1\54\1\0\1\54\3\0\1\54"+
    "\1\0\1\54\1\0\1\54\2\0\2\54\1\0\2\54"+
    "\1\0\1\54\1\0\1\74\3\0\2\54\1\0\1\54"+
    "\1\0\1\54\1\0\1\54\1\0\1\54\1\0\1\54"+
    "\1\0\1\54\1\0\1\54\1\0\1\54\1\0\1\54"+
    "\1\0\2\54\2\0\1\54\1\u0156\1\u0158\1\0\1\54"+
    "\1\0\1\54\3\0\1\54\1\0\1\54\1\0\1\54"+
    "\2\0\2\54\1\0\2\54\1\0\1\54\1\0\1\74"+
    "\3\0\2\54\1\u0157\1\u0159\1\0\1\54\1\0\1\54"+
    "\1\0\1\54\1\0\1\54\1\0\1\54\1\0\1\54"+
    "\1\0\1\54\1\0\1\54\1\0\2\54\2\0\1\54"+
    "\1\0\1\54\1\0\1\54\1\0\1\54\3\0\1\54"+
    "\1\0\1\54\1\0\1\54\12\0\1\u015a\56\0\1\41"+
    "\1\0\2\41\1\0\1\41\1\0\1\u015a\3\0\2\41"+
    "\1\0\1\41\1\0\1\41\1\0\1\41\1\0\1\41"+
    "\1\0\1\41\1\0\1\41\1\0\1\41\1\0\1\41"+
    "\1\0\1\41\1\0\1\41\3\0\1\41\1\0\1\41"+
    "\1\0\1\41\1\0\1\41\3\0\1\41\1\0\1\41"+
    "\1\0\1\41\40\0\2\u013f\74\0\2\u015b\34\0\2\u015c"+
    "\46\0\2\61\1\0\2\61\1\0\1\61\1\0\1\101"+
    "\3\0\2\61\1\0\1\61\1\0\1\61\1\0\1\61"+
    "\1\0\1\61\1\0\1\61\1\0\1\61\1\0\1\61"+
    "\1\0\1\61\1\u013f\1\u0142\1\0\2\61\2\0\1\61"+
    "\1\0\1\61\1\0\1\61\1\0\1\61\3\0\1\61"+
    "\1\0\1\61\1\0\1\61\2\0\2\61\1\0\2\61"+
    "\1\0\1\61\1\0\1\101\3\0\2\61\1\0\1\61"+
    "\1\0\1\61\1\0\1\61\1\0\1\61\1\0\1\61"+
    "\1\0\1\61\1\0\1\61\1\0\1\61\1\0\1\61"+
    "\1\0\2\61\2\0\1\61\1\u015b\1\u015d\1\0\1\61"+
    "\1\0\1\61\3\0\1\61\1\0\1\61\1\0\1\61"+
    "\2\0\2\61\1\0\2\61\1\0\1\61\1\0\1\101"+
    "\3\0\2\61\1\u015c\1\u015e\1\0\1\61\1\0\1\61"+
    "\1\0\1\61\1\0\1\61\1\0\1\61\1\0\1\61"+
    "\1\0\1\61\1\0\1\61\1\0\2\61\2\0\1\61"+
    "\1\0\1\61\1\0\1\61\1\0\1\61\3\0\1\61"+
    "\1\0\1\61\1\0\1\61\6\0\1\u015f\5\0\1\u015f"+
    "\125\0\2\u0160\13\0\1\u0161\132\0\2\u0162\16\0\1\54"+
    "\1\u0163\1\0\2\54\1\0\1\54\1\0\1\74\3\0"+
    "\2\54\1\0\1\54\1\0\1\54\1\0\1\54\1\0"+
    "\1\54\1\0\1\54\1\0\1\54\1\0\1\54\1\0"+
    "\1\54\1\0\1\54\1\0\2\54\2\0\1\54\1\0"+
    "\1\54\1\0\1\54\1\0\1\54\3\0\1\54\1\0"+
    "\1\54\1\0\1\54\2\0\2\54\1\0\2\54\1\0"+
    "\1\54\1\0\1\74\3\0\2\54\1\0\1\54\1\0"+
    "\1\54\1\0\1\54\1\0\1\54\1\0\1\54\1\0"+
    "\1\54\1\0\1\54\1\0\1\54\1\0\1\54\1\0"+
    "\2\54\2\0\1\54\1\u0162\1\u0164\1\0\1\54\1\0"+
    "\1\54\3\0\1\54\1\0\1\54\1\0\1\54\2\0"+
    "\2\u015a\1\0\2\u015a\1\0\1\u015a\1\0\1\u0165\3\0"+
    "\2\u015a\1\0\1\u015a\1\0\1\u015a\1\0\1\u015a\1\0"+
    "\1\u015a\1\0\1\u015a\1\0\1\u015a\1\0\1\u015a\1\0"+
    "\1\u015a\1\0\1\u015a\1\0\2\u015a\2\0\1\u015a\1\0"+
    "\1\u015a\1\0\1\u015a\1\0\1\u015a\3\0\1\u015a\1\0"+
    "\1\u015a\1\0\1\u015a\3\0\1\u0166\132\0\2\u0167\16\0"+
    "\1\61\1\u0168\1\0\2\61\1\0\1\61\1\0\1\101"+
    "\3\0\2\61\1\0\1\61\1\0\1\61\1\0\1\61"+
    "\1\0\1\61\1\0\1\61\1\0\1\61\1\0\1\61"+
    "\1\0\1\61\1\0\1\61\1\0\2\61\2\0\1\61"+
    "\1\0\1\61\1\0\1\61\1\0\1\61\3\0\1\61"+
    "\1\0\1\61\1\0\1\61\2\0\2\61\1\0\2\61"+
    "\1\0\1\61\1\0\1\101\3\0\2\61\1\0\1\61"+
    "\1\0\1\61\1\0\1\61\1\0\1\61\1\0\1\61"+
    "\1\0\1\61\1\0\1\61\1\0\1\61\1\0\1\61"+
    "\1\0\2\61\2\0\1\61\1\u0167\1\u0169\1\0\1\61"+
    "\1\0\1\61\3\0\1\61\1\0\1\61\1\0\1\61"+
    "\7\0\1\u016a\7\0\1\u016a\53\0\1\u016b\5\0\1\u016b"+
    "\74\0\2\u016c\6\0\2\u016d\35\0\1\u0161\34\0\2\u016e"+
    "\26\0\2\54\1\0\2\54\1\0\1\54\1\0\1\74"+
    "\3\0\2\54\1\0\1\54\1\u016c\1\u016f\1\0\1\54"+
    "\1\0\1\54\1\0\1\54\1\u016d\1\u0170\1\0\1\54"+
    "\1\0\1\54\1\0\1\54\1\0\2\54\2\0\1\54"+
    "\1\0\1\54\1\0\1\54\1\0\1\54\3\0\1\54"+
    "\1\0\1\54\1\0\1\54\2\0\1\54\1\u0163\1\0"+
    "\2\54\1\0\1\54\1\0\1\74\3\0\2\54\1\0"+
    "\1\54\1\0\1\54\1\0\1\54\1\0\1\54\1\0"+
    "\1\54\1\0\1\54\1\0\1\54\1\0\1\54\1\u016e"+
    "\1\u0171\1\0\2\54\2\0\1\54\1\0\1\54\1\0"+
    "\1\54\1\0\1\54\3\0\1\54\1\0\1\54\1\0"+
    "\1\54\44\0\1\u0172\43\0\2\u0173\6\0\2\u0174\35\0"+
    "\1\u0166\34\0\2\u0175\26\0\2\61\1\0\2\61\1\0"+
    "\1\61\1\0\1\101\3\0\2\61\1\0\1\61\1\u0173"+
    "\1\u0176\1\0\1\61\1\0\1\61\1\0\1\61\1\u0174"+
    "\1\u0177\1\0\1\61\1\0\1\61\1\0\1\61\1\0"+
    "\2\61\2\0\1\61\1\0\1\61\1\0\1\61\1\0"+
    "\1\61\3\0\1\61\1\0\1\61\1\0\1\61\2\0"+
    "\1\61\1\u0168\1\0\2\61\1\0\1\61\1\0\1\101"+
    "\3\0\2\61\1\0\1\61\1\0\1\61\1\0\1\61"+
    "\1\0\1\61\1\0\1\61\1\0\1\61\1\0\1\61"+
    "\1\0\1\61\1\u0175\1\u0178\1\0\2\61\2\0\1\61"+
    "\1\0\1\61\1\0\1\61\1\0\1\61\3\0\1\61"+
    "\1\0\1\61\1\0\1\61\10\0\1\u0179\4\0\1\u0179"+
    "\62\0\1\u017a\113\0\2\u017b\66\0\2\u017c\60\0\2\u017d"+
    "\30\0\2\54\1\0\2\54\1\0\1\54\1\0\1\74"+
    "\3\0\2\54\1\0\1\54\1\0\1\54\1\0\1\54"+
    "\1\0\1\54\1\0\1\54\1\0\1\54\1\0\1\54"+
    "\1\0\1\54\1\u017b\1\u017e\1\0\2\54\2\0\1\54"+
    "\1\0\1\54\1\0\1\54\1\0\1\54\3\0\1\54"+
    "\1\0\1\54\1\0\1\54\2\0\2\54\1\0\2\54"+
    "\1\0\1\54\1\0\1\74\3\0\2\54\1\0\1\54"+
    "\1\0\1\54\1\0\1\54\1\0\1\54\1\0\1\54"+
    "\1\0\1\54\1\0\1\54\1\0\1\54\1\0\1\54"+
    "\1\u017c\1\u017f\1\54\2\0\1\54\1\0\1\54\1\0"+
    "\1\54\1\0\1\54\3\0\1\54\1\0\1\54\1\0"+
    "\1\54\2\0\2\54\1\0\2\54\1\0\1\54\1\0"+
    "\1\74\3\0\2\54\1\0\1\54\1\0\1\54\1\0"+
    "\1\54\1\0\1\54\1\0\1\54\1\0\1\54\1\0"+
    "\1\54\1\u017d\1\u0180\1\0\1\54\1\0\2\54\2\0"+
    "\1\54\1\0\1\54\1\0\1\54\1\0\1\54\3\0"+
    "\1\54\1\0\1\54\1\0\1\54\44\0\1\u0172\12\0"+
    "\1\u0181\46\0\2\u0182\66\0\2\u0183\60\0\2\u0184\30\0"+
    "\2\61\1\0\2\61\1\0\1\61\1\0\1\101\3\0"+
    "\2\61\1\0\1\61\1\0\1\61\1\0\1\61\1\0"+
    "\1\61\1\0\1\61\1\0\1\61\1\0\1\61\1\0"+
    "\1\61\1\u0182\1\u0185\1\0\2\61\2\0\1\61\1\0"+
    "\1\61\1\0\1\61\1\0\1\61\3\0\1\61\1\0"+
    "\1\61\1\0\1\61\2\0\2\61\1\0\2\61\1\0"+
    "\1\61\1\0\1\101\3\0\2\61\1\0\1\61\1\0"+
    "\1\61\1\0\1\61\1\0\1\61\1\0\1\61\1\0"+
    "\1\61\1\0\1\61\1\0\1\61\1\0\1\61\1\u0183"+
    "\1\u0186\1\61\2\0\1\61\1\0\1\61\1\0\1\61"+
    "\1\0\1\61\3\0\1\61\1\0\1\61\1\0\1\61"+
    "\2\0\2\61\1\0\2\61\1\0\1\61\1\0\1\101"+
    "\3\0\2\61\1\0\1\61\1\0\1\61\1\0\1\61"+
    "\1\0\1\61\1\0\1\61\1\0\1\61\1\0\1\61"+
    "\1\u0184\1\u0187\1\0\1\61\1\0\2\61\2\0\1\61"+
    "\1\0\1\61\1\0\1\61\1\0\1\61\3\0\1\61"+
    "\1\0\1\61\1\0\1\61\11\0\1\u0132\63\0\1\u0188"+
    "\7\0\1\u0188\12\0\2\u0189\12\0\2\u018a\52\0\2\u018b"+
    "\64\0\2\u018c\110\0\2\u018d\6\0\2\54\1\0\2\54"+
    "\1\0\1\54\1\0\1\74\3\0\2\54\1\0\1\54"+
    "\1\0\1\54\1\0\1\54\1\0\1\54\1\0\1\54"+
    "\1\0\1\54\1\u018b\1\u018e\1\0\1\54\1\0\1\54"+
    "\1\0\2\54\2\0\1\54\1\0\1\54\1\0\1\54"+
    "\1\0\1\54\3\0\1\54\1\0\1\54\1\0\1\54"+
    "\2\0\2\54\1\0\2\54\1\0\1\54\1\0\1\74"+
    "\3\0\2\54\1\0\1\54\1\0\1\54\1\0\1\54"+
    "\1\0\1\54\1\0\1\54\1\0\1\54\1\u018c\1\u018f"+
    "\1\0\1\54\1\0\1\54\1\0\2\54\2\0\1\54"+
    "\1\0\1\54\1\0\1\54\1\0\1\54\3\0\1\54"+
    "\1\0\1\54\1\0\1\54\2\0\2\54\1\0\2\54"+
    "\1\0\1\54\1\0\1\74\3\0\2\54\1\0\1\54"+
    "\1\0\1\54\1\0\1\54\1\0\1\54\1\0\1\54"+
    "\1\0\1\54\1\0\1\54\1\0\1\54\1\0\1\54"+
    "\1\0\2\54\2\0\1\54\1\0\1\54\1\0\1\54"+
    "\1\0\1\54\2\0\1\u018d\1\u0190\1\0\1\54\1\0"+
    "\1\54\56\u0191\1\0\7\u0191\34\0\2\u0192\64\0\2\u0193"+
    "\110\0\2\u0194\6\0\2\61\1\0\2\61\1\0\1\61"+
    "\1\0\1\101\3\0\2\61\1\0\1\61\1\0\1\61"+
    "\1\0\1\61\1\0\1\61\1\0\1\61\1\0\1\61"+
    "\1\u0192\1\u0195\1\0\1\61\1\0\1\61\1\0\2\61"+
    "\2\0\1\61\1\0\1\61\1\0\1\61\1\0\1\61"+
    "\3\0\1\61\1\0\1\61\1\0\1\61\2\0\2\61"+
    "\1\0\2\61\1\0\1\61\1\0\1\101\3\0\2\61"+
    "\1\0\1\61\1\0\1\61\1\0\1\61\1\0\1\61"+
    "\1\0\1\61\1\0\1\61\1\u0193\1\u0196\1\0\1\61"+
    "\1\0\1\61\1\0\2\61\2\0\1\61\1\0\1\61"+
    "\1\0\1\61\1\0\1\61\3\0\1\61\1\0\1\61"+
    "\1\0\1\61\2\0\2\61\1\0\2\61\1\0\1\61"+
    "\1\0\1\101\3\0\2\61\1\0\1\61\1\0\1\61"+
    "\1\0\1\61\1\0\1\61\1\0\1\61\1\0\1\61"+
    "\1\0\1\61\1\0\1\61\1\0\1\61\1\0\2\61"+
    "\2\0\1\61\1\0\1\61\1\0\1\61\1\0\1\61"+
    "\2\0\1\u0194\1\u0197\1\0\1\61\1\0\1\61\36\0"+
    "\2\u0198\66\0\2\u0199\60\0\2\u019a\35\0\1\u019b\5\0"+
    "\1\u019b\57\0\1\u019c\5\0\1\u019c\64\0\1\u019d\55\0"+
    "\2\54\1\0\1\u019e\1\54\1\0\1\54\1\0\1\74"+
    "\1\u019b\2\0\2\54\1\0\1\54\1\0\1\54\1\0"+
    "\1\54\1\0\1\54\1\0\1\54\1\0\1\54\1\0"+
    "\1\54\1\0\1\54\1\0\1\54\1\0\2\54\2\0"+
    "\1\54\1\0\1\54\1\0\1\54\1\0\1\54\3\0"+
    "\1\54\1\0\1\54\1\0\1\54\2\0\2\54\1\0"+
    "\1\u019f\1\54\1\0\1\54\1\0\1\74\1\u019c\2\0"+
    "\2\54\1\0\1\54\1\0\1\54\1\0\1\54\1\0"+
    "\1\54\1\0\1\54\1\0\1\54\1\0\1\54\1\0"+
    "\1\54\1\0\1\54\1\0\2\54\2\0\1\54\1\0"+
    "\1\54\1\0\1\54\1\0\1\54\3\0\1\54\1\0"+
    "\1\54\1\0\1\54\2\0\2\54\1\0\2\54\1\0"+
    "\1\54\1\0\1\u01a0\3\0\2\54\1\0\1\54\1\0"+
    "\1\54\1\0\1\54\1\0\1\54\1\0\1\54\1\0"+
    "\1\54\1\0\1\54\1\0\1\54\1\0\1\54\1\0"+
    "\2\54\2\0\1\54\1\0\1\54\1\0\1\54\1\0"+
    "\1\54\3\0\1\54\1\0\1\54\1\0\1\54\56\u0191"+
    "\1\u01a1\7\u0191\5\0\1\u01a2\5\0\1\u01a2\57\0\1\u01a3"+
    "\5\0\1\u01a3\64\0\1\252\55\0\2\61\1\0\1\u01a4"+
    "\1\61\1\0\1\61\1\0\1\101\1\u01a2\2\0\2\61"+
    "\1\0\1\61\1\0\1\61\1\0\1\61\1\0\1\61"+
    "\1\0\1\61\1\0\1\61\1\0\1\61\1\0\1\61"+
    "\1\0\1\61\1\0\2\61\2\0\1\61\1\0\1\61"+
    "\1\0\1\61\1\0\1\61\3\0\1\61\1\0\1\61"+
    "\1\0\1\61\2\0\2\61\1\0\1\u01a5\1\61\1\0"+
    "\1\61\1\0\1\101\1\u01a3\2\0\2\61\1\0\1\61"+
    "\1\0\1\61\1\0\1\61\1\0\1\61\1\0\1\61"+
    "\1\0\1\61\1\0\1\61\1\0\1\61\1\0\1\61"+
    "\1\0\2\61\2\0\1\61\1\0\1\61\1\0\1\61"+
    "\1\0\1\61\3\0\1\61\1\0\1\61\1\0\1\61"+
    "\2\0\2\61\1\0\2\61\1\0\1\61\1\0\1\252"+
    "\3\0\2\61\1\0\1\61\1\0\1\61\1\0\1\61"+
    "\1\0\1\61\1\0\1\61\1\0\1\61\1\0\1\61"+
    "\1\0\1\61\1\0\1\61\1\0\2\61\2\0\1\61"+
    "\1\0\1\61\1\0\1\61\1\0\1\61\3\0\1\61"+
    "\1\0\1\61\1\0\1\61\10\0\1\u01a6\4\0\1\u01a6"+
    "\106\0\2\u01a7\33\0\1\u01a8\5\0\1\u01a8\110\0\2\u01a9"+
    "\60\0\2\u01aa\76\0\1\u01ab\23\0\2\54\1\0\2\54"+
    "\1\0\1\54\1\0\1\74\3\0\2\54\1\0\1\54"+
    "\1\0\1\54\1\0\1\54\1\0\1\54\1\0\1\54"+
    "\1\0\1\54\1\0\1\54\1\u01a9\1\u01ac\1\0\1\54"+
    "\1\0\2\54\2\0\1\54\1\0\1\54\1\0\1\54"+
    "\1\0\1\54\3\0\1\54\1\0\1\54\1\0\1\54"+
    "\2\0\2\54\1\0\2\54\1\0\1\54\1\0\1\74"+
    "\3\0\2\54\1\0\1\54\1\0\1\54\1\0\1\54"+
    "\1\0\1\54\1\0\1\54\1\u01aa\1\u01ad\1\0\1\54"+
    "\1\0\1\54\1\0\1\54\1\0\2\54\2\0\1\54"+
    "\1\0\1\54\1\0\1\54\1\0\1\54\3\0\1\54"+
    "\1\0\1\54\1\0\1\54\44\0\1\u01ae\66\0\1\u01af"+
    "\56\0\2\u01b0\60\0\2\u01b1\34\0\2\61\1\0\2\61"+
    "\1\0\1\61\1\0\1\101\3\0\2\61\1\0\1\61"+
    "\1\0\1\61\1\0\1\61\1\0\1\61\1\0\1\61"+
    "\1\0\1\61\1\0\1\61\1\u01b0\1\u01b2\1\0\1\61"+
    "\1\0\2\61\2\0\1\61\1\0\1\61\1\0\1\61"+
    "\1\0\1\61\3\0\1\61\1\0\1\61\1\0\1\61"+
    "\2\0\2\61\1\0\2\61\1\0\1\61\1\0\1\101"+
    "\3\0\2\61\1\0\1\61\1\0\1\61\1\0\1\61"+
    "\1\0\1\61\1\0\1\61\1\u01b1\1\u01b3\1\0\1\61"+
    "\1\0\1\61\1\0\1\61\1\0\2\61\2\0\1\61"+
    "\1\0\1\61\1\0\1\61\1\0\1\61\3\0\1\61"+
    "\1\0\1\61\1\0\1\61\64\0\2\203\60\0\2\u01b4"+
    "\44\0\2\u01b5\44\0\2\u018d\104\0\2\u01b6\70\0\1\u01ab"+
    "\12\0\1\u01b7\10\0\2\54\1\0\2\54\1\0\1\54"+
    "\1\0\1\74\3\0\2\54\1\u018d\1\u0190\1\0\1\54"+
    "\1\0\1\54\1\0\1\54\1\0\1\54\1\0\1\54"+
    "\1\0\1\54\1\0\1\54\1\0\1\54\1\0\2\54"+
    "\2\0\1\54\1\0\1\54\1\0\1\54\1\0\1\54"+
    "\3\0\1\54\1\0\1\54\1\0\1\54\2\0\2\54"+
    "\1\0\2\54\1\0\1\54\1\0\1\74\3\0\2\54"+
    "\1\0\1\54\1\0\1\54\1\0\1\54\1\0\1\54"+
    "\1\0\1\54\1\0\1\54\1\0\1\54\1\0\1\54"+
    "\1\u01b6\1\u01b8\1\0\2\54\2\0\1\54\1\0\1\54"+
    "\1\0\1\54\1\0\1\54\3\0\1\54\1\0\1\54"+
    "\1\0\1\54\44\0\1\u01ae\12\0\1\u01b9\56\0\2\u01ba"+
    "\34\0\2\u0194\104\0\2\u01bb\26\0\2\61\1\0\2\61"+
    "\1\0\1\61\1\0\1\101\3\0\2\61\1\u0194\1\u0197"+
    "\1\0\1\61\1\0\1\61\1\0\1\61\1\0\1\61"+
    "\1\0\1\61\1\0\1\61\1\0\1\61\1\0\1\61"+
    "\1\0\2\61\2\0\1\61\1\0\1\61\1\0\1\61"+
    "\1\0\1\61\3\0\1\61\1\0\1\61\1\0\1\61"+
    "\2\0\2\61\1\0\2\61\1\0\1\61\1\0\1\101"+
    "\3\0\2\61\1\0\1\61\1\0\1\61\1\0\1\61"+
    "\1\0\1\61\1\0\1\61\1\0\1\61\1\0\1\61"+
    "\1\0\1\61\1\u01bb\1\u01bc\1\0\2\61\2\0\1\61"+
    "\1\0\1\61\1\0\1\61\1\0\1\61\3\0\1\61"+
    "\1\0\1\61\1\0\1\61\12\0\1\u01bd\105\0\2\u01be"+
    "\102\0\2\u018d\14\0\56\u01bf\1\0\7\u01bf\2\0\2\54"+
    "\1\0\2\54\1\0\1\54\1\0\1\74\3\0\2\54"+
    "\1\0\1\54\1\0\1\54\1\0\1\54\1\0\1\54"+
    "\1\0\1\54\1\0\1\54\1\0\1\54\1\0\1\54"+
    "\1\0\1\54\1\0\2\54\2\0\1\54\1\u018d\1\u0190"+
    "\1\0\1\54\1\0\1\54\3\0\1\54\1\0\1\54"+
    "\1\0\1\54\54\0\2\u01c0\60\0\2\u0194\16\0\2\61"+
    "\1\0\2\61\1\0\1\61\1\0\1\101\3\0\2\61"+
    "\1\0\1\61\1\0\1\61\1\0\1\61\1\0\1\61"+
    "\1\0\1\61\1\0\1\61\1\0\1\61\1\0\1\61"+
    "\1\0\1\61\1\0\2\61\2\0\1\61\1\u0194\1\u0197"+
    "\1\0\1\61\1\0\1\61\3\0\1\61\1\0\1\61"+
    "\1\0\1\61\2\0\2\u01bd\1\0\2\u01bd\1\0\1\u01bd"+
    "\1\0\1\u01c1\3\0\2\u01bd\1\0\1\u01bd\1\0\1\u01bd"+
    "\1\0\1\u01bd\1\0\1\u01bd\1\0\1\u01bd\1\0\1\u01bd"+
    "\1\0\1\u01bd\1\0\1\u01bd\1\0\1\u01bd\1\0\2\u01bd"+
    "\2\0\1\u01bd\1\0\1\u01bd\1\0\1\u01bd\1\0\1\u01bd"+
    "\3\0\1\u01bd\1\0\1\u01bd\1\0\1\u01bd\40\0\2\u01c2"+
    "\24\0\56\u01bf\1\u01c3\7\u01bf\5\0\1\u01c4\5\0\1\u01c4"+
    "\116\0\1\u01c5\31\0\1\u01c6\4\0\1\u01c6\115\0\1\u01c7"+
    "\77\0\1\u01c8\52\0\1\u01c5\12\0\1\u01c9\26\0\2\u01ca"+
    "\114\0\2\u01cb\14\0\56\u01cc\1\0\7\u01cc\50\0\2\u0189"+
    "\70\0\2\u01cd\10\0\56\u01cc\1\u01ce\7\u01cc\5\0\1\u01cf"+
    "\5\0\1\u01cf\117\0\1\u01d0\77\0\1\u01d1\56\0\2\u01d2"+
    "\15\0\3\u01d1\1\u01d3\4\0\2\u01d1\43\0\1\u01d4\63\0"+
    "\2\u01d5\15\0\1\u01d6\5\0\1\u01d6\122\0\2\u01d7\21\0"+
    "\1\u01d8\5\0\1\u01d8\60\0\1\u01d9\5\0\1\u01d9\125\0"+
    "\2\u01da\67\0\1\u01db\15\0\1\u01dc\7\0\1\u01dc\53\0"+
    "\1\u01dd\5\0\1\u01dd\62\0\1\u01de\4\0\1\u01de\62\0"+
    "\1\u01df\64\0\1\u01d1\63\0\1\u01e0\7\0\1\u01e0\4\0"+
    "\2\u01e1\4\0\2\u01e2\12\0\2\u01e3\54\0\2\u01e4\56\0"+
    "\2\u01e5\74\0\2\u01e6\60\0\2\u01e7\40\0\1\u01e8\4\0"+
    "\1\u01e8\72\0\2\u01e9\100\0\2\u01ea\33\0\1\u01eb\5\0"+
    "\1\u01eb\136\0\2\u01ec\40\0\2\u01ed\104\0\2\u01ee\44\0"+
    "\2\u01ef\36\0\1\u01f0\115\0\2\u01f1\34\0\1\u01f2\105\0"+
    "\2\u01f3\34\0\2\u01f0\1\0\2\u01f0\1\0\1\u01f0\1\0"+
    "\1\u019d\3\0\2\u01f0\1\0\1\u01f0\1\0\1\u01f0\1\0"+
    "\1\u01f0\1\0\1\u01f0\1\0\1\u01f0\1\0\1\u01f0\1\0"+
    "\1\u01f0\1\0\1\u01f0\1\0\1\u01f0\1\0\2\u01f0\2\0"+
    "\1\u01f0\1\0\1\u01f0\1\0\1\u01f0\1\0\1\u01f0\3\0"+
    "\1\u01f0\1\0\1\u01f0\1\0\1\u01f0\5\0\1\u01ee\5\0"+
    "\1\u01ee\54\0\2\u01f2\1\0\2\u01f2\1\0\1\u01f2\1\0"+
    "\1\u01f4\3\0\2\u01f2\1\0\1\u01f2\1\0\1\u01f2\1\0"+
    "\1\u01f2\1\0\1\u01f2\1\0\1\u01f2\1\0\1\u01f2\1\0"+
    "\1\u01f2\1\0\1\u01f2\1\0\1\u01f2\1\0\2\u01f2\2\0"+
    "\1\u01f2\1\0\1\u01f2\1\0\1\u01f2\1\0\1\u01f2\3\0"+
    "\1\u01f2\1\0\1\u01f2\1\0\1\u01f2\40\0\2\u01f5\70\0"+
    "\1\u01f6\31\0\1\u01f7\4\0\1\u01f7\114\0\1\u01f6\12\0"+
    "\1\u01f8\26\0\2\u01f9\44\0\56\u01fa\1\0\7\u01fa\50\0"+
    "\2\u01e2\14\0\56\u01fa\1\u01fb\7\u01fa\45\0\1\u01fc\70\0"+
    "\2\u01fd\70\0\2\u01fe\15\0\1\u01ff\5\0\1\u01ff\131\0"+
    "\1\u0200\6\0";

  private static int [] zzUnpackTrans() {
    int [] result = new int[27000];
    int offset = 0;
    offset = zzUnpackTrans(ZZ_TRANS_PACKED_0, offset, result);
    return result;
  }

  private static int zzUnpackTrans(String packed, int offset, int [] result) {
    int i = 0;       /* index in packed string  */
    int j = offset;  /* index in unpacked array */
    int l = packed.length();
    while (i < l) {
      int count = packed.charAt(i++);
      int value = packed.charAt(i++);
      value--;
      do result[j++] = value; while (--count > 0);
    }
    return j;
  }


  /* error codes */
  private static final int ZZ_UNKNOWN_ERROR = 0;
  private static final int ZZ_NO_MATCH = 1;
  private static final int ZZ_PUSHBACK_2BIG = 2;

  /* error messages for the codes above */
  private static final String ZZ_ERROR_MSG[] = {
    "Unknown internal scanner error",
    "Error: could not match input",
    "Error: pushback value was too large"
  };

  /**
   * ZZ_ATTRIBUTE[aState] contains the attributes of state <code>aState</code>
   */
  private static final int [] ZZ_ATTRIBUTE = zzUnpackAttribute();

  private static final String ZZ_ATTRIBUTE_PACKED_0 =
    "\4\0\1\11\1\1\1\11\1\1\1\11\2\1\15\0"+
    "\1\11\106\0\1\11\135\0\1\1\17\0\1\11\65\0"+
    "\1\11\66\0\1\11\175\0\1\1\16\0\1\11\22\0"+
    "\1\11\44\0\1\11";

  private static int [] zzUnpackAttribute() {
    int [] result = new int[512];
    int offset = 0;
    offset = zzUnpackAttribute(ZZ_ATTRIBUTE_PACKED_0, offset, result);
    return result;
  }

  private static int zzUnpackAttribute(String packed, int offset, int [] result) {
    int i = 0;       /* index in packed string  */
    int j = offset;  /* index in unpacked array */
    int l = packed.length();
    while (i < l) {
      int count = packed.charAt(i++);
      int value = packed.charAt(i++);
      do result[j++] = value; while (--count > 0);
    }
    return j;
  }

  /** the input device */
  private java.io.Reader zzReader;

  /** the current state of the DFA */
  private int zzState;

  /** the current lexical state */
  private int zzLexicalState = YYINITIAL;

  /** this buffer contains the current text to be matched and is
      the source of the yytext() string */
  private char zzBuffer[] = new char[ZZ_BUFFERSIZE];

  /** the textposition at the last accepting state */
  private int zzMarkedPos;

  /** the current text position in the buffer */
  private int zzCurrentPos;

  /** startRead marks the beginning of the yytext() string in the buffer */
  private int zzStartRead;

  /** endRead marks the last character in the buffer, that has been read
      from input */
  private int zzEndRead;

  /** number of newlines encountered up to the start of the matched text */
  private int yyline;

  /** the number of characters up to the start of the matched text */
  private int yychar;

  /**
   * the number of characters from the last newline up to the start of the 
   * matched text
   */
  private int yycolumn;

  /** 
   * zzAtBOL == true iff the scanner is currently at the beginning of a line
   */
  private boolean zzAtBOL = true;

  /** zzAtEOF == true iff the scanner is at the EOF */
  private boolean zzAtEOF;

  /** denotes if the user-EOF-code has already been executed */
  private boolean zzEOFDone;
  
  /** 
   * The number of occupied positions in zzBuffer beyond zzEndRead.
   * When a lead/high surrogate has been read from the input stream
   * into the final zzBuffer position, this will have a value of 1;
   * otherwise, it will have a value of 0.
   */
  private int zzFinalHighSurrogate = 0;

  /* user code: */
	
	/* Custom java code */

    @Override
	public String language() { return "IT"; }

	@Override
	public String version() { return "0.3"; }


	/* An empty default constructor is required to comply with LinkolnService */
	
	public ExtendAuthorities() { }
	
	@Override
	public final boolean run() {
		
		try {
			
			yyreset(new StringReader(getInput()));
			yylex();
			
		} catch (IOException e) {

			e.printStackTrace();
			return false;
		}
		
		return true;
	}
	
	@Override
	protected void addValue() {
	
		//annotationEntity.setValue("value");
	} 
	
	private AnnotationEntity authEntity = null;
	private AnnotationEntity geoEntity = null;
	
	private String originalText = "";
	private int originalPosition = 0;

	
	private void updateAuthority() {
	
		authEntity.setText(originalText);
		authEntity.setPosition(originalPosition);
		
		if(authEntity.getValue() != null && authEntity.getValue().length()>1) {
			authEntity.setValue(authEntity.getValue() + "_" + geoEntity.getValue().substring(3));
		} else {
			//sezione distaccata non ha un normalized value finchè non ci si attacca una geo entity 
			authEntity.setValue(geoEntity.getValue());
		}
		
		authEntity.addRelatedEntity(geoEntity);
		geoEntity.addRelatedEntity(authEntity);

		addEntity(authEntity);
	}



  /**
   * Creates a new scanner
   *
   * @param   in  the java.io.Reader to read input from.
   */
  public ExtendAuthorities(java.io.Reader in) {
    this.zzReader = in;
  }


  /** 
   * Unpacks the compressed character translation table.
   *
   * @param packed   the packed character translation table
   * @return         the unpacked character translation table
   */
  private static char [] zzUnpackCMap(String packed) {
    char [] map = new char[0x110000];
    int i = 0;  /* index in packed string  */
    int j = 0;  /* index in unpacked array */
    while (i < 382) {
      int  count = packed.charAt(i++);
      char value = packed.charAt(i++);
      do map[j++] = value; while (--count > 0);
    }
    return map;
  }


  /**
   * Refills the input buffer.
   *
   * @return      <code>false</code>, iff there was new input.
   * 
   * @exception   java.io.IOException  if any I/O-Error occurs
   */
  private boolean zzRefill() throws java.io.IOException {

    /* first: make room (if you can) */
    if (zzStartRead > 0) {
      zzEndRead += zzFinalHighSurrogate;
      zzFinalHighSurrogate = 0;
      System.arraycopy(zzBuffer, zzStartRead,
                       zzBuffer, 0,
                       zzEndRead-zzStartRead);

      /* translate stored positions */
      zzEndRead-= zzStartRead;
      zzCurrentPos-= zzStartRead;
      zzMarkedPos-= zzStartRead;
      zzStartRead = 0;
    }

    /* is the buffer big enough? */
    if (zzCurrentPos >= zzBuffer.length - zzFinalHighSurrogate) {
      /* if not: blow it up */
      char newBuffer[] = new char[zzBuffer.length*2];
      System.arraycopy(zzBuffer, 0, newBuffer, 0, zzBuffer.length);
      zzBuffer = newBuffer;
      zzEndRead += zzFinalHighSurrogate;
      zzFinalHighSurrogate = 0;
    }

    /* fill the buffer with new input */
    int requested = zzBuffer.length - zzEndRead;
    int numRead = zzReader.read(zzBuffer, zzEndRead, requested);

    /* not supposed to occur according to specification of java.io.Reader */
    if (numRead == 0) {
      throw new java.io.IOException("Reader returned 0 characters. See JFlex examples for workaround.");
    }
    if (numRead > 0) {
      zzEndRead += numRead;
      /* If numRead == requested, we might have requested to few chars to
         encode a full Unicode character. We assume that a Reader would
         otherwise never return half characters. */
      if (numRead == requested) {
        if (Character.isHighSurrogate(zzBuffer[zzEndRead - 1])) {
          --zzEndRead;
          zzFinalHighSurrogate = 1;
        }
      }
      /* potentially more input available */
      return false;
    }

    /* numRead < 0 ==> end of stream */
    return true;
  }

    
  /**
   * Closes the input stream.
   */
  public final void yyclose() throws java.io.IOException {
    zzAtEOF = true;            /* indicate end of file */
    zzEndRead = zzStartRead;  /* invalidate buffer    */

    if (zzReader != null)
      zzReader.close();
  }


  /**
   * Resets the scanner to read from a new input stream.
   * Does not close the old reader.
   *
   * All internal variables are reset, the old input stream 
   * <b>cannot</b> be reused (internal buffer is discarded and lost).
   * Lexical state is set to <tt>ZZ_INITIAL</tt>.
   *
   * Internal scan buffer is resized down to its initial length, if it has grown.
   *
   * @param reader   the new input stream 
   */
  public final void yyreset(java.io.Reader reader) {
    zzReader = reader;
    zzAtBOL  = true;
    zzAtEOF  = false;
    zzEOFDone = false;
    zzEndRead = zzStartRead = 0;
    zzCurrentPos = zzMarkedPos = 0;
    zzFinalHighSurrogate = 0;
    yyline = yychar = yycolumn = 0;
    zzLexicalState = YYINITIAL;
    if (zzBuffer.length > ZZ_BUFFERSIZE)
      zzBuffer = new char[ZZ_BUFFERSIZE];
  }


  /**
   * Returns the current lexical state.
   */
  public final int yystate() {
    return zzLexicalState;
  }


  /**
   * Enters a new lexical state
   *
   * @param newState the new lexical state
   */
  public final void yybegin(int newState) {
    zzLexicalState = newState;
  }


  /**
   * Returns the text matched by the current regular expression.
   */
  public final String yytext() {
    return new String( zzBuffer, zzStartRead, zzMarkedPos-zzStartRead );
  }


  /**
   * Returns the character at position <tt>pos</tt> from the 
   * matched text. 
   * 
   * It is equivalent to yytext().charAt(pos), but faster
   *
   * @param pos the position of the character to fetch. 
   *            A value from 0 to yylength()-1.
   *
   * @return the character at position pos
   */
  public final char yycharat(int pos) {
    return zzBuffer[zzStartRead+pos];
  }


  /**
   * Returns the length of the matched text region.
   */
  public final int yylength() {
    return zzMarkedPos-zzStartRead;
  }


  /**
   * Reports an error that occured while scanning.
   *
   * In a wellformed scanner (no or only correct usage of 
   * yypushback(int) and a match-all fallback rule) this method 
   * will only be called with things that "Can't Possibly Happen".
   * If this method is called, something is seriously wrong
   * (e.g. a JFlex bug producing a faulty scanner etc.).
   *
   * Usual syntax/scanner level error handling should be done
   * in error fallback rules.
   *
   * @param   errorCode  the code of the errormessage to display
   */
  private void zzScanError(int errorCode) {
    String message;
    try {
      message = ZZ_ERROR_MSG[errorCode];
    }
    catch (ArrayIndexOutOfBoundsException e) {
      message = ZZ_ERROR_MSG[ZZ_UNKNOWN_ERROR];
    }

    throw new Error(message);
  } 


  /**
   * Pushes the specified amount of characters back into the input stream.
   *
   * They will be read again by then next call of the scanning method
   *
   * @param number  the number of characters to be read again.
   *                This number must not be greater than yylength()!
   */
  public void yypushback(int number)  {
    if ( number > yylength() )
      zzScanError(ZZ_PUSHBACK_2BIG);

    zzMarkedPos -= number;
  }


  /**
   * Resumes scanning until the next regular expression is matched,
   * the end of input is encountered or an I/O-Error occurs.
   *
   * @return      the next token
   * @exception   java.io.IOException  if any I/O-Error occurs
   */
  public int yylex() throws java.io.IOException {
    int zzInput;
    int zzAction;

    // cached fields:
    int zzCurrentPosL;
    int zzMarkedPosL;
    int zzEndReadL = zzEndRead;
    char [] zzBufferL = zzBuffer;
    char [] zzCMapL = ZZ_CMAP;

    int [] zzTransL = ZZ_TRANS;
    int [] zzRowMapL = ZZ_ROWMAP;
    int [] zzAttrL = ZZ_ATTRIBUTE;

    while (true) {
      zzMarkedPosL = zzMarkedPos;

      yychar+= zzMarkedPosL-zzStartRead;

      boolean zzR = false;
      int zzCh;
      int zzCharCount;
      for (zzCurrentPosL = zzStartRead  ;
           zzCurrentPosL < zzMarkedPosL ;
           zzCurrentPosL += zzCharCount ) {
        zzCh = Character.codePointAt(zzBufferL, zzCurrentPosL, zzMarkedPosL);
        zzCharCount = Character.charCount(zzCh);
        switch (zzCh) {
        case '\u000B':  // fall through
        case '\u000C':  // fall through
        case '\u0085':  // fall through
        case '\u2028':  // fall through
        case '\u2029':
          yyline++;
          yycolumn = 0;
          zzR = false;
          break;
        case '\r':
          yyline++;
          yycolumn = 0;
          zzR = true;
          break;
        case '\n':
          if (zzR)
            zzR = false;
          else {
            yyline++;
            yycolumn = 0;
          }
          break;
        default:
          zzR = false;
          yycolumn += zzCharCount;
        }
      }

      if (zzR) {
        // peek one character ahead if it is \n (if we have counted one line too much)
        boolean zzPeek;
        if (zzMarkedPosL < zzEndReadL)
          zzPeek = zzBufferL[zzMarkedPosL] == '\n';
        else if (zzAtEOF)
          zzPeek = false;
        else {
          boolean eof = zzRefill();
          zzEndReadL = zzEndRead;
          zzMarkedPosL = zzMarkedPos;
          zzBufferL = zzBuffer;
          if (eof) 
            zzPeek = false;
          else 
            zzPeek = zzBufferL[zzMarkedPosL] == '\n';
        }
        if (zzPeek) yyline--;
      }
      zzAction = -1;

      zzCurrentPosL = zzCurrentPos = zzStartRead = zzMarkedPosL;
  
      zzState = ZZ_LEXSTATE[zzLexicalState];

      // set up zzAction for empty match case:
      int zzAttributes = zzAttrL[zzState];
      if ( (zzAttributes & 1) == 1 ) {
        zzAction = zzState;
      }


      zzForAction: {
        while (true) {
    
          if (zzCurrentPosL < zzEndReadL) {
            zzInput = Character.codePointAt(zzBufferL, zzCurrentPosL, zzEndReadL);
            zzCurrentPosL += Character.charCount(zzInput);
          }
          else if (zzAtEOF) {
            zzInput = YYEOF;
            break zzForAction;
          }
          else {
            // store back cached positions
            zzCurrentPos  = zzCurrentPosL;
            zzMarkedPos   = zzMarkedPosL;
            boolean eof = zzRefill();
            // get translated positions and possibly new buffer
            zzCurrentPosL  = zzCurrentPos;
            zzMarkedPosL   = zzMarkedPos;
            zzBufferL      = zzBuffer;
            zzEndReadL     = zzEndRead;
            if (eof) {
              zzInput = YYEOF;
              break zzForAction;
            }
            else {
              zzInput = Character.codePointAt(zzBufferL, zzCurrentPosL, zzEndReadL);
              zzCurrentPosL += Character.charCount(zzInput);
            }
          }
          int zzNext = zzTransL[ zzRowMapL[zzState] + zzCMapL[zzInput] ];
          if (zzNext == -1) break zzForAction;
          zzState = zzNext;

          zzAttributes = zzAttrL[zzState];
          if ( (zzAttributes & 1) == 1 ) {
            zzAction = zzState;
            zzMarkedPosL = zzCurrentPosL;
            if ( (zzAttributes & 8) == 8 ) break zzForAction;
          }

        }
      }

      // store back cached position
      zzMarkedPos = zzMarkedPosL;

      if (zzInput == YYEOF && zzStartRead == zzCurrentPos) {
        zzAtEOF = true;
        return YYEOF;
      }
      else {
        switch (zzAction < 0 ? zzAction : ZZ_ACTION[zzAction]) {
          case 1: 
            { addText(yytext());
	position++;
            } 
            // fall through
          case 12: break;
          case 2: 
            { addText(yytext());
		position++;
            } 
            // fall through
          case 13: break;
          case 3: 
            { offset++;
			position++;
			
			if(offset >= length) {
				
				if(offset > length) {
					yypushback(1);
					position--;
				}

				//Update authority
				updateAuthority();
				
				yybegin(0);
			}
            } 
            // fall through
          case 14: break;
          case 4: 
            { addText(yytext());
		position--; //account for the following {LKN_C} character
		yybegin(YYINITIAL);
            } 
            // fall through
          case 15: break;
          case 5: 
            { addText(yytext()); 
	yybegin(lkn);
            } 
            // fall through
          case 16: break;
          case 6: 
            { if(offset == length) {

			//Si deve uscire!
		
			//Update authority
			updateAuthority();
			
			yypushback(yylength());
			yybegin(0);

		} else {
		
			AnnotationEntity retrievedEntity = retrieveEntity(yytext());
			
			offset += yylength();
			position += retrievedEntity.getText().length();
		}
            } 
            // fall through
          case 17: break;
          case 7: 
            { geoEntity = retrieveEntity(yytext());
		
		offset += yylength();
		position += geoEntity.getText().length();
            } 
            // fall through
          case 18: break;
          case 8: 
            { authEntity = retrieveEntity(yytext());
		
		offset += yylength();
		position += authEntity.getText().length();
            } 
            // fall through
          case 19: break;
          case 9: 
            { authEntity = retrieveEntity(yytext());

		offset += yylength();
		position += authEntity.getText().length();
            } 
            // fall through
          case 20: break;
          case 10: 
            { authEntity = null;
		geoEntity = null;
		
		originalText = Util.removeAllAnnotations(yytext());
		originalPosition = position;
		
		start(null, extendAuth, false, false);
            } 
            // fall through
          case 21: break;
          case 11: 
            { authEntity = null;
		geoEntity = null;
		
		originalText = Util.removeAllAnnotations(yytext());
		originalPosition = position;
		
		start(null, extendLegislativeAuth, false, false);
            } 
            // fall through
          case 22: break;
          default:
            zzScanError(ZZ_NO_MATCH);
        }
      }
    }
  }

  /**
   * Runs the scanner on input files.
   *
   * This is a standalone scanner, it will print any unmatched
   * text to System.out unchanged.
   *
   * @param argv   the command line, contains the filenames to run
   *               the scanner on.
   */
  public static void main(String argv[]) {
    if (argv.length == 0) {
      System.out.println("Usage : java ExtendAuthorities [ --encoding <name> ] <inputfile(s)>");
    }
    else {
      int firstFilePos = 0;
      String encodingName = "UTF-8";
      if (argv[0].equals("--encoding")) {
        firstFilePos = 2;
        encodingName = argv[1];
        try {
          java.nio.charset.Charset.forName(encodingName); // Side-effect: is encodingName valid? 
        } catch (Exception e) {
          System.out.println("Invalid encoding '" + encodingName + "'");
          return;
        }
      }
      for (int i = firstFilePos; i < argv.length; i++) {
        ExtendAuthorities scanner = null;
        try {
          java.io.FileInputStream stream = new java.io.FileInputStream(argv[i]);
          java.io.Reader reader = new java.io.InputStreamReader(stream, encodingName);
          scanner = new ExtendAuthorities(reader);
          while ( !scanner.zzAtEOF ) scanner.yylex();
        }
        catch (java.io.FileNotFoundException e) {
          System.out.println("File not found : \""+argv[i]+"\"");
        }
        catch (java.io.IOException e) {
          System.out.println("IO error scanning file \""+argv[i]+"\"");
          System.out.println(e);
        }
        catch (Exception e) {
          System.out.println("Unexpected exception:");
          e.printStackTrace();
        }
      }
    }
  }


}
