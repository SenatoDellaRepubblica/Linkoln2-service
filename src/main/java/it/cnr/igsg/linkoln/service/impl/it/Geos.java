/* The following code was generated by JFlex 1.7.0 */

/*******************************************************************************
 * Copyright (c) 2016-2021 Institute of Legal Information and Judicial Systems IGSG-CNR (formerly ITTIG-CNR)
 * 
 * This program and the accompanying materials  are made available under the terms of the GNU General Public
 * License as published by the Free Software Foundation; either version 3 of the License, or (at your option)
 * any later version. 
 * You may not use this work except in compliance with the Licence.
 * You may obtain a copy of the Licence at: https://www.gnu.org/licenses/gpl-3.0.txt
 * Unless required by applicable law or agreed to in writing, software distributed under the Licence is 
 * distributed on an "AS IS" basis, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the Licence for the specific language governing permissions and limitations under the Licence.
 *  
 * Authors: Lorenzo Bacci (IGSG-CNR)
 ******************************************************************************/
 package it.cnr.igsg.linkoln.service.impl.it;

import java.io.IOException;
import java.io.StringReader;

import it.cnr.igsg.linkoln.entity.*;
import it.cnr.igsg.linkoln.service.*;



/**
 * This class is a scanner generated by 
 * <a href="http://www.jflex.de/">JFlex</a> 1.7.0
 * from the specification file <tt>jflex/Geos.jflex</tt>
 */
public class Geos extends LinkolnAnnotationService {

  /** This character denotes the end of file */
  public static final int YYEOF = -1;

  /** initial size of the lookahead buffer */
  private static final int ZZ_BUFFERSIZE = 16384;

  /** lexical states */
  public static final int YYINITIAL = 0;
  public static final int lkn = 2;

  /**
   * ZZ_LEXSTATE[l] is the state in the DFA for the lexical state l
   * ZZ_LEXSTATE[l+1] is the state in the DFA for the lexical state l
   *                  at the beginning of a line
   * l is of the form l = 2*k, k a non negative integer
   */
  private static final int ZZ_LEXSTATE[] = { 
     0,  0,  1, 1
  };

  /** 
   * Translates characters to character classes
   */
  private static final String ZZ_CMAP_PACKED = 
    "\11\0\1\13\1\2\1\102\1\103\1\1\22\0\1\13\5\0\1\5"+
    "\1\0\1\0\1\0\2\0\1\0\1\3\1\53\1\54\1\52\1\52"+
    "\1\52\1\52\1\52\1\52\1\52\1\52\1\52\1\52\1\14\1\12"+
    "\5\0\1\26\1\7\1\40\1\65\1\36\1\76\1\30\1\74\1\47"+
    "\1\63\1\70\1\60\1\56\1\6\1\51\1\11\1\62\1\32\1\23"+
    "\1\44\1\42\1\34\1\101\1\63\1\63\1\22\1\71\1\0\1\72"+
    "\1\0\1\4\1\0\1\25\1\17\1\37\1\64\1\35\1\75\1\27"+
    "\1\73\1\46\1\77\1\67\1\57\1\55\1\16\1\50\1\21\1\61"+
    "\1\31\1\20\1\43\1\41\1\33\1\100\1\24\1\24\1\15\12\0"+
    "\1\102\44\0\1\0\5\0\1\0\3\0\1\0\5\0\1\0\5\0"+
    "\1\24\1\24\4\24\1\0\1\24\1\24\1\24\2\24\1\24\1\24"+
    "\2\24\1\0\1\24\1\24\1\24\3\24\2\0\1\24\1\24\2\24"+
    "\3\0\1\24\1\24\4\24\1\0\1\24\1\24\1\24\2\24\1\24"+
    "\1\24\2\24\1\0\1\24\1\24\1\24\3\24\2\0\1\24\1\24"+
    "\2\24\53\0\1\24\1\24\6\0\2\45\66\0\1\24\1\24\4\0"+
    "\1\24\1\24\17\0\1\10\u1c88\0\1\24\1\24\216\0\2\24\42\0"+
    "\1\24\1\24\u0144\0\1\13\20\0\1\3\1\3\4\0\1\0\16\0"+
    "\1\102\1\102\u0100\0\1\66\uffff\0\uffff\0\uffff\0\uffff\0\uffff\0\uffff\0\uffff\0\uffff\0\uffff\0\uffff\0\uffff\0\uffff\0\uffff\0\uffff\0\uffff\0\uffff\0\udee5\0";

  /** 
   * Translates characters to character classes
   */
  private static final char [] ZZ_CMAP = zzUnpackCMap(ZZ_CMAP_PACKED);

  /** 
   * Translates DFA states to action switch labels.
   */
  private static final int [] ZZ_ACTION = zzUnpackAction();

  private static final String ZZ_ACTION_PACKED_0 =
    "\2\0\4\1\2\2\u01fa\0\1\3\5\0\2\4\50\0"+
    "\2\5\14\0\2\6\55\0\2\7\16\0\2\10\24\0"+
    "\2\11\70\0\2\12\17\0\2\13\33\0\2\14\5\0"+
    "\2\15\2\16\4\0\2\17\26\0\2\20\50\0\2\21"+
    "\40\0\2\22\2\23\40\0\2\24\5\0\2\25\16\0"+
    "\2\26\5\0\2\27\3\0\2\30\5\0\2\31\1\0"+
    "\2\32\1\0\2\33\2\0\2\34\6\0\2\35\13\0"+
    "\2\36\2\37\1\0\4\40\2\0\2\41\6\0\2\42"+
    "\3\0\2\43\4\44\4\0\2\45\3\0\2\46\1\0"+
    "\2\47\1\0\4\50\13\0\2\51\2\52\2\0\2\53"+
    "\7\0\2\54\2\55\2\0\4\56\3\0\2\57\5\0"+
    "\2\60\2\61\1\0\2\62\3\0\2\63\26\0\2\64"+
    "\2\65\2\66\1\0\2\67\1\0\2\70\2\0\2\71"+
    "\10\0\4\72\16\0\2\73\56\0\2\74\1\0\2\75"+
    "\1\0\2\76\2\0\2\77\2\0\2\100\4\0\2\101"+
    "\5\0\2\102\3\0\2\103\1\0\2\104\1\0\2\105"+
    "\1\0\2\106\2\107\2\110\1\0\2\111\1\0\2\112"+
    "\1\0\2\113\12\0\4\114\7\0\2\115\10\0\2\116"+
    "\2\0\2\117\2\120\10\0\2\121\2\122\2\123\2\124"+
    "\1\0\2\125\7\0\2\126\2\127\2\130\4\0\2\131"+
    "\2\132\2\133\2\134\4\0\2\135\2\136\2\137\2\140"+
    "\6\0\2\141\1\0\2\142\2\143\3\0\2\144\2\145"+
    "\2\146\2\0\2\147\17\0\2\150\2\151\4\0\2\152"+
    "\2\153\2\154\1\0\2\155\4\0\2\156\2\0\2\157"+
    "\1\0\2\160\4\0\2\161\2\162\2\163\20\0\2\164"+
    "\1\0\2\165\2\166\1\0\2\167\2\170\2\0\2\171"+
    "\2\172\2\173\2\174\2\175\1\0\2\176\2\177\2\0"+
    "\2\200\1\0\2\201\5\0\2\202\2\203\4\0\2\204"+
    "\5\0\2\205\3\0\2\206\3\0\2\207\1\0\2\210"+
    "\2\211\1\0\2\212\4\0\2\213\2\214\3\0\2\215"+
    "\1\0\2\216\2\0\2\217\2\220\6\0\2\221\1\0"+
    "\2\222\2\223\14\0\2\224\2\225\5\0\2\226\2\227"+
    "\1\0\2\230\1\0\2\231\11\0\2\232\4\233\3\0"+
    "\2\234\1\0\2\235\2\0\2\236\2\237\2\240\2\0"+
    "\2\241\7\0\1\242\3\0\2\243\12\0\2\244\3\0"+
    "\2\245\14\0\2\246\13\0\2\247\2\250\3\0\2\251"+
    "\2\252\2\0\2\253\1\0\2\254\1\0\2\255\2\256"+
    "\7\0\2\257\2\260\4\0\2\261\6\0\2\262\6\0"+
    "\2\263\4\0\2\264\5\0\2\265\2\266\11\0\2\267"+
    "\4\0\1\56\2\270\1\0\2\271\14\0\1\72\2\272"+
    "\4\0\2\273\4\0\2\274\3\0\2\275\11\0\1\44"+
    "\1\50\6\0\1\233\5\0\1\114\14\0";

  private static int [] zzUnpackAction() {
    int [] result = new int[1848];
    int offset = 0;
    offset = zzUnpackAction(ZZ_ACTION_PACKED_0, offset, result);
    return result;
  }

  private static int zzUnpackAction(String packed, int offset, int [] result) {
    int i = 0;       /* index in packed string  */
    int j = offset;  /* index in unpacked array */
    int l = packed.length();
    while (i < l) {
      int count = packed.charAt(i++);
      int value = packed.charAt(i++);
      do result[j++] = value; while (--count > 0);
    }
    return j;
  }


  /** 
   * Translates a state to a row index in the transition table
   */
  private static final int [] ZZ_ROWMAP = zzUnpackRowMap();

  private static final String ZZ_ROWMAP_PACKED_0 =
    "\0\0\0\104\0\210\0\314\0\u0110\0\u0154\0\u0110\0\u0198"+
    "\0\u01dc\0\u0220\0\u0264\0\u02a8\0\u02ec\0\u0330\0\u0374\0\u03b8"+
    "\0\u03fc\0\u0440\0\u0484\0\u04c8\0\u050c\0\u0550\0\u0594\0\u05d8"+
    "\0\u061c\0\u0660\0\u06a4\0\u06e8\0\u072c\0\u0770\0\u07b4\0\u07f8"+
    "\0\u083c\0\210\0\u0880\0\u08c4\0\u0908\0\u094c\0\u0990\0\u09d4"+
    "\0\u0a18\0\u0a5c\0\u0aa0\0\u0ae4\0\u0b28\0\u0b6c\0\u0bb0\0\u0bf4"+
    "\0\u0c38\0\u0c7c\0\u0cc0\0\u0d04\0\u0d48\0\u0d8c\0\u0dd0\0\u0e14"+
    "\0\u0e58\0\u0e9c\0\u0ee0\0\u0f24\0\u0f68\0\u0fac\0\u0ff0\0\u1034"+
    "\0\u1078\0\u10bc\0\u1100\0\u1144\0\u1188\0\u11cc\0\u1210\0\u1254"+
    "\0\u1298\0\u12dc\0\u1320\0\u1364\0\u13a8\0\u13ec\0\u1430\0\u1474"+
    "\0\u14b8\0\u14fc\0\u1540\0\u1584\0\u15c8\0\u160c\0\u1650\0\u1694"+
    "\0\u16d8\0\u171c\0\u1760\0\u17a4\0\u17e8\0\u182c\0\u1870\0\u18b4"+
    "\0\u18f8\0\u193c\0\u1980\0\u19c4\0\u1a08\0\u1a4c\0\u1a90\0\u1ad4"+
    "\0\u1b18\0\u1b5c\0\u1ba0\0\u1be4\0\u1c28\0\u1c6c\0\u1cb0\0\u1cf4"+
    "\0\u1d38\0\u1d7c\0\u1dc0\0\u1e04\0\u1e48\0\u1e8c\0\u1ed0\0\u1f14"+
    "\0\u1f58\0\u1f9c\0\u1fe0\0\u2024\0\u2068\0\u20ac\0\u20f0\0\u2134"+
    "\0\u2178\0\u21bc\0\u2200\0\u2244\0\u2288\0\u22cc\0\u2310\0\u2354"+
    "\0\u2398\0\u23dc\0\u2420\0\u2464\0\u24a8\0\u24ec\0\u2530\0\u2574"+
    "\0\u25b8\0\u25fc\0\u2640\0\u2684\0\u26c8\0\u270c\0\u2750\0\u2794"+
    "\0\u27d8\0\u281c\0\u2860\0\u28a4\0\u28e8\0\u292c\0\u2970\0\u29b4"+
    "\0\u29f8\0\u2a3c\0\u2a80\0\u2ac4\0\u2b08\0\u2b4c\0\u2b90\0\u2bd4"+
    "\0\u2c18\0\u2c5c\0\u2ca0\0\u2ce4\0\u2d28\0\u2d6c\0\u2db0\0\u2df4"+
    "\0\u2e38\0\u2e7c\0\u2ec0\0\u2f04\0\u2f48\0\u2f8c\0\u2fd0\0\u3014"+
    "\0\u3058\0\u309c\0\u30e0\0\u3124\0\u3168\0\u31ac\0\u31f0\0\u3234"+
    "\0\u3278\0\u32bc\0\u3300\0\u3344\0\u3388\0\u33cc\0\u3410\0\u3454"+
    "\0\u3498\0\u34dc\0\u3520\0\u3564\0\u35a8\0\u35ec\0\u3630\0\u3674"+
    "\0\u36b8\0\u36fc\0\u3740\0\u3784\0\u37c8\0\u380c\0\u3850\0\u3894"+
    "\0\u38d8\0\u391c\0\u3960\0\u39a4\0\u39e8\0\u3a2c\0\u3a70\0\u3ab4"+
    "\0\u3af8\0\u3b3c\0\u3b80\0\u3bc4\0\u3c08\0\u3c4c\0\u3c90\0\u3cd4"+
    "\0\u3d18\0\u3d5c\0\u3da0\0\u3de4\0\u3e28\0\u3e6c\0\u3eb0\0\u3ef4"+
    "\0\u3f38\0\u3f7c\0\u3fc0\0\u4004\0\u4048\0\u408c\0\u40d0\0\u4114"+
    "\0\u4158\0\u419c\0\u41e0\0\u4224\0\u4268\0\u42ac\0\u42f0\0\u4334"+
    "\0\u4378\0\u43bc\0\u4400\0\u4444\0\u4488\0\u44cc\0\u4510\0\u4554"+
    "\0\u4598\0\u45dc\0\u4620\0\u4664\0\u46a8\0\u46ec\0\u4730\0\u4774"+
    "\0\u47b8\0\u47fc\0\u4840\0\u4884\0\u48c8\0\u490c\0\u4950\0\u4994"+
    "\0\u49d8\0\u4a1c\0\u4a60\0\u4aa4\0\u4ae8\0\u4b2c\0\u4b70\0\u4bb4"+
    "\0\u4bf8\0\u4c3c\0\u4c80\0\u4cc4\0\u4d08\0\u4d4c\0\u4d90\0\u4dd4"+
    "\0\u4e18\0\u4e5c\0\u4ea0\0\u4ee4\0\u4f28\0\u4f6c\0\u4fb0\0\u4ff4"+
    "\0\u5038\0\u507c\0\u50c0\0\u5104\0\u5148\0\u518c\0\u51d0\0\u5214"+
    "\0\u5258\0\u529c\0\u52e0\0\u5324\0\u5368\0\u53ac\0\u53f0\0\u5434"+
    "\0\u5478\0\u54bc\0\u5500\0\u5544\0\u5588\0\u55cc\0\u5610\0\u5654"+
    "\0\u5698\0\u56dc\0\u5720\0\u5764\0\u57a8\0\u57ec\0\u5830\0\u5874"+
    "\0\u58b8\0\u58fc\0\u5940\0\u5984\0\u59c8\0\u5a0c\0\u5a50\0\u5a94"+
    "\0\u5ad8\0\u5b1c\0\u5b60\0\u5ba4\0\u5be8\0\u5c2c\0\u5c70\0\u5cb4"+
    "\0\u5cf8\0\u5d3c\0\u5d80\0\u5dc4\0\u5e08\0\u5e4c\0\u5e90\0\u5ed4"+
    "\0\u5f18\0\u5f5c\0\u5fa0\0\u5fe4\0\u6028\0\u606c\0\u60b0\0\u60f4"+
    "\0\u6138\0\u617c\0\u61c0\0\u6204\0\u6248\0\u628c\0\u62d0\0\u6314"+
    "\0\u6358\0\u639c\0\u63e0\0\u6424\0\u6468\0\u64ac\0\u64f0\0\u6534"+
    "\0\u6578\0\u65bc\0\u6600\0\u6644\0\u6688\0\u66cc\0\u6710\0\u6754"+
    "\0\u6798\0\u67dc\0\u6820\0\u6864\0\u68a8\0\u68ec\0\u6930\0\u6974"+
    "\0\u69b8\0\u69fc\0\u6a40\0\u6a84\0\u6ac8\0\u6b0c\0\u6b50\0\u6b94"+
    "\0\u6bd8\0\u6c1c\0\u6c60\0\u6ca4\0\u6ce8\0\u6d2c\0\u6d70\0\u6db4"+
    "\0\u6df8\0\u6e3c\0\u6e80\0\u6ec4\0\u6f08\0\u6f4c\0\u6f90\0\u6fd4"+
    "\0\u7018\0\u705c\0\u70a0\0\u70e4\0\u7128\0\u716c\0\u71b0\0\u71f4"+
    "\0\u7238\0\u727c\0\u72c0\0\u7304\0\u7348\0\u738c\0\u73d0\0\u7414"+
    "\0\u7458\0\u749c\0\u74e0\0\u7524\0\u7568\0\u75ac\0\u75f0\0\u7634"+
    "\0\u7678\0\u76bc\0\u7700\0\u7744\0\u7788\0\u77cc\0\u7810\0\u7854"+
    "\0\u7898\0\u78dc\0\u7920\0\u7964\0\u79a8\0\u79ec\0\u7a30\0\u7a74"+
    "\0\u7ab8\0\u7afc\0\u7b40\0\u7b84\0\u7bc8\0\u7c0c\0\u7c50\0\u7c94"+
    "\0\u7cd8\0\u7d1c\0\u7d60\0\u7da4\0\u7de8\0\u7e2c\0\u7e70\0\u7eb4"+
    "\0\u7ef8\0\u7f3c\0\u7f80\0\u7fc4\0\u8008\0\u804c\0\u8090\0\u80d4"+
    "\0\u8118\0\u815c\0\u81a0\0\u81e4\0\u8228\0\u826c\0\u82b0\0\u82f4"+
    "\0\u8338\0\u837c\0\u83c0\0\u8404\0\u8448\0\u848c\0\u84d0\0\u8514"+
    "\0\u8558\0\u859c\0\u85e0\0\u8624\0\u8668\0\u86ac\0\u86f0\0\u8734"+
    "\0\u8778\0\u87bc\0\u0110\0\u8800\0\u8844\0\u8888\0\u88cc\0\u8910"+
    "\0\u0110\0\u8954\0\u8998\0\u89dc\0\u8a20\0\u8a64\0\u8aa8\0\u8aec"+
    "\0\u8b30\0\u8b74\0\u8bb8\0\u8bfc\0\u8c40\0\u8c84\0\u8cc8\0\u8d0c"+
    "\0\u8d50\0\u8d94\0\u8dd8\0\u8e1c\0\u8e60\0\u8ea4\0\u8ee8\0\u8f2c"+
    "\0\u8f70\0\u8fb4\0\u8ff8\0\u903c\0\u9080\0\u90c4\0\u9108\0\u914c"+
    "\0\u9190\0\u91d4\0\u9218\0\u925c\0\u92a0\0\u92e4\0\u9328\0\u936c"+
    "\0\u93b0\0\u93f4\0\u0110\0\u9438\0\u947c\0\u94c0\0\u9504\0\u9548"+
    "\0\u958c\0\u95d0\0\u9614\0\u9658\0\u969c\0\u96e0\0\u9724\0\u9768"+
    "\0\u0110\0\u97ac\0\u97f0\0\u9834\0\u9878\0\u98bc\0\u9900\0\u9944"+
    "\0\u9988\0\u99cc\0\u9a10\0\u9a54\0\u9a98\0\u9adc\0\u9b20\0\u9b64"+
    "\0\u9ba8\0\u9bec\0\u9c30\0\u9c74\0\u9cb8\0\u9cfc\0\u9d40\0\u9d84"+
    "\0\u9dc8\0\u9e0c\0\u9e50\0\u9e94\0\u9ed8\0\u9f1c\0\u9f60\0\u9fa4"+
    "\0\u9fe8\0\ua02c\0\ua070\0\ua0b4\0\ua0f8\0\ua13c\0\ua180\0\ua1c4"+
    "\0\ua208\0\ua24c\0\ua290\0\ua2d4\0\ua318\0\ua35c\0\ua3a0\0\u0110"+
    "\0\ua3e4\0\ua428\0\ua46c\0\ua4b0\0\ua4f4\0\ua538\0\ua57c\0\ua5c0"+
    "\0\ua604\0\ua648\0\ua68c\0\ua6d0\0\ua714\0\ua758\0\ua79c\0\u0110"+
    "\0\ua7e0\0\ua824\0\ua868\0\ua8ac\0\ua8f0\0\ua934\0\ua978\0\ua9bc"+
    "\0\uaa00\0\uaa44\0\uaa88\0\uaacc\0\uab10\0\uab54\0\uab98\0\uabdc"+
    "\0\uac20\0\uac64\0\uaca8\0\uacec\0\uad30\0\u0110\0\uad74\0\uadb8"+
    "\0\uadfc\0\uae40\0\uae84\0\uaec8\0\uaf0c\0\uaf50\0\uaf94\0\uafd8"+
    "\0\ub01c\0\ub060\0\ub0a4\0\ub0e8\0\ub12c\0\ub170\0\ub1b4\0\ub1f8"+
    "\0\ub23c\0\ub280\0\ub2c4\0\ub308\0\ub34c\0\ub390\0\ub3d4\0\ub418"+
    "\0\ub45c\0\ub4a0\0\ub4e4\0\ub528\0\ub56c\0\ub5b0\0\ub5f4\0\ub638"+
    "\0\ub67c\0\ub6c0\0\ub704\0\ub748\0\ub78c\0\ub7d0\0\ub814\0\ub858"+
    "\0\ub89c\0\ub8e0\0\ub924\0\ub968\0\ub9ac\0\ub9f0\0\uba34\0\uba78"+
    "\0\ubabc\0\ubb00\0\ubb44\0\ubb88\0\ubbcc\0\ubc10\0\ubc54\0\u0110"+
    "\0\ubc98\0\ubcdc\0\ubd20\0\ubd64\0\ubda8\0\ubdec\0\ube30\0\ube74"+
    "\0\ubeb8\0\ubefc\0\ubf40\0\ubf84\0\ubfc8\0\uc00c\0\uc050\0\uc094"+
    "\0\u0110\0\uc0d8\0\uc11c\0\uc160\0\uc1a4\0\uc1e8\0\uc22c\0\uc270"+
    "\0\uc2b4\0\uc2f8\0\uc33c\0\uc380\0\uc3c4\0\uc408\0\uc44c\0\uc490"+
    "\0\uc4d4\0\uc518\0\uc55c\0\uc5a0\0\uc5e4\0\uc628\0\uc66c\0\uc6b0"+
    "\0\uc6f4\0\uc738\0\uc77c\0\uc7c0\0\uc804\0\u0110\0\uc848\0\uc88c"+
    "\0\uc8d0\0\uc914\0\uc958\0\uc99c\0\u0110\0\uc9e0\0\u0110\0\uca24"+
    "\0\uca68\0\ucaac\0\ucaf0\0\ucb34\0\u0110\0\ucb78\0\ucbbc\0\ucc00"+
    "\0\ucc44\0\ucc88\0\ucccc\0\ucd10\0\ucd54\0\ucd98\0\ucddc\0\uce20"+
    "\0\uce64\0\ucea8\0\uceec\0\ucf30\0\ucf74\0\ucfb8\0\ucffc\0\ud040"+
    "\0\ud084\0\ud0c8\0\ud10c\0\ud150\0\u0110\0\ud194\0\ud1d8\0\ud21c"+
    "\0\ud260\0\ud2a4\0\ud2e8\0\ud32c\0\ud370\0\ud3b4\0\ud3f8\0\ud43c"+
    "\0\ud480\0\ud4c4\0\ud508\0\ud54c\0\ud590\0\ud5d4\0\ud618\0\ud65c"+
    "\0\ud6a0\0\ud6e4\0\ud728\0\ud76c\0\ud7b0\0\ud7f4\0\ud838\0\ud87c"+
    "\0\ud8c0\0\ud904\0\ud948\0\ud98c\0\ud9d0\0\uda14\0\uda58\0\uda9c"+
    "\0\udae0\0\udb24\0\udb68\0\udbac\0\udbf0\0\udc34\0\u0110\0\udc78"+
    "\0\udcbc\0\udd00\0\udd44\0\udd88\0\uddcc\0\ude10\0\ude54\0\ude98"+
    "\0\udedc\0\udf20\0\udf64\0\udfa8\0\udfec\0\ue030\0\ue074\0\ue0b8"+
    "\0\ue0fc\0\ue140\0\ue184\0\ue1c8\0\ue20c\0\ue250\0\ue294\0\ue2d8"+
    "\0\ue31c\0\ue360\0\ue3a4\0\ue3e8\0\ue42c\0\ue470\0\ue4b4\0\ue4f8"+
    "\0\u0110\0\ue53c\0\u0110\0\ue580\0\ue5c4\0\ue608\0\ue64c\0\ue690"+
    "\0\ue6d4\0\ue718\0\ue75c\0\ue7a0\0\ue7e4\0\ue828\0\ue86c\0\ue8b0"+
    "\0\ue8f4\0\ue938\0\ue97c\0\ue9c0\0\uea04\0\uea48\0\uea8c\0\uead0"+
    "\0\ueb14\0\ueb58\0\ueb9c\0\uebe0\0\uec24\0\uec68\0\uecac\0\uecf0"+
    "\0\ued34\0\ued78\0\uedbc\0\uee00\0\u0110\0\uee44\0\uee88\0\ueecc"+
    "\0\uef10\0\uef54\0\uef98\0\u0110\0\uefdc\0\uf020\0\uf064\0\uf0a8"+
    "\0\uf0ec\0\uf130\0\uf174\0\uf1b8\0\uf1fc\0\uf240\0\uf284\0\uf2c8"+
    "\0\uf30c\0\uf350\0\uf394\0\u0110\0\uf3d8\0\uf41c\0\uf460\0\uf4a4"+
    "\0\uf4e8\0\uf52c\0\u0110\0\uf570\0\uf5b4\0\uf5f8\0\uf63c\0\u0110"+
    "\0\uf680\0\uf6c4\0\uf708\0\uf74c\0\uf790\0\uf7d4\0\u0110\0\uf818"+
    "\0\uf85c\0\u0110\0\uf8a0\0\uf8e4\0\u0110\0\uf928\0\uf96c\0\uf9b0"+
    "\0\u0110\0\uf9f4\0\ufa38\0\ufa7c\0\ufac0\0\ufb04\0\ufb48\0\ufb8c"+
    "\0\u0110\0\ufbd0\0\ufc14\0\ufc58\0\ufc9c\0\ufce0\0\ufd24\0\ufd68"+
    "\0\ufdac\0\ufdf0\0\ufe34\0\ufe78\0\ufebc\0\u0110\0\uff00\0\u0110"+
    "\0\uff44\0\uff88\0\u0110\0\uffcc\1\20\1\124\1\230\1\334"+
    "\0\u0110\1\u0120\1\u0164\1\u01a8\1\u01ec\1\u0230\1\u0274\1\u02b8"+
    "\0\u0110\1\u02fc\1\u0340\1\u0384\1\u03c8\0\u0110\1\u040c\0\u0110"+
    "\1\u0450\1\u0494\1\u04d8\1\u051c\1\u0560\1\u05a4\1\u05e8\0\u0110"+
    "\1\u062c\1\u0670\1\u06b4\1\u06f8\0\u0110\1\u073c\1\u0780\0\u0110"+
    "\1\u07c4\1\u0808\0\u0110\1\u084c\1\u0890\1\u08d4\1\u0918\1\u095c"+
    "\1\u09a0\1\u09e4\1\u0a28\1\u0a6c\1\u0ab0\1\u0af4\1\u0b38\1\u0b7c"+
    "\1\u0bc0\0\u0110\1\u0c04\0\u0110\1\u0c48\1\u0c8c\1\u0cd0\0\u0110"+
    "\1\u0d14\1\u0d58\1\u0d9c\1\u0de0\1\u0e24\1\u0e68\1\u0eac\1\u0ef0"+
    "\0\u0110\1\u0f34\0\u0110\1\u0f78\1\u0fbc\1\u1000\0\u0110\1\u1044"+
    "\1\u1088\1\u10cc\1\u1110\1\u1154\1\u1198\0\u0110\1\u11dc\1\u1220"+
    "\1\u1264\1\u12a8\1\u12ec\1\u1330\0\u0110\1\u1374\0\u0110\1\u13b8"+
    "\1\u13fc\0\u0110\1\u1440\1\u1484\1\u14c8\1\u150c\0\u0110\1\u1550"+
    "\1\u1594\1\u15d8\1\u161c\1\u1660\1\u16a4\1\u16e8\1\u172c\1\u1770"+
    "\1\u17b4\1\u17f8\1\u183c\1\u1880\1\u18c4\1\u1908\1\u194c\1\u1990"+
    "\1\u19d4\1\u1a18\1\u1a5c\1\u1aa0\1\u1ae4\1\u1b28\0\u0110\1\u1b6c"+
    "\0\u0110\1\u1bb0\0\u0110\1\u1bf4\1\u1c38\0\u0110\1\u1c7c\1\u1cc0"+
    "\0\u0110\1\u1d04\1\u1d48\1\u1d8c\0\u0110\1\u1dd0\1\u1e14\1\u1e58"+
    "\1\u1e9c\1\u1ee0\1\u1f24\1\u1f68\1\u1fac\1\u1ff0\0\u0110\1\u2034"+
    "\1\u2078\1\u20bc\1\u2100\1\u2144\1\u2188\1\u21cc\1\u2210\1\u2254"+
    "\1\u2298\1\u22dc\1\u2320\1\u2364\1\u23a8\1\u23ec\1\u2430\1\u2474"+
    "\0\u0110\1\u24b8\1\u24fc\1\u2540\1\u2584\1\u25c8\1\u260c\1\u2650"+
    "\1\u2694\1\u26d8\1\u271c\1\u2760\1\u27a4\1\u27e8\1\u282c\1\u2870"+
    "\1\u28b4\1\u28f8\1\u293c\1\u2980\1\u29c4\1\u2a08\1\u2a4c\1\u2a90"+
    "\1\u2ad4\1\u2b18\1\u2b5c\1\u2ba0\1\u2be4\1\u2c28\1\u2c6c\1\u2cb0"+
    "\1\u2cf4\1\u2d38\1\u2d7c\1\u2dc0\1\u2e04\1\u2e48\1\u2e8c\1\u2ed0"+
    "\1\u2f14\1\u2f58\1\u2f9c\1\u2fe0\1\u3024\1\u3068\1\u30ac\1\u30f0"+
    "\0\u0110\1\u3134\1\u3178\0\u0110\1\u31bc\1\u3200\0\u0110\1\u3244"+
    "\1\u3288\1\u32cc\0\u0110\1\u3310\1\u3354\1\u3398\0\u0110\1\u33dc"+
    "\1\u3420\1\u3464\1\u34a8\1\u34ec\0\u0110\1\u3530\1\u3574\1\u35b8"+
    "\1\u35fc\1\u3640\1\u3684\0\u0110\1\u36c8\1\u370c\1\u3750\1\u3794"+
    "\0\u0110\1\u37d8\1\u381c\0\u0110\1\u3860\1\u38a4\0\u0110\1\u38e8"+
    "\1\u392c\0\u0110\1\u3970\0\u0110\1\u39b4\0\u0110\1\u39f8\1\u3a3c"+
    "\0\u0110\1\u3a80\1\u3ac4\0\u0110\1\u3b08\1\u3b4c\0\u0110\1\u3b90"+
    "\1\u3bd4\1\u3c18\1\u3c5c\1\u3ca0\1\u3ce4\1\u3d28\1\u3d6c\1\u3db0"+
    "\1\u3df4\1\u3e38\0\u0110\1\u3e7c\1\u3ec0\1\u3f04\1\u3f48\1\u3f8c"+
    "\1\u3fd0\1\u4014\1\u4058\1\u409c\1\u40e0\0\u0110\1\u4124\1\u4168"+
    "\1\20\1\124\1\u41ac\1\u41f0\1\u4234\1\u4278\1\u42bc\0\u0110"+
    "\1\u4300\1\u4344\1\u4388\0\u0110\1\u43cc\0\u0110\1\u4410\1\u4454"+
    "\1\u4498\1\u0494\1\u04d8\1\u44dc\1\u4520\1\u4564\1\u45a8\0\u0110"+
    "\1\u45ec\0\u0110\1\u4630\0\u0110\1\u4674\0\u0110\1\u46b8\1\u46fc"+
    "\0\u0110\1\u4740\1\u4784\1\u0890\1\u08d4\1\u47c8\1\u480c\1\u4850"+
    "\1\u4894\0\u0110\1\u48d8\0\u0110\1\u491c\0\u0110\1\u4960\1\u49a4"+
    "\1\u49e8\1\u4a2c\1\u4a70\0\u0110\1\u4ab4\0\u0110\1\u4af8\0\u0110"+
    "\1\u4b3c\0\u0110\1\u4b80\1\u4bc4\1\u4c08\1\u4c4c\1\u4c90\0\u0110"+
    "\1\u4cd4\0\u0110\1\u4d18\0\u0110\1\u4d5c\0\u0110\1\u4da0\1\u1088"+
    "\1\u10cc\1\u4de4\1\u4e28\1\u4e6c\1\u4eb0\0\u0110\1\u4ef4\1\u4f38"+
    "\0\u0110\1\u4f7c\0\u0110\1\u4fc0\1\u5004\1\u5048\1\u508c\0\u0110"+
    "\1\u50d0\0\u0110\1\u5114\0\u0110\1\u5158\1\u519c\1\u51e0\0\u0110"+
    "\1\u5224\1\u5268\1\u52ac\1\u52f0\1\u5334\1\u5378\1\u53bc\1\u5400"+
    "\1\u5444\1\u5488\1\u54cc\1\u5510\1\u5554\1\u5598\1\u55dc\1\u5620"+
    "\0\u0110\1\u5664\0\u0110\1\u56a8\1\u56ec\1\u5730\1\u5774\1\u57b8"+
    "\0\u0110\1\u57fc\0\u0110\1\u5840\0\u0110\1\u5884\1\u58c8\0\u0110"+
    "\1\u590c\1\u2078\1\u20bc\1\u5950\1\u5994\0\u0110\1\u59d8\1\u5a1c"+
    "\1\u5a60\0\u0110\1\u5aa4\1\u5ae8\0\u0110\1\u5b2c\1\u5b70\1\u5bb4"+
    "\1\u5bf8\1\u5c3c\0\u0110\1\u5c80\0\u0110\1\u5cc4\0\u0110\1\u5d08"+
    "\1\u5d4c\1\u5d90\1\u5dd4\1\u5e18\1\u5e5c\1\u5ea0\1\u5ee4\1\u5f28"+
    "\1\u5f6c\1\u5fb0\1\u5ff4\1\u6038\1\u607c\1\u60c0\1\u6104\1\u6148"+
    "\0\u0110\1\u618c\1\u61d0\0\u0110\1\u6214\0\u0110\1\u6258\1\u629c"+
    "\0\u0110\1\u62e0\0\u0110\1\u6324\1\u6368\1\u63ac\0\u0110\1\u63f0"+
    "\0\u0110\1\u6434\0\u0110\1\u6478\0\u0110\1\u64bc\0\u0110\1\u6500"+
    "\1\u6544\0\u0110\1\u6588\0\u0110\1\u65cc\1\u6610\1\u6654\0\u0110"+
    "\1\u6698\1\u66dc\0\u0110\1\u6720\1\u6764\1\u67a8\1\u67ec\1\u6830"+
    "\1\u6874\0\u0110\1\u68b8\0\u0110\1\u68fc\1\u6940\1\u6984\1\u69c8"+
    "\1\u6a0c\0\u0110\1\u6a50\1\u3ec0\1\u3f04\1\u6a94\1\u6ad8\1\u6b1c"+
    "\0\u0110\1\u6b60\1\u6ba4\1\u6be8\1\u6c2c\0\u0110\1\u6c70\1\u6cb4"+
    "\1\u6cf8\1\u6d3c\0\u0110\1\u6d80\1\u6dc4\0\u0110\1\u6e08\0\u0110"+
    "\1\u6e4c\1\u6e90\0\u0110\1\u6ed4\1\u6f18\1\u6f5c\1\u6fa0\1\u6fe4"+
    "\0\u0110\1\u7028\0\u0110\1\u706c\1\u70b0\1\u70f4\1\u7138\0\u0110"+
    "\1\u717c\1\u71c0\0\u0110\1\u7204\1\u7248\1\u728c\0\u0110\1\u72d0"+
    "\0\u0110\1\u7314\1\u7358\1\u739c\1\u73e0\1\u7424\1\u7468\1\u74ac"+
    "\0\u0110\1\u74f0\1\u7534\0\u0110\1\u7578\0\u0110\1\u75bc\1\u7600"+
    "\1\u7644\1\u7688\1\u76cc\1\u7710\1\u7754\1\u7798\1\u77dc\1\u7820"+
    "\1\u7864\1\u78a8\1\u78ec\0\u0110\1\u7930\0\u0110\1\u7974\1\u79b8"+
    "\1\u79fc\1\u7a40\1\u7a84\1\u7ac8\0\u0110\1\u7b0c\0\u0110\1\u7b50"+
    "\1\u7b94\0\u0110\1\u7bd8\1\u7c1c\0\u0110\1\u7c60\1\u7ca4\1\u7ce8"+
    "\1\u7d2c\1\u7d70\1\u7db4\1\u7df8\1\u7e3c\1\u7e80\1\u7ec4\0\u0110"+
    "\1\u7f08\0\u0110\1\u7f4c\1\u7f90\1\u7fd4\1\u8018\1\u805c\1\u80a0"+
    "\0\u0110\1\u80e4\1\u8128\0\u0110\1\u816c\1\u81b0\1\u81f4\0\u0110"+
    "\1\u8238\0\u0110\1\u827c\0\u0110\1\u82c0\1\u8304\1\u8348\0\u0110"+
    "\1\u838c\1\u83d0\1\u8414\1\u8458\1\u849c\1\u84e0\1\u8524\1\u8568"+
    "\0\u0110\1\u85ac\1\u85f0\1\u8634\0\u0110\1\u8678\1\u86bc\1\u8700"+
    "\1\u8744\1\u8788\1\u87cc\1\u8810\1\u8854\1\u8898\1\u88dc\1\u8920"+
    "\0\u0110\1\u8964\1\u89a8\1\u89ec\1\u8a30\0\u0110\1\u8a74\1\u8ab8"+
    "\1\u8afc\1\u8b40\1\u8b84\1\u8bc8\1\u8c0c\1\u8c50\1\u8c94\1\u8cd8"+
    "\1\u8d1c\1\u8d60\1\u8da4\0\u0110\1\u8de8\1\u8e2c\1\u8e70\1\u8eb4"+
    "\1\u8ef8\1\u8f3c\1\u7f90\1\u7fd4\1\u8f80\1\u8fc4\1\u9008\1\u904c"+
    "\0\u0110\1\u9090\0\u0110\1\u90d4\1\u9118\1\u915c\1\u91a0\0\u0110"+
    "\1\u91e4\0\u0110\1\u9228\1\u926c\1\u92b0\0\u0110\1\u92f4\1\u9338"+
    "\0\u0110\1\u937c\1\u93c0\0\u0110\1\u9404\0\u0110\1\u9448\1\u948c"+
    "\1\u94d0\1\u9514\1\u9558\1\u959c\1\u95e0\1\u9624\0\u0110\1\u9668"+
    "\0\u0110\1\u96ac\1\u96f0\1\u9734\1\u9778\1\u97bc\0\u0110\1\u9800"+
    "\1\u9844\1\u9888\1\u98cc\1\u9910\1\u9954\1\u9998\0\u0110\1\u99dc"+
    "\1\u9a20\1\u9a64\1\u9aa8\1\u9aec\1\u9b30\1\u9b74\0\u0110\1\u9bb8"+
    "\1\u9bfc\1\u9c40\1\u9c84\1\u9cc8\0\u0110\1\u9d0c\1\u9d50\1\u9d94"+
    "\1\u9dd8\1\u9e1c\1\u9e60\0\u0110\1\u9ea4\0\u0110\1\u9ee8\1\u9f2c"+
    "\1\u9f70\1\u9fb4\1\u9ff8\1\ua03c\1\ua080\1\ua0c4\1\ua108\1\ua14c"+
    "\0\u0110\1\ua190\1\ua1d4\1\ua218\1\ua25c\1\ua2a0\1\ua2e4\0\u0110"+
    "\1\ua328\1\ua36c\0\u0110\1\ua3b0\1\ua3f4\1\ua438\1\ua47c\1\ua4c0"+
    "\1\ua504\1\ua548\1\ua58c\1\ua5d0\1\ua614\1\ua658\1\ua69c\1\ua6e0"+
    "\1\ua724\0\u0110\1\ua768\1\ua7ac\1\ua7f0\1\ua834\1\ua878\0\u0110"+
    "\1\ua8bc\1\ua900\1\ua944\1\ua988\1\ua9cc\0\u0110\1\uaa10\1\uaa54"+
    "\1\uaa98\1\uaadc\0\u0110\1\uab20\1\uab64\1\uaba8\1\uabec\1\uac30"+
    "\1\uac74\1\uacb8\1\uacfc\1\uad40\1\uad84\1\uadc8\1\uae0c\1\uae50"+
    "\1\uae94\1\uaed8\1\uaf1c\1\uaf60\1\uafa4\1\uafe8\1\ub02c\1\ub070"+
    "\1\ub0b4\1\ub0f8\1\ub13c\1\ub180\1\ub1c4\1\ub208\1\ub24c\1\ub290"+
    "\1\ub2d4\1\ub318\1\ub35c\1\ub3a0\1\ub3e4\1\ub428\1\ub46c\1\ub4b0";

  private static int [] zzUnpackRowMap() {
    int [] result = new int[1848];
    int offset = 0;
    offset = zzUnpackRowMap(ZZ_ROWMAP_PACKED_0, offset, result);
    return result;
  }

  private static int zzUnpackRowMap(String packed, int offset, int [] result) {
    int i = 0;  /* index in packed string  */
    int j = offset;  /* index in unpacked array */
    int l = packed.length();
    while (i < l) {
      int high = packed.charAt(i++) << 16;
      result[j++] = high | packed.charAt(i++);
    }
    return j;
  }

  /** 
   * The transition table of the DFA
   */
  private static final int [] ZZ_TRANS = zzUnpackTrans();

  private static final String ZZ_TRANS_PACKED_0 =
    "\1\3\1\4\4\3\2\5\1\3\1\5\3\3\30\5"+
    "\1\3\5\5\2\3\11\5\1\3\2\5\1\6\1\3"+
    "\7\5\2\3\71\7\1\10\12\7\6\0\1\11\1\12"+
    "\1\13\1\14\4\0\1\11\1\12\1\13\1\15\1\0"+
    "\1\16\1\0\1\17\1\20\2\21\2\22\2\23\2\24"+
    "\2\25\2\26\1\27\1\30\3\31\2\32\3\0\1\33"+
    "\1\34\1\35\1\36\3\0\2\37\7\0\1\40\1\41"+
    "\7\0\1\42\3\0\1\11\1\12\1\13\1\14\4\0"+
    "\1\11\1\12\1\13\1\15\1\0\1\16\1\0\1\17"+
    "\1\20\2\21\2\22\2\23\2\24\2\25\2\26\1\27"+
    "\1\30\3\31\2\32\3\0\1\33\1\34\1\35\1\36"+
    "\3\0\2\37\7\0\1\40\1\41\117\0\1\11\1\12"+
    "\1\13\1\14\4\0\1\11\1\12\1\13\1\15\1\0"+
    "\1\16\1\0\1\17\1\20\2\21\2\22\2\23\2\24"+
    "\2\25\2\26\1\27\1\30\3\31\2\32\3\0\1\33"+
    "\1\34\1\43\1\44\3\0\2\37\7\0\1\40\1\41"+
    "\61\0\1\45\54\0\2\46\12\0\2\47\5\0\2\50"+
    "\57\0\2\51\2\0\2\52\2\0\2\53\2\0\2\54"+
    "\2\0\3\55\2\56\33\0\2\57\2\0\1\60\1\57"+
    "\2\0\1\61\1\0\1\57\2\0\1\57\2\0\1\61"+
    "\3\0\2\62\4\0\2\63\2\64\6\0\3\65\2\66"+
    "\1\0\1\67\1\0\2\70\2\71\22\0\1\57\25\0"+
    "\2\72\2\0\2\73\2\0\2\74\2\0\2\75\2\0"+
    "\3\76\2\77\57\0\2\72\6\0\2\74\2\0\2\75"+
    "\2\0\3\76\2\100\33\0\2\57\2\0\1\60\1\57"+
    "\2\0\1\101\1\0\1\57\2\0\1\57\2\0\1\101"+
    "\3\0\2\62\4\0\2\63\2\64\6\0\3\65\2\66"+
    "\1\0\1\67\1\0\2\70\2\71\22\0\1\57\6\0"+
    "\1\102\1\103\1\104\4\0\1\105\1\102\1\103\1\104"+
    "\1\0\1\105\1\104\3\0\2\106\2\107\2\110\4\0"+
    "\2\111\5\0\2\112\5\0\2\113\31\0\1\102\1\103"+
    "\1\104\4\0\1\105\1\102\1\103\1\104\1\0\1\105"+
    "\1\104\3\0\2\106\2\107\2\110\4\0\2\111\5\0"+
    "\2\112\5\0\2\113\2\114\52\0\2\115\2\0\2\116"+
    "\11\0\2\117\57\0\2\120\6\0\2\121\2\0\2\122"+
    "\2\0\3\123\2\124\57\0\2\125\6\0\2\126\6\0"+
    "\3\127\3\0\1\130\36\0\1\131\1\0\1\132\5\0"+
    "\1\131\1\0\1\132\2\0\1\132\31\0\2\133\52\0"+
    "\2\134\2\0\2\135\2\0\2\136\2\0\2\137\2\0"+
    "\3\140\2\141\21\0\2\142\15\0\1\143\7\0\1\143"+
    "\12\0\2\144\4\0\2\145\14\0\2\146\5\0\2\147"+
    "\43\0\2\150\2\0\2\151\2\0\2\152\2\0\2\153"+
    "\5\0\2\154\57\0\2\150\2\0\2\155\2\0\2\152"+
    "\2\0\2\153\5\0\2\154\42\0\1\156\7\0\1\156"+
    "\2\0\1\156\3\0\2\157\2\160\10\0\2\161\10\0"+
    "\2\162\54\0\2\163\2\164\24\0\2\165\50\0\2\166"+
    "\6\0\2\167\6\0\3\170\2\171\57\0\2\172\6\0"+
    "\2\167\6\0\3\170\2\171\32\0\1\173\1\174\4\173"+
    "\2\0\1\173\1\0\3\173\10\0\2\175\6\0\2\176"+
    "\2\0\2\177\2\0\1\200\2\201\2\202\3\173\11\0"+
    "\1\173\2\0\2\173\7\0\3\173\1\174\4\173\2\0"+
    "\1\173\1\0\3\173\10\0\2\203\6\0\2\204\2\0"+
    "\2\177\2\0\1\200\2\201\2\205\3\173\11\0\1\173"+
    "\2\0\2\173\7\0\2\173\25\0\2\206\106\0\2\207"+
    "\2\0\2\210\6\0\3\211\2\212\63\0\2\207\2\0"+
    "\2\213\6\0\3\211\2\212\32\0\1\173\1\174\4\173"+
    "\2\0\1\173\1\0\3\173\10\0\2\175\6\0\2\176"+
    "\2\0\2\177\2\0\1\200\2\201\2\202\3\173\11\0"+
    "\1\214\2\215\2\173\7\0\3\173\1\174\4\173\2\0"+
    "\1\173\1\0\3\173\10\0\2\203\6\0\2\204\2\0"+
    "\2\177\2\0\1\200\2\201\2\205\3\173\11\0\1\214"+
    "\2\215\2\173\7\0\2\173\57\0\2\216\34\0\1\217"+
    "\7\0\1\217\132\0\2\220\63\0\2\221\2\222\57\0"+
    "\1\223\7\0\1\223\2\0\1\223\5\0\2\224\106\0"+
    "\2\225\6\0\3\226\42\0\1\227\7\0\1\227\12\0"+
    "\2\230\24\0\2\231\102\0\2\232\60\0\2\233\55\0"+
    "\1\234\7\0\1\234\2\0\1\234\33\0\2\235\24\0"+
    "\2\57\2\0\1\60\5\0\1\57\41\0\2\70\24\0"+
    "\1\57\6\0\1\236\7\0\1\236\112\0\2\237\56\0"+
    "\2\57\2\0\1\60\1\240\1\0\1\241\2\0\1\57"+
    "\2\0\1\240\1\0\1\241\2\0\1\241\5\0\2\242"+
    "\2\243\20\0\2\70\2\244\22\0\1\57\35\0\2\245"+
    "\6\0\3\246\65\0\2\247\102\0\2\250\2\0\2\251"+
    "\2\252\51\0\1\253\7\0\1\253\66\0\2\57\2\0"+
    "\1\60\1\57\4\0\1\57\2\0\1\57\6\0\2\254"+
    "\26\0\2\70\24\0\1\57\25\0\2\255\125\0\2\256"+
    "\63\0\2\257\2\260\2\261\20\0\2\262\3\0\2\263"+
    "\43\0\2\264\65\0\1\265\7\0\1\265\2\0\1\265"+
    "\5\0\2\266\100\0\2\267\63\0\1\270\7\0\1\270"+
    "\2\0\1\270\1\0\2\271\6\0\2\272\76\0\2\273"+
    "\10\0\2\274\12\0\2\275\54\0\2\273\24\0\2\275"+
    "\50\0\2\237\6\0\2\276\104\0\2\277\23\0\2\300"+
    "\47\0\2\301\110\0\2\302\2\0\2\303\74\0\2\304"+
    "\76\0\2\305\106\0\2\306\16\0\2\307\62\0\2\310"+
    "\55\0\1\311\7\0\1\311\2\0\1\311\70\0\1\312"+
    "\7\0\1\312\2\0\1\312\67\0\1\313\7\0\1\313"+
    "\15\0\2\314\106\0\2\315\76\0\2\316\11\0\2\317"+
    "\40\0\1\320\7\0\1\320\12\0\2\321\15\0\2\322"+
    "\63\0\2\323\100\0\2\324\2\0\2\325\60\0\1\326"+
    "\7\0\1\326\5\0\2\327\63\0\1\330\7\0\1\330"+
    "\2\0\1\330\115\0\2\331\16\0\2\332\60\0\2\333"+
    "\20\0\2\334\56\0\2\335\24\0\2\336\31\0\1\337"+
    "\7\0\1\337\12\0\2\340\60\0\1\341\7\0\1\341"+
    "\17\0\2\342\2\0\2\343\40\0\2\130\2\0\1\344"+
    "\5\0\1\130\11\0\2\345\35\0\2\346\15\0\1\130"+
    "\6\0\1\347\7\0\1\347\130\0\2\350\104\0\3\351"+
    "\44\0\1\352\7\0\1\352\2\0\1\352\3\0\2\353"+
    "\2\354\10\0\2\355\10\0\2\356\2\357\60\0\2\360"+
    "\11\0\2\361\42\0\1\362\7\0\1\362\2\0\1\362"+
    "\66\0\1\363\7\0\1\363\76\0\1\364\7\0\1\364"+
    "\21\0\2\365\47\0\1\366\7\0\1\366\2\0\1\366"+
    "\31\0\2\367\72\0\3\370\63\0\2\371\62\0\1\372"+
    "\7\0\1\372\115\0\2\373\60\0\1\374\7\0\1\374"+
    "\131\0\3\375\65\0\2\376\106\0\2\377\6\0\3\u0100"+
    "\65\0\2\u0101\22\0\2\u0102\56\0\2\u0103\61\0\1\u0104"+
    "\7\0\1\u0104\2\0\1\u0104\5\0\2\u0105\76\0\2\u0106"+
    "\6\0\2\377\6\0\3\u0100\71\0\2\u0107\20\0\2\u0108"+
    "\102\0\2\u0109\102\0\2\u010a\50\0\2\u010b\66\0\1\u010c"+
    "\7\0\1\u010c\141\0\2\u010d\70\0\3\u010e\43\0\1\u010f"+
    "\7\0\1\u010f\5\0\2\u0110\63\0\1\u0111\7\0\1\u0111"+
    "\12\0\2\u0112\4\0\2\u0113\2\0\2\u0114\12\0\2\u0115"+
    "\33\0\1\u0116\7\0\1\u0116\2\0\1\u0116\137\0\2\u0117"+
    "\31\0\1\u0118\7\0\1\u0118\40\0\2\u0119\3\0\2\u011a"+
    "\24\0\1\u0111\1\0\1\u011b\5\0\1\u0111\1\0\1\u011b"+
    "\2\0\1\u011b\5\0\2\u0112\4\0\2\u011c\2\0\2\u0114"+
    "\12\0\2\u0115\51\0\1\u011d\57\0\1\173\23\0\1\u011d"+
    "\72\0\1\u011e\4\0\1\u011e\20\0\2\u011f\76\0\2\u0120"+
    "\2\0\2\u0121\47\0\1\u0122\7\0\1\u0122\2\0\1\u0122"+
    "\13\0\2\u0123\71\0\1\u011d\2\u0124\2\0\2\u0125\2\u0126"+
    "\4\0\2\u0127\66\0\2\u0124\2\0\2\u0125\2\u0126\4\0"+
    "\2\u0127\114\0\2\u0128\26\0\4\u0129\1\u012a\5\0\1\u0129"+
    "\1\0\1\u011e\4\0\1\u011e\1\u012b\17\0\2\u011f\36\0"+
    "\1\u0129\37\0\2\u012c\2\0\2\u0121\114\0\2\u0128\5\0"+
    "\2\u012d\24\0\1\u012e\7\0\1\u012e\112\0\2\u012f\16\0"+
    "\3\u0130\2\u0131\63\0\2\u0132\31\0\2\u0133\24\0\1\u0134"+
    "\7\0\1\u0134\12\0\2\u0135\100\0\2\u0136\2\u0137\102\0"+
    "\2\u0138\31\0\2\u0133\24\0\1\u0139\7\0\1\u0139\7\0"+
    "\1\u011d\63\0\1\u0139\7\0\1\u0139\153\0\3\u013a\63\0"+
    "\2\u013b\63\0\2\u013c\104\0\2\u013d\74\0\2\u013e\122\0"+
    "\3\u013f\101\0\3\u0140\7\0\2\u0141\33\0\1\u0142\7\0"+
    "\1\u0142\2\0\1\u0142\66\0\1\u0143\7\0\1\u0143\122\0"+
    "\2\u0144\74\0\2\u0145\102\0\2\u0146\26\0\2\u0147\52\0"+
    "\2\u0148\132\0\2\u0149\31\0\1\u014a\7\0\1\u014a\102\0"+
    "\1\u014b\4\0\1\u014b\25\0\2\u014c\41\0\1\u014d\7\0"+
    "\1\u014d\113\0\2\u014e\54\0\2\57\2\0\1\60\5\0"+
    "\1\57\15\0\2\u014f\22\0\2\70\24\0\1\57\10\0"+
    "\1\u0150\7\0\1\u0150\2\0\1\u0150\144\0\2\u0151\66\0"+
    "\2\u0152\67\0\2\u0153\62\0\1\u0154\4\0\1\u0154\76\0"+
    "\1\u0155\4\0\1\u0155\70\0\1\u0156\7\0\1\u0156\111\0"+
    "\2\u0157\63\0\1\u0158\7\0\1\u0158\132\0\3\u0159\120\0"+
    "\2\u015a\17\0\2\57\2\0\1\60\1\57\4\0\1\57"+
    "\2\0\1\57\36\0\2\70\24\0\1\57\31\0\2\u015b"+
    "\104\0\2\u015c\124\0\2\u015d\72\0\3\u015e\44\0\1\u015f"+
    "\7\0\1\u015f\2\0\1\u015f\115\0\2\u0160\115\0\2\u0161"+
    "\75\0\2\u0162\64\0\2\u0163\10\0\2\u0164\104\0\2\u0165"+
    "\120\0\2\u0166\50\0\2\u0167\14\0\2\u0168\76\0\2\u0169"+
    "\120\0\2\u016a\70\0\2\u016b\17\0\2\u016c\53\0\2\u016d"+
    "\115\0\2\u016e\47\0\1\u016f\4\0\1\u016f\131\0\2\u0170"+
    "\102\0\2\u0171\73\0\2\u0172\111\0\2\u0173\77\0\3\u0174"+
    "\65\0\2\u0175\116\0\3\u0176\51\0\1\u0177\4\0\1\u0177"+
    "\116\0\2\u0178\124\0\2\u0179\66\0\2\u017a\102\0\2\u017b"+
    "\64\0\2\u017c\65\0\1\u017d\7\0\1\u017d\2\0\1\u017d"+
    "\125\0\3\u017e\73\0\2\u017f\53\0\1\u0180\7\0\1\u0180"+
    "\2\0\1\u0180\130\0\2\u0181\107\0\2\u0182\56\0\2\u0183"+
    "\116\0\3\u0184\75\0\2\u0185\76\0\2\u0186\46\0\4\u0187"+
    "\1\u0188\2\0\1\u0189\2\0\1\u0187\4\0\1\u0189\2\0"+
    "\1\u0189\13\0\2\u018a\2\u018b\10\0\1\u018c\1\0\2\u018d"+
    "\5\0\2\u018e\15\0\1\u0187\6\0\1\u018f\7\0\1\u018f"+
    "\10\0\2\u0190\14\0\3\u0191\3\0\1\u0192\40\0\1\u0193"+
    "\7\0\1\u0193\2\0\1\u0193\123\0\2\u0194\104\0\3\u0195"+
    "\101\0\3\u0196\61\0\2\u0197\112\0\2\u0198\46\0\2\130"+
    "\2\0\1\344\5\0\1\130\11\0\2\345\30\0\2\u0199"+
    "\3\0\2\346\15\0\1\130\35\0\2\u019a\54\0\1\u019b"+
    "\7\0\1\u019b\17\0\2\u019c\7\0\2\u019d\102\0\2\u019e"+
    "\67\0\2\u019f\102\0\2\u01a0\53\0\1\u01a1\7\0\1\u01a1"+
    "\135\0\2\u01a2\32\0\1\u01a3\2\0\77\u01a3\27\0\2\u01a4"+
    "\125\0\2\u01a5\111\0\2\u01a6\60\0\2\u01a7\124\0\2\u01a8"+
    "\32\0\1\u01a9\7\0\1\u01a9\11\0\2\u01aa\76\0\2\u01ab"+
    "\66\0\1\u01ac\7\0\1\u01ac\107\0\2\u01ad\14\0\2\u01ae"+
    "\114\0\2\u01af\52\0\2\u01b0\14\0\2\u01b1\74\0\2\u01b2"+
    "\102\0\2\u01b3\76\0\2\u01b4\114\0\2\u01b5\74\0\2\u01b6"+
    "\106\0\2\u01b7\5\0\2\u01b8\67\0\2\u01b9\140\0\2\u01ba"+
    "\54\0\3\u01bb\61\0\2\u01bc\106\0\2\u01bd\57\0\1\u01be"+
    "\7\0\1\u01be\112\0\2\u01bf\63\0\1\u01c0\7\0\1\u01c0"+
    "\14\0\2\u01c1\104\0\2\u01c2\53\0\1\u01c3\7\0\1\u01c3"+
    "\6\0\2\u01c4\66\0\1\u01c5\7\0\1\u01c5\121\0\2\u01c6"+
    "\102\0\2\u01c7\110\0\3\u01c8\45\0\1\u01c9\7\0\1\u01c9"+
    "\113\0\2\u01ca\76\0\2\u01cb\112\0\2\u01cc\72\0\2\u01cd"+
    "\134\0\2\u01ce\60\0\2\u01cf\112\0\3\u01d0\44\0\1\u01d1"+
    "\7\0\1\u01d1\2\0\1\u01d1\125\0\3\u01d2\42\0\1\u01d3"+
    "\7\0\1\u01d3\130\0\2\u01d4\76\0\2\u01d5\100\0\2\u01d6"+
    "\102\0\2\u01d7\110\0\2\u01d8\47\0\1\u01d9\7\0\1\u01d9"+
    "\2\0\1\u01d9\17\0\2\u01da\64\0\2\u01db\72\0\1\u01dc"+
    "\4\0\1\u01dc\2\0\2\u01dd\14\0\2\u01de\104\0\3\u01df"+
    "\14\0\2\u01e0\53\0\2\u01e1\55\0\1\u01e2\7\0\1\u01e2"+
    "\2\0\1\u01e2\115\0\2\u01e3\126\0\2\114\66\0\3\u01e4"+
    "\101\0\3\u01e5\73\0\2\u01e6\106\0\2\u01e7\47\0\1\u01e8"+
    "\7\0\1\u01e8\2\0\1\u01e8\117\0\2\u01e9\104\0\2\u01ea"+
    "\111\0\2\u01eb\71\0\2\u01ec\104\0\2\u01ed\50\0\1\u01ee"+
    "\7\0\1\u01ee\65\0\4\u0129\1\u012a\5\0\1\u0129\7\0"+
    "\1\u012b\57\0\1\u0129\6\0\1\u01ef\7\0\1\u01ef\76\0"+
    "\1\u01f0\7\0\1\u01f0\121\0\2\u01f1\110\0\3\u01f2\101\0"+
    "\3\u01f3\42\0\1\u01f4\7\0\1\u01f4\126\0\2\u01f5\51\0"+
    "\1\u01f6\7\0\1\u01f6\2\0\1\u01f6\111\0\2\u01f7\52\0"+
    "\4\u01f8\1\u01f9\5\0\1\u01f8\15\0\2\u01fa\2\0\2\u01fb"+
    "\14\0\1\u01fc\27\0\1\u01f8\57\0\2\u01fd\60\0\2\u01fe"+
    "\74\0\2\u01ff\132\0\2\u0200\54\0\2\u01f7\22\0\2\u0201"+
    "\41\0\1\u0202\75\0\1\u0203\7\0\1\u0203\144\0\2\u0204"+
    "\73\0\2\u0205\67\0\2\u0206\76\0\2\u0207\130\0\2\u0208"+
    "\23\0\1\u0209\1\u020a\4\u0209\2\0\1\u0209\1\0\3\u0209"+
    "\30\0\1\u0209\5\0\2\u0209\11\0\1\u0209\2\0\2\u0209"+
    "\7\0\2\u0209\35\0\2\u020b\104\0\2\u020c\127\0\2\u020d"+
    "\51\0\2\u020e\74\0\2\u020f\122\0\3\u0210\75\0\2\u0211"+
    "\66\0\2\u0212\125\0\2\u0213\5\0\2\u0214\70\0\3\u0215"+
    "\61\0\2\u0216\104\0\2\u0217\63\0\1\u0218\7\0\1\u0218"+
    "\2\0\1\u0218\66\0\1\u0219\7\0\1\u0219\122\0\2\u021a"+
    "\72\0\2\u021b\112\0\2\u021c\53\0\1\u021d\7\0\1\u021d"+
    "\116\0\2\u021e\116\0\3\u021f\51\0\1\u0220\4\0\1\u0220"+
    "\126\0\3\u0221\73\0\2\u0222\70\0\2\u0223\134\0\2\u0224"+
    "\54\0\2\u0225\116\0\3\u0226\61\0\2\u0227\6\0\2\u0228"+
    "\72\0\2\u0229\102\0\2\u022a\122\0\3\u022b\65\0\2\u022c"+
    "\104\0\2\u022d\117\0\2\u022e\63\0\2\u022f\76\0\2\u0230"+
    "\104\0\2\u0231\120\0\3\u0232\34\0\1\u0233\1\u0234\4\u0233"+
    "\2\0\1\u0233\1\0\3\u0233\30\0\1\u0233\5\0\2\u0233"+
    "\11\0\1\u0233\2\0\2\u0233\7\0\2\u0233\50\0\2\u0235"+
    "\67\0\2\u0236\115\0\2\u0237\102\0\2\u0238\67\0\2\u0239"+
    "\53\0\1\u023a\7\0\1\u023a\73\0\1\u023b\7\0\1\u023b"+
    "\132\0\3\u023c\42\0\1\u023d\7\0\1\u023d\116\0\2\u023e"+
    "\66\0\1\u023f\4\0\1\u023f\140\0\2\u0240\23\0\1\u0241"+
    "\1\u0242\4\u0241\2\0\1\u0241\1\0\3\u0241\30\0\1\u0241"+
    "\5\0\2\u0241\11\0\1\u0241\2\0\2\u0241\7\0\2\u0241"+
    "\7\0\1\u0243\7\0\1\u0243\113\0\2\u0244\70\0\1\u0245"+
    "\4\0\1\u0245\67\0\1\u0246\7\0\1\u0246\144\0\2\u0247"+
    "\54\0\2\u0248\76\0\2\u0249\63\0\1\u024a\7\0\1\u024a"+
    "\75\0\1\u024b\7\0\1\u024b\2\0\1\u024b\137\0\2\u024c"+
    "\70\0\3\u024d\44\0\1\u024e\7\0\1\u024e\2\0\1\u024e"+
    "\113\0\2\u024f\74\0\2\u0250\104\0\2\u0251\70\0\1\u0252"+
    "\4\0\1\u0252\71\0\1\u0253\7\0\1\u0253\2\0\1\u0253"+
    "\66\0\1\u0254\7\0\1\u0254\66\0\4\u0187\1\u0188\2\0"+
    "\1\u0189\2\0\1\u0187\4\0\1\u0189\2\0\1\u0189\13\0"+
    "\2\u018a\14\0\2\u018d\5\0\2\u018e\15\0\1\u0187\6\0"+
    "\1\u0255\7\0\1\u0255\144\0\2\u0256\60\0\2\u0257\54\0"+
    "\1\u0258\7\0\1\u0258\65\0\4\u0187\1\u0188\2\0\1\u0189"+
    "\2\0\1\u0187\4\0\1\u0189\2\0\1\u0189\13\0\2\u018a"+
    "\2\u018b\12\0\2\u018d\5\0\2\u018e\15\0\1\u0187\25\0"+
    "\2\u0259\21\0\2\u025a\77\0\3\u025b\104\0\2\u025c\77\0"+
    "\3\u025d\104\0\2\u025e\33\0\2\u0192\2\0\1\u025f\1\0"+
    "\1\u0260\1\u0261\1\u0262\1\0\1\u0192\3\0\1\u0260\1\u0261"+
    "\1\u0262\1\0\1\u0261\1\0\2\u0263\4\0\2\u0264\2\u0265"+
    "\2\u0266\2\u0267\2\u0268\10\0\2\u0269\2\u026a\14\0\2\u026b"+
    "\4\0\1\u0192\45\0\3\u026c\101\0\3\u026d\42\0\1\u026e"+
    "\7\0\1\u026e\114\0\2\u026f\53\0\1\u0270\1\u0271\4\u0270"+
    "\1\u0272\1\0\1\u0270\1\0\3\u0270\1\0\1\u0272\26\0"+
    "\1\u0270\5\0\2\u0270\11\0\1\u0270\2\0\2\u0270\7\0"+
    "\2\u0270\10\0\1\u0273\7\0\1\u0273\2\0\1\u0273\115\0"+
    "\2\130\62\0\1\u0274\4\0\1\u0274\20\0\2\u0275\64\0"+
    "\2\u0276\112\0\2\u0277\53\0\1\u0278\7\0\1\u0278\66\0"+
    "\4\u019e\1\u0279\5\0\1\u019e\17\0\2\u027a\46\0\1\u019e"+
    "\6\0\1\u027b\7\0\1\u027b\116\0\2\u027c\60\0\1\u027d"+
    "\7\0\1\u027d\74\0\1\u027e\7\0\1\u027e\2\0\1\u027e"+
    "\61\0\2\u01a3\2\0\1\u027f\5\0\1\u01a3\11\0\2\345"+
    "\54\0\1\u01a3\1\u0280\1\u0281\4\u0280\2\0\1\u0280\1\0"+
    "\3\u0280\30\0\1\u0280\5\0\2\u0280\11\0\1\u0280\2\0"+
    "\2\u0280\7\0\2\u0280\6\0\1\u0282\7\0\1\u0282\132\0"+
    "\3\u0283\65\0\2\u0284\116\0\3\u0285\104\0\2\u0286\57\0"+
    "\2\u0287\63\0\1\u0288\7\0\1\u0288\112\0\2\u0289\21\0"+
    "\2\u028a\41\0\1\u028b\7\0\1\u028b\111\0\2\u028c\125\0"+
    "\2\u028d\47\0\1\u028e\4\0\1\u028e\131\0\2\u028f\40\0"+
    "\1\u0290\7\0\1\u0290\135\0\2\u0291\102\0\2\u0292\32\0"+
    "\1\u0293\2\0\77\u0293\10\0\1\u0294\7\0\1\u0294\73\0"+
    "\1\u0295\7\0\1\u0295\65\0\1\u0296\1\u0297\4\u0296\2\0"+
    "\1\u0296\1\0\3\u0296\30\0\1\u0296\5\0\2\u0296\11\0"+
    "\1\u0296\2\0\2\u0296\7\0\2\u0296\43\0\2\u0298\74\0"+
    "\2\u0299\53\0\1\u029a\7\0\1\u029a\132\0\3\u029b\101\0"+
    "\3\u029c\71\0\2\u029d\53\0\1\u029e\7\0\1\u029e\130\0"+
    "\2\u029f\104\0\3\u02a0\44\0\1\u02a1\7\0\1\u02a1\2\0"+
    "\1\u02a1\125\0\3\u02a2\111\0\2\u02a3\72\0\3\u02a4\127\0"+
    "\2\u02a5\34\0\2\u02a6\63\0\1\u02a7\7\0\1\u02a7\112\0"+
    "\2\u02a8\63\0\1\u02a9\7\0\1\u02a9\73\0\1\u02aa\7\0"+
    "\1\u02aa\75\0\1\u02ab\7\0\1\u02ab\2\0\1\u02ab\66\0"+
    "\1\u02ac\7\0\1\u02ac\132\0\3\u02ad\65\0\2\u02ae\76\0"+
    "\2\u02af\120\0\2\u02b0\64\0\2\u02b1\141\0\2\u02b2\66\0"+
    "\2\u02b3\125\0\2\u02b4\73\0\2\u02b5\47\0\2\u02b6\76\0"+
    "\2\u02b7\122\0\3\u02b8\65\0\2\u02b9\57\0\1\u02ba\7\0"+
    "\1\u02ba\112\0\2\u02bb\114\0\2\u02bc\100\0\2\u02bd\55\0"+
    "\1\u02be\7\0\1\u02be\2\0\1\u02be\105\0\2\u02bf\63\0"+
    "\1\u02c0\7\0\1\u02c0\112\0\2\u02c1\106\0\2\u02c2\31\0"+
    "\2\u02b5\66\0\2\u02c3\40\0\1\u02c4\7\0\1\u02c4\122\0"+
    "\2\u02c5\115\0\2\u02c6\67\0\2\u02c7\72\0\2\u02c8\106\0"+
    "\2\u02c9\102\0\2\u02ca\144\0\2\u02cb\34\0\2\u02cc\102\0"+
    "\2\u02cd\64\0\1\u02ce\7\0\1\u02ce\121\0\2\276\102\0"+
    "\2\u02c5\11\0\2\u02cf\32\0\1\u02d0\1\u02d1\4\u02d0\2\0"+
    "\1\u02d0\1\0\3\u02d0\30\0\1\u02d0\5\0\2\u02d0\11\0"+
    "\1\u02d0\2\0\2\u02d0\7\0\2\u02d0\55\0\2\u02d2\64\0"+
    "\2\u02d3\122\0\2\u02d4\70\0\3\u02d5\61\0\2\u02d6\56\0"+
    "\4\u01f8\1\u01f9\5\0\1\u01f8\15\0\2\u01fa\50\0\1\u01f8"+
    "\6\0\1\u02d7\7\0\1\u02d7\126\0\2\u02d8\72\0\2\u02d9"+
    "\52\0\4\u01f8\1\u01f9\5\0\1\u01f8\15\0\2\u01fa\2\0"+
    "\2\u01fb\44\0\1\u01f8\25\0\2\u02da\63\0\1\u02db\7\0"+
    "\1\u02db\132\0\3\u02dc\101\0\3\u02dd\104\0\2\u02de\36\0"+
    "\1\u02df\1\0\2\u02df\1\0\1\u02df\10\0\2\u02df\2\0"+
    "\1\u02df\1\0\1\u02df\1\0\1\u02df\1\0\1\u02df\1\0"+
    "\1\u02df\1\0\1\u02df\1\0\1\u02df\1\0\1\u02df\2\0"+
    "\1\u02df\1\0\1\u02df\4\0\1\u02df\1\0\1\u02df\1\0"+
    "\2\u02df\1\0\1\u02df\2\0\1\u02df\3\0\1\u02df\1\0"+
    "\1\u02df\2\0\1\u02df\47\0\3\u02e0\34\0\1\u02e1\1\u02e2"+
    "\4\u02e1\2\0\1\u02e1\1\0\3\u02e1\30\0\1\u02e1\5\0"+
    "\2\u02e1\11\0\1\u02e1\2\0\2\u02e1\7\0\2\u02e1\27\0"+
    "\2\u02e3\100\0\2\u02e4\122\0\3\u02e5\36\0\1\u0209\144\0"+
    "\2\u02e6\104\0\3\u02e7\101\0\3\u02e8\71\0\2\u02e9\122\0"+
    "\2\u02ea\75\0\2\u02eb\40\0\1\u02ec\7\0\1\u02ec\116\0"+
    "\2\u02ed\102\0\2\u02ee\76\0\2\u02ef\102\0\2\u02f0\63\0"+
    "\1\u02f1\7\0\1\u02f1\73\0\1\u02f2\7\0\1\u02f2\76\0"+
    "\1\u02f3\7\0\1\u02f3\107\0\2\u02f4\132\0\2\u02f5\56\0"+
    "\2\u02f6\100\0\2\u02f7\100\0\2\u02f8\63\0\1\u02f9\7\0"+
    "\1\u02f9\112\0\2\u02fa\112\0\2\u02fb\72\0\2\u02fc\116\0"+
    "\2\u02fd\41\0\1\u02fe\1\u02ff\4\u02fe\2\0\1\u02fe\1\0"+
    "\3\u02fe\30\0\1\u02fe\5\0\2\u02fe\11\0\1\u02fe\2\0"+
    "\2\u02fe\7\0\2\u02fe\45\0\3\u0300\101\0\3\u0301\42\0"+
    "\1\u0302\7\0\1\u0302\124\0\2\u0303\51\0\1\u0304\7\0"+
    "\1\u0304\65\0\1\u0305\1\u0306\4\u0305\2\0\1\u0305\1\0"+
    "\3\u0305\30\0\1\u0305\5\0\2\u0305\11\0\1\u0305\2\0"+
    "\2\u0305\7\0\2\u0305\1\u0307\1\u0308\4\u0307\2\0\1\u0307"+
    "\1\0\3\u0307\30\0\1\u0307\5\0\2\u0307\11\0\1\u0307"+
    "\2\0\2\u0307\7\0\2\u0307\1\0\4\u022b\1\u0309\1\0"+
    "\1\u030a\3\0\1\u022b\3\0\1\u030a\63\0\1\u022b\55\0"+
    "\2\u030b\52\0\2\u030c\55\0\1\u030d\1\u030e\4\u030d\2\0"+
    "\1\u030d\1\0\3\u030d\30\0\1\u030d\5\0\2\u030d\11\0"+
    "\1\u030d\2\0\2\u030d\7\0\2\u030d\50\0\2\u030f\63\0"+
    "\2\u0310\116\0\3\u0311\61\0\2\u0312\57\0\1\u0233\146\0"+
    "\3\u0313\42\0\1\u0314\7\0\1\u0314\73\0\1\u0315\7\0"+
    "\1\u0315\114\0\2\u0316\61\0\1\u0317\7\0\1\u0317\102\0"+
    "\1\u0318\4\0\1\u0318\126\0\3\u0319\61\0\2\u031a\102\0"+
    "\2\u031b\106\0\2\u031c\66\0\1\u031d\4\0\1\u031d\126\0"+
    "\3\u031e\36\0\1\u0241\126\0\2\u031f\112\0\2\u0320\115\0"+
    "\2\u0321\77\0\3\u0322\101\0\3\u0323\101\0\3\u0324\34\0"+
    "\1\u0325\1\u0326\4\u0325\2\0\1\u0325\1\0\3\u0325\30\0"+
    "\1\u0325\5\0\2\u0325\11\0\1\u0325\2\0\2\u0325\7\0"+
    "\2\u0325\45\0\3\u0327\61\0\2\u0328\102\0\2\u0329\102\0"+
    "\2\u032a\112\0\2\u032b\72\0\2\u032c\63\0\1\u032d\7\0"+
    "\1\u032d\132\0\3\u032e\101\0\3\u032f\61\0\2\u0330\63\0"+
    "\1\u0331\7\0\1\u0331\74\0\1\u0332\7\0\1\u0332\134\0"+
    "\2\u0333\71\0\2\u0334\52\0\1\u0335\7\0\1\u0335\123\0"+
    "\2\u0336\122\0\2\u0337\24\0\2\u025b\2\0\1\u0338\2\0"+
    "\1\u0339\2\0\1\u025b\4\0\1\u0339\2\0\1\u0339\31\0"+
    "\2\u033a\24\0\1\u025b\1\0\4\u025c\1\u033b\5\0\1\u025c"+
    "\25\0\2\u033c\40\0\1\u025c\50\0\2\u033d\40\0\1\u033e"+
    "\7\0\1\u033e\73\0\1\u033f\7\0\1\u033f\112\0\2\u0340"+
    "\102\0\2\u0341\16\0\3\u0342\75\0\2\75\2\0\3\u0343"+
    "\43\0\1\103\7\0\1\103\111\0\2\u0344\6\0\2\u0345"+
    "\14\0\1\130\105\0\2\133\52\0\2\u0346\132\0\2\146"+
    "\56\0\2\u0347\15\0\2\u0348\57\0\2\u0349\21\0\2\u034a"+
    "\57\0\2\u034b\16\0\3\u034c\2\202\63\0\2\u034d\76\0"+
    "\2\u034e\55\0\1\u034f\1\u0350\4\u034f\2\0\1\u034f\1\0"+
    "\3\u034f\30\0\1\u034f\5\0\2\u034f\11\0\1\u034f\2\0"+
    "\2\u034f\7\0\2\u034f\45\0\3\u0351\104\0\2\u0352\34\0"+
    "\1\u0270\146\0\3\u0353\71\0\2\u0354\112\0\3\u0355\104\0"+
    "\2\u0356\40\0\1\u0357\7\0\1\u0357\144\0\2\u0358\50\0"+
    "\2\u0359\63\0\1\u035a\7\0\1\u035a\112\0\2\u035b\72\0"+
    "\1\u035c\4\0\1\u035c\70\0\1\u035d\7\0\1\u035d\74\0"+
    "\1\u035e\7\0\1\u035e\2\0\1\u035e\123\0\2\u035f\45\0"+
    "\1\u0360\7\0\1\u0360\67\0\1\u0280\146\0\3\u0361\61\0"+
    "\2\u0362\120\0\2\u0363\64\0\2\u0364\63\0\1\u0365\7\0"+
    "\1\u0365\116\0\2\u0366\66\0\1\u0367\4\0\1\u0367\22\0"+
    "\3\u0368\42\0\1\u0369\7\0\1\u0369\74\0\1\u036a\7\0"+
    "\1\u036a\115\0\2\u036b\57\0\1\u036c\7\0\1\u036c\73\0"+
    "\1\u036d\7\0\1\u036d\132\0\3\u036e\42\0\1\u036f\7\0"+
    "\1\u036f\112\0\2\u0370\55\0\1\u0371\1\u0372\4\u0371\2\0"+
    "\1\u0371\1\0\3\u0371\30\0\1\u0371\5\0\2\u0371\11\0"+
    "\1\u0371\2\0\2\u0371\7\0\2\u0371\1\u0373\1\u0374\4\u0373"+
    "\2\0\1\u0373\1\0\3\u0373\30\0\1\u0373\5\0\2\u0373"+
    "\11\0\1\u0373\2\0\2\u0373\7\0\2\u0373\1\0\2\u0293"+
    "\2\0\1\u0375\1\u0376\1\u0377\1\u0378\1\u0379\1\0\1\u0293"+
    "\2\0\1\u0376\1\u0377\1\u0378\1\u037a\1\0\1\u037b\1\0"+
    "\1\u037c\1\u037d\2\u037e\2\u037f\2\u0380\2\u0381\2\u0382\2\u0383"+
    "\1\u0384\1\u0385\3\u0386\2\u0387\3\0\1\u0388\1\u0389\1\u038a"+
    "\1\u038b\10\0\1\u038c\3\0\1\u038d\1\u038e\4\0\1\u0293"+
    "\15\0\1\u038f\4\0\1\u038f\116\0\2\u0293\47\0\1\u0296"+
    "\146\0\3\u0390\65\0\2\u0391\121\0\2\u0392\40\0\1\u0393"+
    "\7\0\1\u0393\112\0\2\u0394\55\0\1\u0395\1\u0396\4\u0395"+
    "\2\0\1\u0395\1\0\3\u0395\30\0\1\u0395\5\0\2\u0395"+
    "\11\0\1\u0395\2\0\2\u0395\7\0\2\u0395\43\0\2\u0397"+
    "\104\0\3\u0398\2\u0399\42\0\1\u039a\7\0\1\u039a\2\0"+
    "\1\u039a\123\0\2\u039b\37\0\1\u039c\1\u039d\4\u039c\2\0"+
    "\1\u039c\1\0\3\u039c\30\0\1\u039c\5\0\2\u039c\11\0"+
    "\1\u039c\2\0\2\u039c\7\0\2\u039c\50\0\2\u039e\102\0"+
    "\2\u039f\77\0\3\u03a0\42\0\1\u03a1\7\0\1\u03a1\135\0"+
    "\2\u03a2\40\0\1\u03a3\7\0\1\u03a3\132\0\3\u03a4\120\0"+
    "\2\u03a5\63\0\3\u03a6\120\0\2\u03a7\43\0\2\u03a8\122\0"+
    "\3\u03a9\44\0\1\u03aa\7\0\1\u03aa\2\0\1\u03aa\105\0"+
    "\2\u03ab\55\0\1\u03ac\1\u03ad\4\u03ac\2\0\1\u03ac\1\0"+
    "\3\u03ac\30\0\1\u03ac\5\0\2\u03ac\11\0\1\u03ac\2\0"+
    "\2\u03ac\7\0\2\u03ac\25\0\2\u03ae\110\0\2\u03af\104\0"+
    "\2\u03b0\115\0\2\u03b1\57\0\2\u03b2\55\0\1\u03b3\1\u03b4"+
    "\4\u03b3\2\0\1\u03b3\1\0\3\u03b3\30\0\1\u03b3\5\0"+
    "\2\u03b3\11\0\1\u03b3\2\0\2\u03b3\7\0\2\u03b3\6\0"+
    "\1\u03b5\7\0\1\u03b5\122\0\2\u03b6\115\0\2\u03b7\32\0"+
    "\1\u03b8\1\u03b9\4\u03b8\2\0\1\u03b8\1\0\3\u03b8\30\0"+
    "\1\u03b8\5\0\2\u03b8\11\0\1\u03b8\2\0\2\u03b8\7\0"+
    "\2\u03b8\50\0\2\u03ba\40\0\1\u03bb\7\0\1\u03bb\122\0"+
    "\2\u03bc\100\0\2\u03bd\74\0\2\u03be\55\0\1\u03bf\1\u03c0"+
    "\4\u03bf\2\0\1\u03bf\1\0\3\u03bf\30\0\1\u03bf\5\0"+
    "\2\u03bf\11\0\1\u03bf\2\0\2\u03bf\7\0\2\u03bf\25\0"+
    "\2\u03c1\55\0\1\u03c2\1\u03c3\4\u03c2\2\0\1\u03c2\1\0"+
    "\3\u03c2\30\0\1\u03c2\5\0\2\u03c2\11\0\1\u03c2\2\0"+
    "\2\u03c2\7\0\2\u03c2\25\0\2\u03c4\55\0\1\u03c5\1\u03c6"+
    "\4\u03c5\2\0\1\u03c5\1\0\3\u03c5\30\0\1\u03c5\5\0"+
    "\2\u03c5\11\0\1\u03c5\2\0\2\u03c5\7\0\2\u03c5\6\0"+
    "\1\u03c7\7\0\1\u03c7\142\0\2\u03c8\25\0\1\u03c9\1\u03ca"+
    "\4\u03c9\2\0\1\u03c9\1\0\3\u03c9\30\0\1\u03c9\5\0"+
    "\2\u03c9\11\0\1\u03c9\2\0\2\u03c9\7\0\2\u03c9\45\0"+
    "\3\u03cb\42\0\1\u03cc\7\0\1\u03cc\130\0\2\u03cd\45\0"+
    "\1\u03ce\7\0\1\u03ce\116\0\2\u03cf\61\0\1\u03d0\7\0"+
    "\1\u03d0\2\0\1\u03d0\60\0\1\u03d1\1\u03d2\4\u03d1\2\0"+
    "\1\u03d1\1\0\3\u03d1\30\0\1\u03d1\5\0\2\u03d1\11\0"+
    "\1\u03d1\2\0\2\u03d1\7\0\2\u03d1\2\0\1\u02d0\126\0"+
    "\2\u03d3\122\0\3\u03d4\101\0\3\u03d5\42\0\1\u03d6\7\0"+
    "\1\u03d6\116\0\2\u03d7\60\0\1\u03d8\7\0\1\u03d8\74\0"+
    "\1\u03d9\7\0\1\u03d9\2\0\1\u03d9\105\0\2\u03da\63\0"+
    "\1\u03db\7\0\1\u03db\102\0\1\u03dc\4\0\1\u03dc\106\0"+
    "\2\u03dd\55\0\1\u03de\1\u03df\4\u03de\2\0\1\u03de\1\0"+
    "\3\u03de\30\0\1\u03de\5\0\2\u03de\11\0\1\u03de\2\0"+
    "\2\u03de\7\0\2\u03de\1\u03e0\1\u03e1\4\u03e0\2\0\1\u03e0"+
    "\1\0\3\u03e0\30\0\1\u03e0\5\0\2\u03e0\11\0\1\u03e0"+
    "\2\0\2\u03e0\7\0\2\u03e0\4\0\1\u02df\1\0\2\u02df"+
    "\1\0\1\u02df\2\0\1\u03e2\5\0\2\u02df\2\0\1\u02df"+
    "\1\0\1\u02df\1\0\1\u02df\1\0\1\u02df\1\0\1\u02df"+
    "\1\0\1\u02df\1\0\1\u02df\1\0\1\u02df\2\0\1\u02df"+
    "\1\0\1\u02df\4\0\1\u02df\1\0\1\u02df\1\0\2\u02df"+
    "\1\0\1\u02df\2\0\1\u02df\3\0\1\u02df\1\0\1\u02df"+
    "\2\0\1\u02df\2\0\1\u03e3\1\u03e4\3\u03e5\1\u03e6\1\u03e7"+
    "\1\0\1\u03e3\1\0\1\u03e3\1\u03e5\1\u03e3\1\0\1\u03e7"+
    "\26\0\1\u03e3\5\0\2\u03e3\11\0\1\u03e3\2\0\2\u03e3"+
    "\7\0\1\u03e3\1\u03e5\2\0\1\u02e1\146\0\3\u03e8\34\0"+
    "\1\u03e9\1\u03ea\4\u03e9\2\0\1\u03e9\1\0\3\u03e9\30\0"+
    "\1\u03e9\5\0\2\u03e9\11\0\1\u03e9\2\0\2\u03e9\7\0"+
    "\2\u03e9\37\0\2\u03eb\106\0\2\u03ec\64\0\2\u03ed\65\0"+
    "\1\u03ee\7\0\1\u03ee\2\0\1\u03ee\66\0\1\u03ef\7\0"+
    "\1\u03ef\135\0\2\u03f0\32\0\1\u03f1\1\u03f2\4\u03f1\2\0"+
    "\1\u03f1\1\0\3\u03f1\30\0\1\u03f1\5\0\2\u03f1\11\0"+
    "\1\u03f1\2\0\2\u03f1\7\0\2\u03f1\50\0\2\u03f3\77\0"+
    "\3\u03f4\75\0\2\u03f5\41\0\1\u03f6\1\u03f7\4\u03f6\2\0"+
    "\1\u03f6\1\0\3\u03f6\30\0\1\u03f6\5\0\2\u03f6\11\0"+
    "\1\u03f6\2\0\2\u03f6\7\0\2\u03f6\1\u03f8\1\u03f9\3\u03fa"+
    "\1\u03fb\2\0\1\u03f8\1\0\1\u03f8\1\u03fa\1\u03f8\20\0"+
    "\2\u03fc\6\0\1\u03f8\5\0\2\u03f8\7\0\2\u03fd\1\u03f8"+
    "\2\0\2\u03f8\7\0\1\u03f8\1\u03fa\50\0\2\u03fe\57\0"+
    "\2\u03ff\67\0\1\57\71\0\1\u0400\1\u0401\4\u0400\2\0"+
    "\1\u0400\1\0\3\u0400\30\0\1\u0400\5\0\2\u0400\11\0"+
    "\1\u0400\2\0\2\u0400\7\0\2\u0400\50\0\2\u0402\77\0"+
    "\3\u0403\42\0\1\u0404\7\0\1\u0404\65\0\1\u0405\1\u0406"+
    "\4\u0405\2\0\1\u0405\1\0\3\u0405\30\0\1\u0405\5\0"+
    "\2\u0405\11\0\1\u0405\2\0\2\u0405\7\0\2\u0405\50\0"+
    "\2\u0407\32\0\1\u0408\1\u0409\4\u0408\2\0\1\u0408\1\0"+
    "\3\u0408\30\0\1\u0408\5\0\2\u0408\11\0\1\u0408\2\0"+
    "\2\u0408\7\0\2\u0408\31\0\2\u040a\51\0\1\u040b\1\u040c"+
    "\3\u040d\1\u040e\2\0\1\u040b\1\0\1\u040b\1\u040d\1\u040b"+
    "\20\0\2\u040f\6\0\1\u040b\5\0\2\u040b\2\u0410\7\0"+
    "\1\u040b\2\0\2\u040b\7\0\1\u040b\1\u040d\10\0\1\u0411"+
    "\7\0\1\u0411\2\0\1\u0411\62\0\1\u02fe\126\0\2\u0412"+
    "\125\0\2\u0413\102\0\2\u0414\71\0\2\u0415\110\0\3\u0416"+
    "\36\0\1\u0305\103\0\1\u0307\107\0\1\u0417\7\0\1\u0417"+
    "\112\0\2\u0418\125\0\2\u0419\32\0\1\u041a\1\u041b\4\u041a"+
    "\2\0\1\u041a\1\0\3\u041a\30\0\1\u041a\5\0\2\u041a"+
    "\11\0\1\u041a\2\0\2\u041a\7\0\2\u041a\2\0\1\u030d"+
    "\101\0\1\u041c\1\u041d\4\u041c\2\0\1\u041c\1\0\3\u041c"+
    "\30\0\1\u041c\5\0\2\u041c\11\0\1\u041c\2\0\2\u041c"+
    "\7\0\2\u041c\25\0\2\u041e\102\0\2\u041f\55\0\1\u0420"+
    "\1\u0421\4\u0420\2\0\1\u0420\1\0\3\u0420\30\0\1\u0420"+
    "\5\0\2\u0420\11\0\1\u0420\2\0\2\u0420\7\0\2\u0420"+
    "\25\0\2\u0422\72\0\1\u0423\4\0\1\u0423\124\0\2\u0424"+
    "\64\0\2\u0425\125\0\2\u0426\57\0\2\u0427\102\0\2\u0428"+
    "\55\0\1\u0429\1\u042a\4\u0429\2\0\1\u0429\1\0\3\u0429"+
    "\30\0\1\u0429\5\0\2\u0429\11\0\1\u0429\2\0\2\u0429"+
    "\7\0\2\u0429\1\u042b\1\u042c\4\u042b\2\0\1\u042b\1\0"+
    "\3\u042b\30\0\1\u042b\5\0\2\u042b\11\0\1\u042b\2\0"+
    "\2\u042b\7\0\2\u042b\25\0\2\u042d\122\0\5\u042e\32\0"+
    "\1\u042f\1\u0430\3\u0431\1\u0432\2\0\1\u042f\1\u0433\1\u042f"+
    "\1\u0431\1\u042f\4\0\1\u0433\23\0\1\u042f\5\0\2\u042f"+
    "\11\0\1\u042f\2\0\2\u042f\7\0\1\u042f\1\u0431\45\0"+
    "\3\u0434\42\0\1\u0435\7\0\1\u0435\65\0\1\u0436\1\u0437"+
    "\4\u0436\2\0\1\u0436\1\0\3\u0436\30\0\1\u0436\5\0"+
    "\2\u0436\11\0\1\u0436\2\0\2\u0436\7\0\2\u0436\25\0"+
    "\2\u0438\63\0\1\u0439\7\0\1\u0439\112\0\2\u043a\57\0"+
    "\1\u0325\126\0\2\u043b\63\0\1\u043c\7\0\1\u043c\65\0"+
    "\1\u043d\1\u043e\4\u043d\2\0\1\u043d\1\0\3\u043d\30\0"+
    "\1\u043d\5\0\2\u043d\11\0\1\u043d\2\0\2\u043d\7\0"+
    "\2\u043d\1\u043f\1\u0440\4\u043f\2\0\1\u043f\1\0\3\u043f"+
    "\30\0\1\u043f\5\0\2\u043f\11\0\1\u043f\2\0\2\u043f"+
    "\7\0\2\u043f\43\0\2\u0441\37\0\1\u0442\1\u0443\4\u0442"+
    "\2\0\1\u0442\1\0\3\u0442\30\0\1\u0442\5\0\2\u0442"+
    "\11\0\1\u0442\2\0\2\u0442\7\0\2\u0442\45\0\3\u0444"+
    "\61\0\2\u0445\102\0\2\u0446\55\0\1\u0447\1\u0448\4\u0447"+
    "\2\0\1\u0447\1\0\3\u0447\30\0\1\u0447\5\0\2\u0447"+
    "\11\0\1\u0447\2\0\2\u0447\7\0\2\u0447\25\0\2\u0449"+
    "\65\0\1\u044a\7\0\1\u044a\2\0\1\u044a\113\0\2\u044b"+
    "\74\0\2\u044c\134\0\2\u044d\60\0\2\u044e\131\0\2\u044f"+
    "\24\0\1\u0450\7\0\1\u0450\144\0\2\u0451\50\0\2\u0452"+
    "\21\0\2\u0453\40\0\1\u0454\7\0\1\u0454\73\0\1\u0455"+
    "\7\0\1\u0455\66\0\4\u033d\1\u0456\5\0\1\u033d\21\0"+
    "\2\u0457\2\u0458\42\0\1\u033d\35\0\2\u0192\54\0\1\u0459"+
    "\7\0\1\u0459\74\0\1\223\7\0\1\223\2\0\1\223"+
    "\111\0\2\242\110\0\2\252\100\0\2\272\124\0\2\336"+
    "\31\0\1\u045a\7\0\1\u045a\142\0\2\u045b\2\u045c\60\0"+
    "\2\u045d\55\0\1\u0104\7\0\1\u0104\2\0\1\u0104\111\0"+
    "\2\u0112\130\0\2\u045e\40\0\1\u011e\4\0\1\u011e\110\0"+
    "\2\u0124\120\0\3\u0130\34\0\1\u045f\1\u0460\4\u045f\2\0"+
    "\1\u045f\1\0\3\u045f\30\0\1\u045f\5\0\2\u045f\11\0"+
    "\1\u045f\2\0\2\u045f\7\0\2\u045f\2\0\1\u034f\101\0"+
    "\1\u0461\1\u0462\4\u0461\2\0\1\u0461\1\0\3\u0461\30\0"+
    "\1\u0461\5\0\2\u0461\11\0\1\u0461\2\0\2\u0461\7\0"+
    "\2\u0461\1\u0463\1\u0464\4\u0463\2\0\1\u0463\1\0\3\u0463"+
    "\30\0\1\u0463\5\0\2\u0463\11\0\1\u0463\2\0\2\u0463"+
    "\7\0\2\u0463\25\0\2\u0465\55\0\1\u0466\1\u0467\4\u0466"+
    "\2\0\1\u0466\1\0\3\u0466\30\0\1\u0466\5\0\2\u0466"+
    "\11\0\1\u0466\2\0\2\u0466\7\0\2\u0466\25\0\2\u0468"+
    "\55\0\1\u0469\1\u046a\4\u0469\2\0\1\u0469\1\0\3\u0469"+
    "\30\0\1\u0469\5\0\2\u0469\11\0\1\u0469\2\0\2\u0469"+
    "\7\0\2\u0469\45\0\3\u046b\113\0\2\u046c\23\0\1\u046d"+
    "\1\u046e\4\u046d\2\0\1\u046d\1\0\3\u046d\30\0\1\u046d"+
    "\5\0\2\u046d\11\0\1\u046d\2\0\2\u046d\7\0\2\u046d"+
    "\7\0\1\u046f\7\0\1\u046f\143\0\2\u0470\50\0\2\u0471"+
    "\125\0\2\u0472\43\0\1\u0473\7\0\1\u0473\107\0\2\u0474"+
    "\64\0\1\u0475\7\0\1\u0475\111\0\2\u0476\55\0\1\u0477"+
    "\1\u0478\3\u0479\1\u047a\2\0\1\u0477\1\0\1\u0477\1\u0479"+
    "\1\u0477\14\0\2\u047b\12\0\1\u0477\5\0\2\u0477\11\0"+
    "\1\u0477\2\0\2\u0477\7\0\1\u0477\1\u0479\25\0\2\u047c"+
    "\106\0\2\u047d\116\0\3\u047e\61\0\2\u047f\102\0\2\u0480"+
    "\102\0\2\u0481\122\0\3\u0482\61\0\2\u0483\122\0\3\u0484"+
    "\101\0\3\u0485\61\0\2\u0486\102\0\2\u0487\112\0\2\u0488"+
    "\45\0\1\u0489\1\u048a\4\u0489\2\0\1\u0489\1\0\3\u0489"+
    "\30\0\1\u0489\5\0\2\u0489\11\0\1\u0489\2\0\2\u0489"+
    "\7\0\2\u0489\2\0\1\u0371\103\0\1\u0373\107\0\1\u048b"+
    "\7\0\1\u048b\112\0\2\46\12\0\2\47\5\0\2\u048c"+
    "\57\0\2\u048d\2\0\2\52\2\0\2\u048e\6\0\3\u048f"+
    "\2\u0490\57\0\2\u0491\16\0\3\u0492\2\66\57\0\2\u0493"+
    "\2\0\2\73\2\0\2\74\6\0\3\u0494\2\u0495\57\0"+
    "\2\u0493\6\0\2\74\6\0\3\u0494\2\u0496\43\0\1\u01f0"+
    "\7\0\1\u01f0\3\0\2\u0491\16\0\3\u0492\2\66\40\0"+
    "\1\u0497\1\0\1\104\5\0\1\u0497\1\0\1\104\2\0"+
    "\1\104\3\0\2\106\2\u0498\2\110\13\0\2\112\5\0"+
    "\2\u0499\31\0\1\u0497\1\0\1\104\5\0\1\u0497\1\0"+
    "\1\104\2\0\1\104\3\0\2\106\2\u0498\2\110\13\0"+
    "\2\112\5\0\2\u0499\2\114\52\0\2\u049a\2\0\2\u049b"+
    "\11\0\2\117\57\0\2\120\6\0\2\u049c\6\0\3\123"+
    "\2\u049d\57\0\2\u049e\6\0\2\u049f\6\0\3\127\42\0"+
    "\1\131\7\0\1\131\112\0\2\u04a0\2\0\2\u04a1\2\0"+
    "\2\136\2\0\2\137\5\0\2\u04a2\21\0\2\142\40\0"+
    "\2\144\31\0\2\147\43\0\2\150\2\0\2\u04a3\2\0"+
    "\2\152\11\0\2\u04a4\57\0\2\150\2\0\2\u04a5\2\0"+
    "\2\152\11\0\2\u04a4\42\0\1\u04a6\7\0\1\u04a6\2\0"+
    "\1\u04a6\3\0\2\157\24\0\2\162\54\0\2\163\2\164"+
    "\24\0\2\u04a7\50\0\2\u04a8\6\0\2\167\6\0\3\170"+
    "\2\u04a9\57\0\2\u04aa\6\0\2\167\6\0\3\170\2\u04a9"+
    "\32\0\1\173\1\174\4\173\2\0\1\173\1\0\3\173"+
    "\10\0\2\u04ab\6\0\2\u04ac\2\0\2\u04ad\2\0\1\u04ae"+
    "\2\u04af\2\0\3\173\11\0\1\173\2\0\2\173\7\0"+
    "\3\173\1\174\4\173\2\0\1\173\1\0\3\173\10\0"+
    "\2\u04b0\6\0\2\u04b1\2\0\2\u04ad\2\0\1\u04ae\2\u04af"+
    "\2\u04b2\3\173\11\0\1\173\2\0\2\173\7\0\2\173"+
    "\57\0\2\u04b3\54\0\2\u04b4\2\0\2\u04b5\6\0\3\u04b6"+
    "\2\212\63\0\2\u04b4\2\0\2\u04b7\6\0\3\u04b6\2\212"+
    "\57\0\2\u04b8\55\0\1\u04b9\1\u04ba\4\u04b9\2\0\1\u04b9"+
    "\1\0\3\u04b9\30\0\1\u04b9\5\0\2\u04b9\11\0\1\u04b9"+
    "\2\0\2\u04b9\7\0\2\u04b9\45\0\3\u04bb\34\0\1\u04bc"+
    "\1\u04bd\4\u04bc\2\0\1\u04bc\1\0\3\u04bc\30\0\1\u04bc"+
    "\5\0\2\u04bc\11\0\1\u04bc\2\0\2\u04bc\7\0\2\u04bc"+
    "\25\0\2\u04be\55\0\1\u04bf\1\u04c0\4\u04bf\2\0\1\u04bf"+
    "\1\0\3\u04bf\30\0\1\u04bf\5\0\2\u04bf\11\0\1\u04bf"+
    "\2\0\2\u04bf\7\0\2\u04bf\2\0\1\u0395\151\0\2\u04c1"+
    "\40\0\1\u04c2\7\0\1\u04c2\65\0\1\u04c3\1\u04c4\4\u04c3"+
    "\2\0\1\u04c3\1\0\3\u04c3\30\0\1\u04c3\5\0\2\u04c3"+
    "\11\0\1\u04c3\2\0\2\u04c3\7\0\2\u04c3\50\0\2\u04c5"+
    "\67\0\2\u04c6\47\0\1\u039c\101\0\1\u04c7\1\u04c8\4\u04c7"+
    "\2\0\1\u04c7\1\0\3\u04c7\30\0\1\u04c7\5\0\2\u04c7"+
    "\11\0\1\u04c7\2\0\2\u04c7\7\0\2\u04c7\1\0\4\u039f"+
    "\1\u04c9\3\0\1\u04ca\1\0\1\u039f\5\0\1\u04ca\61\0"+
    "\1\u039f\25\0\2\u04cb\102\0\2\u04cc\55\0\1\u04cd\1\u04ce"+
    "\4\u04cd\2\0\1\u04cd\1\0\3\u04cd\30\0\1\u04cd\5\0"+
    "\2\u04cd\11\0\1\u04cd\2\0\2\u04cd\7\0\2\u04cd\45\0"+
    "\3\u04cf\61\0\2\u04d0\102\0\2\u04d1\102\0\2\u04d2\102\0"+
    "\2\u04d3\55\0\1\u04d4\1\u04d5\4\u04d4\2\0\1\u04d4\1\0"+
    "\3\u04d4\30\0\1\u04d4\5\0\2\u04d4\11\0\1\u04d4\2\0"+
    "\2\u04d4\7\0\2\u04d4\25\0\2\u04d6\120\0\2\u04d7\45\0"+
    "\1\u04d8\7\0\1\u04d8\67\0\1\u03ac\101\0\1\u04d9\1\u04da"+
    "\4\u04d9\2\0\1\u04d9\1\0\3\u04d9\30\0\1\u04d9\5\0"+
    "\2\u04d9\11\0\1\u04d9\2\0\2\u04d9\7\0\2\u04d9\25\0"+
    "\2\u04db\55\0\1\u04dc\1\u04dd\4\u04dc\2\0\1\u04dc\1\0"+
    "\3\u04dc\30\0\1\u04dc\5\0\2\u04dc\11\0\1\u04dc\2\0"+
    "\2\u04dc\7\0\2\u04dc\6\0\1\u04de\7\0\1\u04de\65\0"+
    "\1\u04df\1\u04e0\4\u04df\2\0\1\u04df\1\0\3\u04df\30\0"+
    "\1\u04df\5\0\2\u04df\11\0\1\u04df\2\0\2\u04df\7\0"+
    "\2\u04df\2\0\1\u03b3\126\0\2\u04e1\55\0\1\u04e2\1\u04e3"+
    "\4\u04e2\2\0\1\u04e2\1\0\3\u04e2\30\0\1\u04e2\5\0"+
    "\2\u04e2\11\0\1\u04e2\2\0\2\u04e2\7\0\2\u04e2\1\u04e4"+
    "\1\u04e5\4\u04e4\2\0\1\u04e4\1\0\3\u04e4\30\0\1\u04e4"+
    "\5\0\2\u04e4\11\0\1\u04e4\2\0\2\u04e4\7\0\2\u04e4"+
    "\2\0\1\u03b8\101\0\1\u04e6\1\u04e7\4\u04e6\2\0\1\u04e6"+
    "\1\0\3\u04e6\30\0\1\u04e6\5\0\2\u04e6\11\0\1\u04e6"+
    "\2\0\2\u04e6\7\0\2\u04e6\35\0\2\u04e8\45\0\1\u04e9"+
    "\1\u04ea\4\u04e9\2\0\1\u04e9\1\0\3\u04e9\30\0\1\u04e9"+
    "\5\0\2\u04e9\11\0\1\u04e9\2\0\2\u04e9\7\0\2\u04e9"+
    "\45\0\3\u04eb\34\0\1\u04ec\1\u04ed\4\u04ec\2\0\1\u04ec"+
    "\1\0\3\u04ec\30\0\1\u04ec\5\0\2\u04ec\11\0\1\u04ec"+
    "\2\0\2\u04ec\7\0\2\u04ec\2\0\1\u03bf\144\0\2\u04ee"+
    "\41\0\1\u03c2\101\0\1\u04ef\1\u04f0\4\u04ef\2\0\1\u04ef"+
    "\1\0\3\u04ef\30\0\1\u04ef\5\0\2\u04ef\11\0\1\u04ef"+
    "\2\0\2\u04ef\7\0\2\u04ef\2\0\1\u03c5\146\0\3\u04f1"+
    "\43\0\1\u04f2\7\0\1\u04f2\66\0\1\u03c9\126\0\2\u04f3"+
    "\125\0\2\u04f4\67\0\2\u04f5\112\0\3\u04f6\120\0\2\u04f7"+
    "\27\0\1\u04f8\7\0\1\u04f8\64\0\1\u03d1\132\0\2\u04f9"+
    "\76\0\2\u04fa\55\0\1\u04fb\1\u04fc\3\u04fd\1\u04fe\2\0"+
    "\1\u04fb\1\0\1\u04fb\1\u04fd\1\u04fb\16\0\2\u04ff\10\0"+
    "\1\u04fb\5\0\2\u04fb\11\0\1\u04fb\2\0\2\u04fb\7\0"+
    "\1\u04fb\1\u04fd\50\0\2\u0500\57\0\2\u0501\65\0\1\u0502"+
    "\7\0\1\u0502\2\0\1\u0502\70\0\1\u026c\7\0\1\u026c"+
    "\2\0\1\u026c\75\0\1\u0503\4\0\1\u0503\145\0\2\u0504"+
    "\53\0\2\u0505\45\0\1\u0506\1\u0507\4\u0506\2\0\1\u0506"+
    "\1\0\3\u0506\30\0\1\u0506\5\0\2\u0506\11\0\1\u0506"+
    "\2\0\2\u0506\7\0\2\u0506\2\0\1\u03de\103\0\1\u03e0"+
    "\104\0\2\u03e2\1\0\2\u03e2\1\0\1\u03e2\2\0\1\u0508"+
    "\5\0\2\u03e2\2\0\1\u03e2\1\0\1\u03e2\1\0\1\u03e2"+
    "\1\0\1\u03e2\1\0\1\u03e2\1\0\1\u03e2\1\0\1\u03e2"+
    "\1\0\1\u03e2\2\0\1\u03e2\1\0\2\u03e2\3\0\1\u03e2"+
    "\1\0\1\u03e2\1\0\2\u03e2\1\0\1\u03e2\2\0\1\u03e2"+
    "\3\0\1\u03e2\1\0\1\u03e2\2\0\1\u03e2\3\0\1\u0509"+
    "\1\u03e5\2\u0509\1\u050a\1\u03e7\4\0\1\u0509\2\0\1\u03e7"+
    "\64\0\1\u0509\1\0\4\u0509\1\u050a\1\u03e7\4\0\1\u0509"+
    "\2\0\1\u03e7\64\0\1\u0509\6\0\1\u050b\7\0\1\u050b"+
    "\135\0\2\u050c\57\0\2\u050d\57\0\1\u03e9\126\0\2\u050e"+
    "\102\0\2\u050f\55\0\1\u0510\1\u0511\4\u0510\2\0\1\u0510"+
    "\1\0\3\u0510\30\0\1\u0510\5\0\2\u0510\11\0\1\u0510"+
    "\2\0\2\u0510\7\0\2\u0510\45\0\3\u0512\77\0\2\u0513"+
    "\37\0\1\u0514\1\u0515\4\u0514\2\0\1\u0514\1\0\3\u0514"+
    "\30\0\1\u0514\5\0\2\u0514\11\0\1\u0514\2\0\2\u0514"+
    "\7\0\2\u0514\2\0\1\u03f1\101\0\1\u0516\1\u0517\4\u0516"+
    "\2\0\1\u0516\1\0\3\u0516\30\0\1\u0516\5\0\2\u0516"+
    "\11\0\1\u0516\2\0\2\u0516\7\0\2\u0516\25\0\2\u0518"+
    "\65\0\1\u0519\7\0\1\u0519\2\0\1\u0519\62\0\1\u03f6"+
    "\102\0\1\u051a\1\u03fa\2\u051a\1\u051b\5\0\1\u051a\21\0"+
    "\2\u03fc\25\0\2\u03fd\15\0\1\u051a\1\0\4\u051a\1\u051b"+
    "\5\0\1\u051a\21\0\2\u03fc\25\0\2\u03fd\15\0\1\u051a"+
    "\6\0\1\u051c\7\0\1\u051c\66\0\4\u03fd\1\u051d\5\0"+
    "\1\u03fd\15\0\2\u051e\2\0\2\u051f\25\0\2\u03fd\15\0"+
    "\1\u03fd\1\0\4\u03fd\1\u051d\5\0\1\u03fd\21\0\2\u051f"+
    "\44\0\1\u03fd\1\u0520\1\u0521\4\u0520\2\0\1\u0520\1\0"+
    "\3\u0520\30\0\1\u0520\5\0\2\u0520\11\0\1\u0520\2\0"+
    "\2\u0520\7\0\2\u0520\1\u0522\1\u0523\4\u0522\2\0\1\u0522"+
    "\1\0\3\u0522\30\0\1\u0522\5\0\2\u0522\11\0\1\u0522"+
    "\2\0\2\u0522\7\0\2\u0522\2\0\1\u0400\101\0\1\u0524"+
    "\1\u0525\4\u0524\2\0\1\u0524\1\0\3\u0524\30\0\1\u0524"+
    "\5\0\2\u0524\11\0\1\u0524\2\0\2\u0524\7\0\2\u0524"+
    "\1\u0526\1\u0527\4\u0526\2\0\1\u0526\1\0\3\u0526\30\0"+
    "\1\u0526\5\0\2\u0526\11\0\1\u0526\2\0\2\u0526\7\0"+
    "\2\u0526\25\0\2\u0528\57\0\1\u0405\101\0\1\u0529\1\u052a"+
    "\4\u0529\2\0\1\u0529\1\0\3\u0529\30\0\1\u0529\5\0"+
    "\2\u0529\11\0\1\u0529\2\0\2\u0529\7\0\2\u0529\2\0"+
    "\1\u0408\126\0\2\u052b\56\0\1\u052c\1\u040d\2\u052c\1\u052d"+
    "\5\0\1\u052c\21\0\2\u040f\16\0\2\u0410\24\0\1\u052c"+
    "\1\0\4\u052c\1\u052d\5\0\1\u052c\21\0\2\u040f\16\0"+
    "\2\u0410\24\0\1\u052c\6\0\1\u052e\7\0\1\u052e\66\0"+
    "\4\u040f\1\u052f\5\0\1\u040f\41\0\2\u0410\24\0\1\u040f"+
    "\50\0\2\u0530\57\0\2\u0531\55\0\1\u0532\1\u0533\4\u0532"+
    "\2\0\1\u0532\1\0\3\u0532\30\0\1\u0532\5\0\2\u0532"+
    "\11\0\1\u0532\2\0\2\u0532\7\0\2\u0532\1\u0534\1\u0535"+
    "\4\u0534\2\0\1\u0534\1\0\3\u0534\30\0\1\u0534\5\0"+
    "\2\u0534\11\0\1\u0534\2\0\2\u0534\7\0\2\u0534\1\u0536"+
    "\1\u0537\4\u0536\2\0\1\u0536\1\0\3\u0536\30\0\1\u0536"+
    "\5\0\2\u0536\11\0\1\u0536\2\0\2\u0536\7\0\2\u0536"+
    "\73\0\2\u0538\34\0\2\u0539\64\0\1\u053a\7\0\1\u053a"+
    "\74\0\1\u053b\7\0\1\u053b\2\0\1\u053b\60\0\1\u053c"+
    "\1\u053d\4\u053c\2\0\1\u053c\1\0\3\u053c\30\0\1\u053c"+
    "\5\0\2\u053c\11\0\1\u053c\2\0\2\u053c\7\0\2\u053c"+
    "\2\0\1\u041a\103\0\1\u041c\101\0\1\u053e\1\u053f\4\u053e"+
    "\2\0\1\u053e\1\0\3\u053e\30\0\1\u053e\5\0\2\u053e"+
    "\11\0\1\u053e\2\0\2\u053e\7\0\2\u053e\1\u0540\1\u0541"+
    "\4\u0540\2\0\1\u0540\1\0\3\u0540\30\0\1\u0540\5\0"+
    "\2\u0540\11\0\1\u0540\2\0\2\u0540\7\0\2\u0540\2\0"+
    "\1\u0420\101\0\1\u0542\1\u0543\4\u0542\2\0\1\u0542\1\0"+
    "\3\u0542\30\0\1\u0542\5\0\2\u0542\11\0\1\u0542\2\0"+
    "\2\u0542\7\0\2\u0542\25\0\2\u0544\112\0\2\u0545\124\0"+
    "\2\u0546\31\0\1\u0547\7\0\1\u0547\65\0\1\u0548\1\u0549"+
    "\4\u0548\2\0\1\u0548\1\0\3\u0548\30\0\1\u0548\5\0"+
    "\2\u0548\11\0\1\u0548\2\0\2\u0548\7\0\2\u0548\1\u054a"+
    "\1\u054b\4\u054a\2\0\1\u054a\1\0\3\u054a\30\0\1\u054a"+
    "\5\0\2\u054a\11\0\1\u054a\2\0\2\u054a\7\0\2\u054a"+
    "\2\0\1\u0429\103\0\1\u042b\101\0\1\u054c\1\u054d\4\u054c"+
    "\2\0\1\u054c\1\0\3\u054c\30\0\1\u054c\5\0\2\u054c"+
    "\11\0\1\u054c\2\0\2\u054c\7\0\2\u054c\1\u054e\1\u054f"+
    "\4\u054e\2\0\1\u054e\1\0\3\u054e\30\0\1\u054e\5\0"+
    "\2\u054e\11\0\1\u054e\2\0\2\u054e\7\0\2\u054e\1\0"+
    "\1\u0550\1\u0431\2\u0550\1\u0551\3\0\1\u0433\1\0\1\u0550"+
    "\5\0\1\u0433\61\0\1\u0550\1\0\4\u0550\1\u0551\3\0"+
    "\1\u0433\1\0\1\u0550\5\0\1\u0433\61\0\1\u0550\6\0"+
    "\1\u0552\7\0\1\u0552\132\0\3\u0553\63\0\1\u0554\47\0"+
    "\1\u0554\47\0\2\u0555\41\0\1\u0436\101\0\1\u0556\1\u0557"+
    "\4\u0556\2\0\1\u0556\1\0\3\u0556\30\0\1\u0556\5\0"+
    "\2\u0556\11\0\1\u0556\2\0\2\u0556\7\0\2\u0556\50\0"+
    "\2\u0558\32\0\1\u0559\1\u055a\4\u0559\2\0\1\u0559\1\0"+
    "\3\u0559\30\0\1\u0559\5\0\2\u0559\11\0\1\u0559\2\0"+
    "\2\u0559\7\0\2\u0559\1\u055b\1\u055c\4\u055b\2\0\1\u055b"+
    "\1\0\3\u055b\30\0\1\u055b\5\0\2\u055b\11\0\1\u055b"+
    "\2\0\2\u055b\7\0\2\u055b\64\0\2\u055d\20\0\1\u043d"+
    "\103\0\1\u043f\151\0\2\u055e\34\0\1\u0442\126\0\2\u055f"+
    "\55\0\1\u0560\1\u0561\4\u0560\2\0\1\u0560\1\0\3\u0560"+
    "\30\0\1\u0560\5\0\2\u0560\11\0\1\u0560\2\0\2\u0560"+
    "\7\0\2\u0560\1\u0562\1\u0563\4\u0562\2\0\1\u0562\1\0"+
    "\3\u0562\30\0\1\u0562\5\0\2\u0562\11\0\1\u0562\2\0"+
    "\2\u0562\7\0\2\u0562\2\0\1\u0447\101\0\1\u0564\1\u0565"+
    "\4\u0564\2\0\1\u0564\1\0\3\u0564\30\0\1\u0564\5\0"+
    "\2\u0564\11\0\1\u0564\2\0\2\u0564\7\0\2\u0564\11\0"+
    "\1\u0566\7\0\1\u0566\107\0\2\u0567\55\0\1\u0568\1\u0569"+
    "\4\u0568\2\0\1\u0568\1\0\3\u0568\30\0\1\u0568\5\0"+
    "\2\u0568\11\0\1\u0568\2\0\2\u0568\7\0\2\u0568\45\0"+
    "\3\u056a\120\0\2\u056b\43\0\2\u02bf\21\0\2\u056c\41\0"+
    "\1\u056d\7\0\1\u056d\134\0\2\u056e\71\0\2\u0113\122\0"+
    "\2\u056f\32\0\1\u0570\7\0\1\u0570\131\0\3\u0571\42\0"+
    "\1\u0572\7\0\1\u0572\142\0\2\u0573\52\0\2\u0574\65\0"+
    "\1\u0575\7\0\1\u0575\2\0\1\u0575\115\0\2\u0576\56\0"+
    "\1\u0577\7\0\1\u0577\107\0\2\u01ad\63\0\1\u0578\7\0"+
    "\1\u0578\132\0\3\u01df\36\0\1\u045f\103\0\1\u0461\103\0"+
    "\1\u0463\101\0\1\u0579\1\u057a\4\u0579\2\0\1\u0579\1\0"+
    "\3\u0579\30\0\1\u0579\5\0\2\u0579\11\0\1\u0579\2\0"+
    "\2\u0579\7\0\2\u0579\2\0\1\u0466\101\0\1\u057b\1\u057c"+
    "\4\u057b\2\0\1\u057b\1\0\3\u057b\30\0\1\u057b\5\0"+
    "\2\u057b\11\0\1\u057b\2\0\2\u057b\7\0\2\u057b\2\0"+
    "\1\u0469\126\0\2\u057d\122\0\3\u057e\36\0\1\u046d\111\0"+
    "\1\u057f\7\0\1\u057f\2\0\1\u057f\115\0\2\u0580\45\0"+
    "\1\u0581\1\u0582\4\u0581\2\0\1\u0581\1\0\3\u0581\30\0"+
    "\1\u0581\5\0\2\u0581\11\0\1\u0581\2\0\2\u0581\7\0"+
    "\2\u0581\1\u0583\1\u0584\4\u0583\2\0\1\u0583\1\0\3\u0583"+
    "\30\0\1\u0583\5\0\2\u0583\11\0\1\u0583\2\0\2\u0583"+
    "\7\0\2\u0583\12\0\1\130\71\0\1\u0585\1\u0586\4\u0585"+
    "\2\0\1\u0585\1\0\3\u0585\30\0\1\u0585\5\0\2\u0585"+
    "\11\0\1\u0585\2\0\2\u0585\7\0\2\u0585\10\0\1\u0587"+
    "\7\0\1\u0587\2\0\1\u0587\60\0\1\u0588\1\u0589\4\u0588"+
    "\2\0\1\u0588\1\0\3\u0588\30\0\1\u0588\5\0\2\u0588"+
    "\11\0\1\u0588\2\0\2\u0588\7\0\2\u0588\1\0\1\u058a"+
    "\1\u0479\2\u058a\1\u058b\5\0\1\u058a\15\0\2\u047b\50\0"+
    "\1\u058a\1\0\4\u058a\1\u058b\5\0\1\u058a\15\0\2\u047b"+
    "\50\0\1\u058a\6\0\1\u058c\7\0\1\u058c\135\0\2\u058d"+
    "\32\0\1\u058e\1\u058f\4\u058e\2\0\1\u058e\1\0\3\u058e"+
    "\30\0\1\u058e\5\0\2\u058e\11\0\1\u058e\2\0\2\u058e"+
    "\7\0\2\u058e\45\0\3\u0590\61\0\2\u0591\55\0\1\u0592"+
    "\1\u0593\4\u0592\2\0\1\u0592\1\0\3\u0592\30\0\1\u0592"+
    "\5\0\2\u0592\11\0\1\u0592\2\0\2\u0592\7\0\2\u0592"+
    "\31\0\2\u0594\51\0\1\u0595\1\u0596\4\u0595\2\0\1\u0595"+
    "\1\0\3\u0595\30\0\1\u0595\5\0\2\u0595\11\0\1\u0595"+
    "\2\0\2\u0595\7\0\2\u0595\25\0\2\u0597\65\0\1\u0598"+
    "\7\0\1\u0598\2\0\1\u0598\105\0\2\u0599\65\0\1\u059a"+
    "\7\0\1\u059a\2\0\1\u059a\60\0\1\u059b\1\u059c\4\u059b"+
    "\2\0\1\u059b\1\0\3\u059b\30\0\1\u059b\5\0\2\u059b"+
    "\11\0\1\u059b\2\0\2\u059b\7\0\2\u059b\1\u059d\1\u059e"+
    "\4\u059d\2\0\1\u059d\1\0\3\u059d\30\0\1\u059d\5\0"+
    "\2\u059d\11\0\1\u059d\2\0\2\u059d\7\0\2\u059d\1\u059f"+
    "\1\u05a0\4\u059f\2\0\1\u059f\1\0\3\u059f\30\0\1\u059f"+
    "\5\0\2\u059f\11\0\1\u059f\2\0\2\u059f\7\0\2\u059f"+
    "\2\0\1\u0489\110\0\1\u05a1\7\0\1\u05a1\117\0\2\222"+
    "\100\0\2\224\57\0\1\227\7\0\1\227\12\0\2\230"+
    "\24\0\2\u05a2\60\0\2\u05a3\124\0\2\235\31\0\1\u05a4"+
    "\1\0\1\241\5\0\1\u05a4\1\0\1\241\2\0\1\241"+
    "\7\0\2\243\22\0\2\244\54\0\2\250\2\0\2\251"+
    "\76\0\2\257\2\260\22\0\2\262\3\0\2\263\26\0"+
    "\1\270\7\0\1\270\2\0\1\270\1\0\2\271\106\0"+
    "\2\u05a5\10\0\2\274\70\0\2\u05a5\110\0\2\277\100\0"+
    "\2\306\102\0\2\314\115\0\2\317\40\0\1\320\7\0"+
    "\1\320\114\0\2\u05a6\106\0\2\333\20\0\2\u05a7\56\0"+
    "\2\335\57\0\1\u05a8\7\0\1\u05a8\12\0\2\340\61\0"+
    "\1\352\7\0\1\352\2\0\1\352\3\0\2\353\2\354"+
    "\10\0\2\355\10\0\2\u05a9\2\u05aa\60\0\2\360\11\0"+
    "\2\u05ab\42\0\1\366\7\0\1\366\2\0\1\366\31\0"+
    "\2\u05ac\62\0\2\u05ad\6\0\3\u0100\65\0\2\u0105\76\0"+
    "\2\u0106\6\0\2\u05ad\6\0\3\u0100\71\0\2\u0107\54\0"+
    "\1\u010f\7\0\1\u010f\72\0\1\u0111\7\0\1\u0111\24\0"+
    "\2\u0114\45\0\1\u05ae\7\0\1\u05ae\45\0\2\u011a\24\0"+
    "\1\u0111\1\0\1\u011b\5\0\1\u0111\1\0\1\u011b\2\0"+
    "\1\u011b\13\0\2\u05af\2\0\2\u0114\102\0\2\u011f\76\0"+
    "\2\u0120\102\0\2\u0123\71\0\1\u011d\4\0\2\u0125\102\0"+
    "\2\u0125\50\0\4\u0129\1\u012a\5\0\1\u0129\7\0\1\u012b"+
    "\17\0\2\u011f\36\0\1\u0129\37\0\2\u012c\127\0\2\u012d"+
    "\104\0\3\u05b0\63\0\2\u0131\63\0\2\u0132\102\0\2\u0135"+
    "\102\0\2\u0138\51\0\1\u05b1\1\u05b2\4\u05b1\2\0\1\u05b1"+
    "\1\0\3\u05b1\30\0\1\u05b1\5\0\2\u05b1\11\0\1\u05b1"+
    "\2\0\2\u05b1\7\0\2\u05b1\2\0\1\u04b9\126\0\2\u05b3"+
    "\57\0\1\u04bc\101\0\1\u05b4\1\u05b5\4\u05b4\2\0\1\u05b4"+
    "\1\0\3\u05b4\30\0\1\u05b4\5\0\2\u05b4\11\0\1\u05b4"+
    "\2\0\2\u05b4\7\0\2\u05b4\2\0\1\u04bf\101\0\1\u05b6"+
    "\1\u05b7\4\u05b6\2\0\1\u05b6\1\0\3\u05b6\30\0\1\u05b6"+
    "\5\0\2\u05b6\11\0\1\u05b6\2\0\2\u05b6\7\0\2\u05b6"+
    "\50\0\2\u05b8\34\0\1\u04c3\101\0\1\u05b9\1\u05ba\4\u05b9"+
    "\2\0\1\u05b9\1\0\3\u05b9\30\0\1\u05b9\5\0\2\u05b9"+
    "\11\0\1\u05b9\2\0\2\u05b9\7\0\2\u05b9\1\u05bb\1\u05bc"+
    "\4\u05bb\2\0\1\u05bb\1\0\3\u05bb\30\0\1\u05bb\5\0"+
    "\2\u05bb\11\0\1\u05bb\2\0\2\u05bb\7\0\2\u05bb\2\0"+
    "\1\u04c7\107\0\1\u05bd\7\0\1\u05bd\112\0\2\u05be\55\0"+
    "\1\u05bf\1\u05c0\4\u05bf\2\0\1\u05bf\1\0\3\u05bf\30\0"+
    "\1\u05bf\5\0\2\u05bf\11\0\1\u05bf\2\0\2\u05bf\7\0"+
    "\2\u05bf\1\u05c1\1\u05c2\4\u05c1\2\0\1\u05c1\1\0\3\u05c1"+
    "\30\0\1\u05c1\5\0\2\u05c1\11\0\1\u05c1\2\0\2\u05c1"+
    "\7\0\2\u05c1\2\0\1\u04cd\101\0\1\u05c3\1\u05c4\4\u05c3"+
    "\2\0\1\u05c3\1\0\3\u05c3\30\0\1\u05c3\5\0\2\u05c3"+
    "\11\0\1\u05c3\2\0\2\u05c3\7\0\2\u05c3\1\u05c5\1\u05c6"+
    "\4\u05c5\2\0\1\u05c5\1\0\3\u05c5\30\0\1\u05c5\5\0"+
    "\2\u05c5\11\0\1\u05c5\2\0\2\u05c5\7\0\2\u05c5\1\u05c7"+
    "\1\u05c8\4\u05c7\2\0\1\u05c7\1\0\3\u05c7\30\0\1\u05c7"+
    "\5\0\2\u05c7\11\0\1\u05c7\2\0\2\u05c7\7\0\2\u05c7"+
    "\10\0\1\u05c9\7\0\1\u05c9\2\0\1\u05c9\60\0\1\u05ca"+
    "\1\u05cb\4\u05ca\2\0\1\u05ca\1\0\3\u05ca\30\0\1\u05ca"+
    "\5\0\2\u05ca\11\0\1\u05ca\2\0\2\u05ca\7\0\2\u05ca"+
    "\2\0\1\u04d4\101\0\1\u05cc\1\u05cd\4\u05cc\2\0\1\u05cc"+
    "\1\0\3\u05cc\30\0\1\u05cc\5\0\2\u05cc\11\0\1\u05cc"+
    "\2\0\2\u05cc\7\0\2\u05cc\31\0\2\u05ce\121\0\2\u05cf"+
    "\34\0\1\u04d9\101\0\1\u05d0\1\u05d1\4\u05d0\2\0\1\u05d0"+
    "\1\0\3\u05d0\30\0\1\u05d0\5\0\2\u05d0\11\0\1\u05d0"+
    "\2\0\2\u05d0\7\0\2\u05d0\2\0\1\u04dc\146\0\3\u05d2"+
    "\36\0\1\u04df\101\0\1\u05d3\1\u05d4\4\u05d3\2\0\1\u05d3"+
    "\1\0\3\u05d3\30\0\1\u05d3\5\0\2\u05d3\11\0\1\u05d3"+
    "\2\0\2\u05d3\7\0\2\u05d3\2\0\1\u04e2\103\0\1\u04e4"+
    "\103\0\1\u04e6\130\0\2\u05d5\55\0\1\u04e9\126\0\2\u05d6"+
    "\57\0\1\u04ec\126\0\2\u05d7\57\0\1\u04ef\126\0\2\u05d8"+
    "\116\0\2\u05d9\41\0\1\u05da\1\u05db\4\u05da\2\0\1\u05da"+
    "\1\0\3\u05da\30\0\1\u05da\5\0\2\u05da\11\0\1\u05da"+
    "\2\0\2\u05da\7\0\2\u05da\1\u05dc\1\u05dd\4\u05dc\2\0"+
    "\1\u05dc\1\0\3\u05dc\30\0\1\u05dc\5\0\2\u05dc\11\0"+
    "\1\u05dc\2\0\2\u05dc\7\0\2\u05dc\6\0\1\u05de\7\0"+
    "\1\u05de\112\0\2\u05df\122\0\3\u05e0\46\0\1\u0129\130\0"+
    "\2\u05e1\43\0\1\u05e2\1\u05e3\4\u05e2\2\0\1\u05e2\1\0"+
    "\3\u05e2\30\0\1\u05e2\5\0\2\u05e2\11\0\1\u05e2\2\0"+
    "\2\u05e2\7\0\2\u05e2\1\0\1\u05e4\1\u04fd\2\u05e4\1\u05e5"+
    "\5\0\1\u05e4\17\0\2\u04ff\46\0\1\u05e4\1\0\4\u05e4"+
    "\1\u05e5\5\0\1\u05e4\17\0\2\u04ff\46\0\1\u05e4\6\0"+
    "\1\u05e6\7\0\1\u05e6\122\0\2\u05e7\53\0\1\u05e8\7\0"+
    "\1\u05e8\65\0\1\u05e9\1\u05ea\4\u05e9\2\0\1\u05e9\1\0"+
    "\3\u05e9\30\0\1\u05e9\5\0\2\u05e9\11\0\1\u05e9\2\0"+
    "\2\u05e9\7\0\2\u05e9\11\0\1\u05eb\7\0\1\u05eb\127\0"+
    "\3\u05ec\101\0\3\u05ed\34\0\1\u05ee\1\u05ef\4\u05ee\2\0"+
    "\1\u05ee\1\0\3\u05ee\30\0\1\u05ee\5\0\2\u05ee\11\0"+
    "\1\u05ee\2\0\2\u05ee\7\0\2\u05ee\2\0\1\u0506\153\0"+
    "\1\u05f0\40\0\1\u05f1\7\0\1\u05f1\115\0\2\u05f2\51\0"+
    "\1\u05f3\1\u05f4\4\u05f3\2\0\1\u05f3\1\0\3\u05f3\30\0"+
    "\1\u05f3\5\0\2\u05f3\11\0\1\u05f3\2\0\2\u05f3\7\0"+
    "\2\u05f3\43\0\2\u05f5\37\0\1\u05f6\1\u05f7\4\u05f6\2\0"+
    "\1\u05f6\1\0\3\u05f6\30\0\1\u05f6\5\0\2\u05f6\11\0"+
    "\1\u05f6\2\0\2\u05f6\7\0\2\u05f6\2\0\1\u0510\101\0"+
    "\1\u05f8\1\u05f9\4\u05f8\2\0\1\u05f8\1\0\3\u05f8\30\0"+
    "\1\u05f8\5\0\2\u05f8\11\0\1\u05f8\2\0\2\u05f8\7\0"+
    "\2\u05f8\50\0\2\u05fa\34\0\1\u0514\103\0\1\u0516\101\0"+
    "\1\u05fb\1\u05fc\4\u05fb\2\0\1\u05fb\1\0\3\u05fb\30\0"+
    "\1\u05fb\5\0\2\u05fb\11\0\1\u05fb\2\0\2\u05fb\7\0"+
    "\2\u05fb\10\0\1\u05fd\7\0\1\u05fd\2\0\1\u05fd\67\0"+
    "\1\u05fe\7\0\1\u05fe\72\0\1\u05ff\7\0\1\u05ff\102\0"+
    "\1\u0600\4\0\1\u0600\112\0\2\u051e\53\0\1\u0520\103\0"+
    "\1\u0522\103\0\1\u0524\103\0\1\u0526\101\0\1\u0601\1\u0602"+
    "\4\u0601\2\0\1\u0601\1\0\3\u0601\30\0\1\u0601\5\0"+
    "\2\u0601\11\0\1\u0601\2\0\2\u0601\7\0\2\u0601\2\0"+
    "\1\u0529\101\0\1\u0603\1\u0604\4\u0603\2\0\1\u0603\1\0"+
    "\3\u0603\30\0\1\u0603\5\0\2\u0603\11\0\1\u0603\2\0"+
    "\2\u0603\7\0\2\u0603\7\0\1\u0605\7\0\1\u0605\72\0"+
    "\1\u0606\7\0\1\u0606\73\0\1\u0607\7\0\1\u0607\65\0"+
    "\1\u0608\1\u0609\4\u0608\2\0\1\u0608\1\0\3\u0608\30\0"+
    "\1\u0608\5\0\2\u0608\11\0\1\u0608\2\0\2\u0608\7\0"+
    "\2\u0608\2\0\1\u0532\103\0\1\u0534\103\0\1\u0536\146\0"+
    "\3\u060a\34\0\1\u060b\1\u060c\4\u060b\2\0\1\u060b\1\0"+
    "\3\u060b\30\0\1\u060b\5\0\2\u060b\11\0\1\u060b\2\0"+
    "\2\u060b\7\0\2\u060b\10\0\1\u060d\7\0\1\u060d\2\0"+
    "\1\u060d\70\0\1\u060e\7\0\1\u060e\2\0\1\u060e\62\0"+
    "\1\u053c\103\0\1\u053e\103\0\1\u0540\103\0\1\u0542\101\0"+
    "\1\u060f\1\u0610\4\u060f\2\0\1\u060f\1\0\3\u060f\30\0"+
    "\1\u060f\5\0\2\u060f\11\0\1\u060f\2\0\2\u060f\7\0"+
    "\2\u060f\1\u0611\1\u0612\4\u0611\2\0\1\u0611\1\0\3\u0611"+
    "\30\0\1\u0611\5\0\2\u0611\11\0\1\u0611\2\0\2\u0611"+
    "\7\0\2\u0611\57\0\2\u0613\60\0\2\u0614\47\0\1\u0548"+
    "\103\0\1\u054a\103\0\1\u054c\103\0\1\u054e\110\0\1\u0615"+
    "\7\0\1\u0615\123\0\2\u0616\110\0\3\u0617\104\0\2\u0618"+
    "\34\0\1\u0556\101\0\1\u0619\1\u061a\4\u0619\2\0\1\u0619"+
    "\1\0\3\u0619\30\0\1\u0619\5\0\2\u0619\11\0\1\u0619"+
    "\2\0\2\u0619\7\0\2\u0619\2\0\1\u0559\103\0\1\u055b"+
    "\132\0\2\u061b\51\0\1\u061c\1\u061d\4\u061c\2\0\1\u061c"+
    "\1\0\3\u061c\30\0\1\u061c\5\0\2\u061c\11\0\1\u061c"+
    "\2\0\2\u061c\7\0\2\u061c\1\u061e\1\u061f\4\u061e\2\0"+
    "\1\u061e\1\0\3\u061e\30\0\1\u061e\5\0\2\u061e\11\0"+
    "\1\u061e\2\0\2\u061e\7\0\2\u061e\2\0\1\u0560\103\0"+
    "\1\u0562\103\0\1\u0564\113\0\1\u0187\130\0\2\u0620\45\0"+
    "\1\u0568\140\0\2\u0621\113\0\2\u0622\65\0\2\u04eb\57\0"+
    "\1\u0623\7\0\1\u0623\2\0\1\u0623\113\0\2\u0624\133\0"+
    "\2\u01e0\26\0\1\u0625\7\0\1\u0625\2\0\1\u0625\123\0"+
    "\2\u0626\46\0\1\u0627\7\0\1\u0627\131\0\3\u0628\113\0"+
    "\2\u0629\34\0\1\u062a\7\0\1\u062a\125\0\2\u0275\64\0"+
    "\2\u0289\120\0\2\u062b\41\0\1\u0579\103\0\1\u057b\101\0"+
    "\1\u062c\1\u062d\4\u062c\2\0\1\u062c\1\0\3\u062c\30\0"+
    "\1\u062c\5\0\2\u062c\11\0\1\u062c\2\0\2\u062c\7\0"+
    "\2\u062c\1\u062e\1\u062f\4\u062e\2\0\1\u062e\1\0\3\u062e"+
    "\30\0\1\u062e\5\0\2\u062e\11\0\1\u062e\2\0\2\u062e"+
    "\7\0\2\u062e\11\0\1\u0630\7\0\1\u0630\70\0\1\u0631"+
    "\7\0\1\u0631\67\0\1\u0581\103\0\1\u0583\103\0\1\u0585"+
    "\112\0\1\u0632\7\0\1\u0632\64\0\1\u0588\110\0\1\u0633"+
    "\7\0\1\u0633\141\0\2\u0634\27\0\1\u058e\101\0\1\u0635"+
    "\1\u0636\4\u0635\2\0\1\u0635\1\0\3\u0635\30\0\1\u0635"+
    "\5\0\2\u0635\11\0\1\u0635\2\0\2\u0635\7\0\2\u0635"+
    "\1\u0637\1\u0638\4\u0637\2\0\1\u0637\1\0\3\u0637\30\0"+
    "\1\u0637\5\0\2\u0637\11\0\1\u0637\2\0\2\u0637\7\0"+
    "\2\u0637\2\0\1\u0592\151\0\2\u0639\34\0\1\u0595\101\0"+
    "\1\u063a\1\u063b\4\u063a\2\0\1\u063a\1\0\3\u063a\30\0"+
    "\1\u063a\5\0\2\u063a\11\0\1\u063a\2\0\2\u063a\7\0"+
    "\2\u063a\10\0\1\u063c\7\0\1\u063c\2\0\1\u063c\60\0"+
    "\1\u063d\1\u063e\4\u063d\2\0\1\u063d\1\0\3\u063d\30\0"+
    "\1\u063d\5\0\2\u063d\11\0\1\u063d\2\0\2\u063d\7\0"+
    "\2\u063d\10\0\1\u063f\7\0\1\u063f\2\0\1\u063f\62\0"+
    "\1\u059b\103\0\1\u059d\103\0\1\u059f\111\0\1\u0640\7\0"+
    "\1\u0640\2\0\1\u0640\137\0\2\u0147\102\0\2\u0641\54\0"+
    "\2\u014f\135\0\2\u016c\45\0\2\u0190\100\0\2\u0642\112\0"+
    "\2\u0643\56\0\1\u0644\7\0\1\u0644\125\0\2\u01ae\102\0"+
    "\2\u01b1\107\0\2\u01b8\40\0\1\u0645\7\0\1\u0645\14\0"+
    "\2\u01c1\64\0\1\u01dc\4\0\1\u01dc\116\0\2\u0646\53\0"+
    "\1\u0647\7\0\1\u0647\67\0\1\u05b1\101\0\1\u0648\1\u0649"+
    "\4\u0648\2\0\1\u0648\1\0\3\u0648\30\0\1\u0648\5\0"+
    "\2\u0648\11\0\1\u0648\2\0\2\u0648\7\0\2\u0648\2\0"+
    "\1\u05b4\103\0\1\u05b6\101\0\1\u064a\1\u064b\3\u064c\1\u064d"+
    "\2\0\1\u064a\1\0\1\u064a\1\u064c\1\u064a\10\0\2\u064e"+
    "\16\0\1\u064a\5\0\2\u064a\11\0\1\u064a\2\0\2\u064a"+
    "\7\0\1\u064a\1\u064c\2\0\1\u05b9\103\0\1\u05bb\110\0"+
    "\1\u064f\7\0\1\u064f\125\0\2\u0650\43\0\1\u05bf\103\0"+
    "\1\u05c1\103\0\1\u05c3\103\0\1\u05c5\103\0\1\u05c7\101\0"+
    "\1\u0651\1\u0652\4\u0651\2\0\1\u0651\1\0\3\u0651\30\0"+
    "\1\u0651\5\0\2\u0651\11\0\1\u0651\2\0\2\u0651\7\0"+
    "\2\u0651\2\0\1\u05ca\103\0\1\u05cc\126\0\2\u0653\55\0"+
    "\1\u0654\1\u0655\4\u0654\2\0\1\u0654\1\0\3\u0654\30\0"+
    "\1\u0654\5\0\2\u0654\11\0\1\u0654\2\0\2\u0654\7\0"+
    "\2\u0654\2\0\1\u05d0\126\0\2\u0656\57\0\1\u05d3\132\0"+
    "\2\u0657\51\0\1\u0658\1\u0659\4\u0658\2\0\1\u0658\1\0"+
    "\3\u0658\30\0\1\u0658\5\0\2\u0658\11\0\1\u0658\2\0"+
    "\2\u0658\7\0\2\u0658\1\u065a\1\u065b\4\u065a\2\0\1\u065a"+
    "\1\0\3\u065a\30\0\1\u065a\5\0\2\u065a\11\0\1\u065a"+
    "\2\0\2\u065a\7\0\2\u065a\1\u065c\1\u065d\4\u065c\2\0"+
    "\1\u065c\1\0\3\u065c\30\0\1\u065c\5\0\2\u065c\11\0"+
    "\1\u065c\2\0\2\u065c\7\0\2\u065c\31\0\2\u065e\53\0"+
    "\1\u05da\103\0\1\u05dc\111\0\1\u065f\7\0\1\u065f\2\0"+
    "\1\u065f\60\0\1\u0660\1\u0661\4\u0660\2\0\1\u0660\1\0"+
    "\3\u0660\30\0\1\u0660\5\0\2\u0660\11\0\1\u0660\2\0"+
    "\2\u0660\7\0\2\u0660\25\0\2\u0662\102\0\2\u0663\57\0"+
    "\1\u05e2\110\0\1\u0664\7\0\1\u0664\72\0\1\u0665\7\0"+
    "\1\u0665\122\0\2\u0666\47\0\1\u05e9\113\0\1\u01f8\141\0"+
    "\2\u0667\57\0\2\u0668\57\0\1\u05ee\153\0\1\u05f0\17\0"+
    "\1\u0669\21\0\1\u066a\7\0\1\u066a\2\0\1\u066a\144\0"+
    "\2\u066b\20\0\1\u05f3\126\0\2\u066c\57\0\1\u05f6\103\0"+
    "\1\u05f8\101\0\1\u066d\1\u066e\4\u066d\2\0\1\u066d\1\0"+
    "\3\u066d\30\0\1\u066d\5\0\2\u066d\11\0\1\u066d\2\0"+
    "\2\u066d\7\0\2\u066d\2\0\1\u05fb\146\0\3\u066f\44\0"+
    "\1\u0670\7\0\1\u0670\2\0\1\u0670\67\0\1\u0671\7\0"+
    "\1\u0671\121\0\2\u0672\47\0\1\u0601\103\0\1\u0603\111\0"+
    "\1\u0673\7\0\1\u0673\2\0\1\u0673\67\0\1\u0674\7\0"+
    "\1\u0674\127\0\2\u0675\41\0\1\u0608\126\0\2\u0676\57\0"+
    "\1\u060b\112\0\1\u0677\7\0\1\u0677\127\0\3\u03ae\36\0"+
    "\1\u060f\103\0\1\u0611\151\0\2\u0678\32\0\1\u0679\1\u067a"+
    "\4\u0679\2\0\1\u0679\1\0\3\u0679\30\0\1\u0679\5\0"+
    "\2\u0679\11\0\1\u0679\2\0\2\u0679\7\0\2\u0679\10\0"+
    "\1\u067b\7\0\1\u067b\2\0\1\u067b\115\0\2\u067c\72\0"+
    "\2\u067d\55\0\1\u067e\1\u067f\4\u067e\2\0\1\u067e\1\0"+
    "\3\u067e\30\0\1\u067e\5\0\2\u067e\11\0\1\u067e\2\0"+
    "\2\u067e\7\0\2\u067e\2\0\1\u0619\146\0\3\u0680\36\0"+
    "\1\u061c\103\0\1\u061e\140\0\2\u0681\70\0\2\u0187\63\0"+
    "\1\u0682\7\0\1\u0682\76\0\1\u0683\7\0\1\u0683\107\0"+
    "\2\u0227\66\0\1\u0684\7\0\1\u0684\132\0\2\u0685\42\0"+
    "\1\u0686\7\0\1\u0686\2\0\1\u0686\137\0\2\u0687\50\0"+
    "\2\u0688\67\0\1\u0192\136\0\3\u0398\36\0\1\u062c\103\0"+
    "\1\u062e\113\0\1\u019e\134\0\2\u0689\51\0\1\u01a3\101\0"+
    "\1\u068a\7\0\1\u068a\2\0\1\u068a\105\0\2\u068b\57\0"+
    "\1\u0635\103\0\1\u0637\101\0\1\u068c\1\u068d\4\u068c\2\0"+
    "\1\u068c\1\0\3\u068c\30\0\1\u068c\5\0\2\u068c\11\0"+
    "\1\u068c\2\0\2\u068c\7\0\2\u068c\2\0\1\u063a\151\0"+
    "\2\u068e\34\0\1\u063d\136\0\2\u068f\56\0\1\u0690\7\0"+
    "\1\u0690\141\0\2\u0214\23\0\1\u0270\1\u0271\4\u0270\2\0"+
    "\1\u0270\1\0\3\u0270\30\0\1\u0270\5\0\2\u0270\11\0"+
    "\1\u0270\2\0\2\u0270\7\0\2\u0270\15\0\1\u0274\4\0"+
    "\1\u0274\131\0\2\u028a\75\0\2\u0691\70\0\2\u02c2\65\0"+
    "\1\u0692\71\0\1\u0648\102\0\1\u0693\1\u064c\2\u0693\1\u0694"+
    "\5\0\1\u0693\11\0\2\u064e\54\0\1\u0693\1\0\4\u0693"+
    "\1\u0694\5\0\1\u0693\11\0\2\u064e\54\0\1\u0693\6\0"+
    "\1\u0695\7\0\1\u0695\144\0\2\u0696\33\0\1\u0697\7\0"+
    "\1\u0697\2\0\1\u0697\70\0\1\u0698\7\0\1\u0698\2\0"+
    "\1\u0698\62\0\1\u0651\101\0\1\u0699\1\u069a\4\u0699\2\0"+
    "\1\u0699\1\0\3\u0699\30\0\1\u0699\5\0\2\u0699\11\0"+
    "\1\u0699\2\0\2\u0699\7\0\2\u0699\2\0\1\u0654\101\0"+
    "\1\u069b\1\u069c\4\u069b\2\0\1\u069b\1\0\3\u069b\30\0"+
    "\1\u069b\5\0\2\u069b\11\0\1\u069b\2\0\2\u069b\7\0"+
    "\2\u069b\50\0\2\u069d\34\0\1\u0658\103\0\1\u065a\103\0"+
    "\1\u065c\130\0\2\u069e\116\0\2\u069f\41\0\1\u0660\101\0"+
    "\1\u06a0\1\u06a1\4\u06a0\2\0\1\u06a0\1\0\3\u06a0\30\0"+
    "\1\u06a0\5\0\2\u06a0\11\0\1\u06a0\2\0\2\u06a0\7\0"+
    "\2\u06a0\1\u06a2\1\u06a3\4\u06a2\2\0\1\u06a2\1\0\3\u06a2"+
    "\30\0\1\u06a2\5\0\2\u06a2\11\0\1\u06a2\2\0\2\u06a2"+
    "\7\0\2\u06a2\10\0\1\u06a4\7\0\1\u06a4\2\0\1\u06a4"+
    "\115\0\2\u06a5\45\0\1\u06a6\1\u06a7\4\u06a6\2\0\1\u06a6"+
    "\1\0\3\u06a6\30\0\1\u06a6\5\0\2\u06a6\11\0\1\u06a6"+
    "\2\0\2\u06a6\7\0\2\u06a6\6\0\1\u06a8\7\0\1\u06a8"+
    "\65\0\1\u06a9\1\u06aa\4\u06a9\2\0\1\u06a9\1\0\3\u06a9"+
    "\30\0\1\u06a9\5\0\2\u06a9\11\0\1\u06a9\2\0\2\u06a9"+
    "\7\0\2\u06a9\11\0\1\u06ab\7\0\1\u06ab\62\0\1\u06ac"+
    "\1\u06ad\4\u06ac\2\0\1\u06ac\1\0\3\u06ac\30\0\1\u06ac"+
    "\5\0\2\u06ac\11\0\1\u06ac\2\0\2\u06ac\7\0\2\u06ac"+
    "\1\u06ae\1\u06af\4\u06ae\2\0\1\u06ae\1\0\3\u06ae\30\0"+
    "\1\u06ae\5\0\2\u06ae\11\0\1\u06ae\2\0\2\u06ae\7\0"+
    "\2\u06ae\2\0\1\u066d\126\0\2\u06b0\66\0\1\u06b1\7\0"+
    "\1\u06b1\72\0\1\u06b2\7\0\1\u06b2\2\0\1\u06b2\107\0"+
    "\2\u06b3\64\0\1\u06b4\7\0\1\u06b4\72\0\1\u06b5\7\0"+
    "\1\u06b5\2\0\1\u06b5\115\0\2\u06b6\45\0\1\u06b7\1\u06b8"+
    "\4\u06b7\2\0\1\u06b7\1\0\3\u06b7\30\0\1\u06b7\5\0"+
    "\2\u06b7\11\0\1\u06b7\2\0\2\u06b7\7\0\2\u06b7\12\0"+
    "\1\u022b\71\0\1\u06b9\1\u06ba\4\u06b9\2\0\1\u06b9\1\0"+
    "\3\u06b9\30\0\1\u06b9\5\0\2\u06b9\11\0\1\u06b9\2\0"+
    "\2\u06b9\7\0\2\u06b9\2\0\1\u0679\112\0\1\u06bb\7\0"+
    "\1\u06bb\70\0\1\u06bc\7\0\1\u06bc\73\0\1\u06bd\7\0"+
    "\1\u06bd\67\0\1\u067e\126\0\2\u06be\102\0\2\u0676\44\0"+
    "\2\u0538\44\0\2\u0656\6\0\3\u05d2\46\0\1\u025b\103\0"+
    "\1\u025c\71\0\1\u06bf\1\u06c0\4\u06bf\2\0\1\u06bf\1\0"+
    "\3\u06bf\30\0\1\u06bf\5\0\2\u06bf\11\0\1\u06bf\2\0"+
    "\2\u06bf\7\0\2\u06bf\11\0\1\u06c1\7\0\1\u06c1\127\0"+
    "\3\u06c2\43\0\1\u06c3\7\0\1\u06c3\131\0\3\u06c4\45\0"+
    "\1\u06c5\7\0\1\u06c5\111\0\2\u06c6\55\0\1\u068c\101\0"+
    "\1\u06c7\1\u06c8\4\u06c7\2\0\1\u06c7\1\0\3\u06c7\30\0"+
    "\1\u06c7\5\0\2\u06c7\11\0\1\u06c7\2\0\2\u06c7\7\0"+
    "\2\u06c7\43\0\2\u06c9\51\0\1\u0293\141\0\2\u0399\42\0"+
    "\1\u06ca\7\0\1\u06ca\2\0\1\u06ca\67\0\1\u06cb\7\0"+
    "\1\u06cb\127\0\2\u06cc\50\0\1\u06cd\7\0\1\u06cd\107\0"+
    "\2\u06ce\57\0\1\u0699\103\0\1\u069b\101\0\1\u06cf\1\u06d0"+
    "\4\u06cf\2\0\1\u06cf\1\0\3\u06cf\30\0\1\u06cf\5\0"+
    "\2\u06cf\11\0\1\u06cf\2\0\2\u06cf\7\0\2\u06cf\50\0"+
    "\2\u06d1\67\0\2\u06d2\47\0\1\u06a0\103\0\1\u06a2\112\0"+
    "\1\u06d3\7\0\1\u06d3\77\0\1\u06d4\4\0\1\u06d4\63\0"+
    "\1\u06a6\136\0\2\u01f8\47\0\1\u06a9\113\0\1\u0509\73\0"+
    "\1\u06ac\103\0\1\u06ae\101\0\1\u06d5\1\u06d6\4\u06d5\2\0"+
    "\1\u06d5\1\0\3\u06d5\30\0\1\u06d5\5\0\2\u06d5\11\0"+
    "\1\u06d5\2\0\2\u06d5\7\0\2\u06d5\12\0\1\u051a\102\0"+
    "\1\u06d7\7\0\1\u06d7\132\0\2\u06d8\44\0\1\u052c\102\0"+
    "\1\u06d9\7\0\1\u06d9\70\0\1\u06da\7\0\1\u06da\67\0"+
    "\1\u06b7\103\0\1\u06b9\113\0\1\u0550\141\0\2\u06db\32\0"+
    "\1\u06dc\1\u06dd\4\u06dc\2\0\1\u06dc\1\0\3\u06dc\30\0"+
    "\1\u06dc\5\0\2\u06dc\11\0\1\u06dc\2\0\2\u06dc\7\0"+
    "\2\u06dc\1\u06de\1\u06df\4\u06de\2\0\1\u06de\1\0\3\u06de"+
    "\30\0\1\u06de\5\0\2\u06de\11\0\1\u06de\2\0\2\u06de"+
    "\7\0\2\u06de\2\0\1\u06bf\113\0\1\u033d\116\0\2\u06e0"+
    "\106\0\2\u06e1\76\0\2\u06e2\67\0\1\u058a\77\0\1\u06e3"+
    "\7\0\1\u06e3\67\0\1\u06c7\144\0\2\u06e4\102\0\2\u06e5"+
    "\47\0\1\u06e6\7\0\1\u06e6\2\0\1\u06e6\130\0\2\u06e7"+
    "\44\0\1\u039f\77\0\1\u06e8\7\0\1\u06e8\67\0\1\u06cf"+
    "\101\0\1\u06e9\1\u06ea\4\u06e9\2\0\1\u06e9\1\0\3\u06e9"+
    "\30\0\1\u06e9\5\0\2\u06e9\11\0\1\u06e9\2\0\2\u06e9"+
    "\7\0\2\u06e9\45\0\3\u06eb\46\0\1\u05e4\136\0\3\u06ec"+
    "\36\0\1\u06d5\113\0\1\u03fd\124\0\2\u06ed\61\0\1\u040f"+
    "\126\0\2\u06ee\45\0\1\u042f\1\u06ef\4\u042f\2\0\1\u042f"+
    "\1\0\3\u042f\30\0\1\u042f\5\0\2\u042f\11\0\1\u042f"+
    "\2\0\2\u042f\7\0\2\u042f\2\0\1\u06dc\103\0\1\u06de"+
    "\101\0\1\u06f0\1\u06f1\4\u06f0\2\0\1\u06f0\1\0\3\u06f0"+
    "\30\0\1\u06f0\5\0\2\u06f0\11\0\1\u06f0\2\0\2\u06f0"+
    "\7\0\2\u06f0\45\0\3\u06f2\34\0\1\u06f3\1\u06f4\4\u06f3"+
    "\2\0\1\u06f3\1\0\3\u06f3\30\0\1\u06f3\5\0\2\u06f3"+
    "\11\0\1\u06f3\2\0\2\u06f3\7\0\2\u06f3\25\0\2\u06f5"+
    "\102\0\2\u06f6\66\0\1\u06f7\7\0\1\u06f7\73\0\1\u06f8"+
    "\7\0\1\u06f8\63\0\4\u06e7\1\u06f9\5\0\1\u06e7\11\0"+
    "\2\u06fa\54\0\1\u06e7\45\0\3\u06fb\36\0\1\u06e9\107\0"+
    "\1\u06fc\7\0\1\u06fc\112\0\2\u06fd\122\0\3\u06fe\63\0"+
    "\2\u06ff\55\0\1\u042f\103\0\1\u06f0\126\0\2\u0700\57\0"+
    "\1\u06f3\101\0\1\u0477\1\u0701\4\u0477\2\0\1\u0477\1\0"+
    "\3\u0477\30\0\1\u0477\5\0\2\u0477\11\0\1\u0477\2\0"+
    "\2\u0477\7\0\2\u0477\1\u0702\1\u0703\4\u0702\2\0\1\u0702"+
    "\1\0\3\u0702\30\0\1\u0702\5\0\2\u0702\11\0\1\u0702"+
    "\2\0\2\u0702\7\0\2\u0702\100\0\2\u0704\14\0\1\u0693"+
    "\77\0\1\u0705\7\0\1\u0705\151\0\2\u0706\43\0\2\u0707"+
    "\55\0\1\u0708\1\u0709\4\u0708\2\0\1\u0708\1\0\3\u0708"+
    "\30\0\1\u0708\5\0\2\u0708\11\0\1\u0708\2\0\2\u0708"+
    "\7\0\2\u0708\1\0\4\u06fd\1\u070a\5\0\1\u06fd\13\0"+
    "\2\u070b\52\0\1\u06fd\6\0\1\u070c\7\0\1\u070c\116\0"+
    "\2\u070d\51\0\1\u070e\1\u070f\4\u070e\2\0\1\u070e\1\0"+
    "\3\u070e\30\0\1\u070e\5\0\2\u070e\11\0\1\u070e\2\0"+
    "\2\u070e\7\0\2\u070e\2\0\1\u0477\103\0\1\u0702\115\0"+
    "\1\u0710\76\0\1\u0711\7\0\1\u0711\131\0\3\u0712\34\0"+
    "\1\u0713\1\u0714\4\u0713\2\0\1\u0713\1\0\3\u0713\30\0"+
    "\1\u0713\5\0\2\u0713\11\0\1\u0713\2\0\2\u0713\7\0"+
    "\2\u0713\2\0\1\u0708\107\0\1\u0715\7\0\1\u0715\132\0"+
    "\3\u0716\61\0\2\u0717\125\0\2\u0718\34\0\1\u070e\151\0"+
    "\2\u0719\42\0\1\u071a\7\0\1\u071a\2\0\1\u071a\107\0"+
    "\2\u071b\55\0\1\u0713\110\0\1\u071c\7\0\1\u071c\125\0"+
    "\2\u071d\41\0\1\u03f8\1\u071e\4\u03f8\2\0\1\u03f8\1\0"+
    "\3\u03f8\30\0\1\u03f8\5\0\2\u03f8\11\0\1\u03f8\2\0"+
    "\2\u03f8\7\0\2\u03f8\1\u040b\1\u071f\4\u040b\2\0\1\u040b"+
    "\1\0\3\u040b\30\0\1\u040b\5\0\2\u040b\11\0\1\u040b"+
    "\2\0\2\u040b\7\0\2\u040b\75\0\2\u0720\16\0\1\u0721"+
    "\7\0\1\u0721\117\0\2\u0722\55\0\1\u0723\7\0\1\u0723"+
    "\2\0\1\u0723\137\0\2\u0724\25\0\1\u03f8\103\0\1\u040b"+
    "\115\0\1\u0725\101\0\1\u06e7\71\0\1\u064a\1\u0726\4\u064a"+
    "\2\0\1\u064a\1\0\3\u064a\30\0\1\u064a\5\0\2\u064a"+
    "\11\0\1\u064a\2\0\2\u064a\7\0\2\u064a\11\0\1\u0727"+
    "\7\0\1\u0727\127\0\3\u0728\106\0\1\u0729\33\0\1\u064a"+
    "\113\0\1\u06fd\116\0\2\u072a\127\0\1\u0729\17\0\1\u072b"+
    "\11\0\1\u04fb\1\u072c\4\u04fb\2\0\1\u04fb\1\0\3\u04fb"+
    "\30\0\1\u04fb\5\0\2\u04fb\11\0\1\u04fb\2\0\2\u04fb"+
    "\7\0\2\u04fb\71\u072d\1\0\12\u072d\2\0\1\u04fb\101\0"+
    "\71\u072d\1\u072e\12\u072d\54\0\1\u072f\106\0\2\u0730\111\0"+
    "\3\u0731\21\0\1\u0732\7\0\1\u0732\157\0\1\u0733\12\0"+
    "\2\u0733\2\0\1\u0734\1\u0376\1\u0377\1\u0378\1\u0379\1\0"+
    "\1\u0733\2\0\1\u0376\1\u0377\1\u0378\1\u037a\1\0\1\u037b"+
    "\1\0\1\u037c\1\u037d\2\u037e\2\u037f\2\u0380\2\u0381\2\u0382"+
    "\2\u0383\1\u0384\1\u0385\3\u0386\2\u0387\3\0\1\u0388\1\u0389"+
    "\1\u038a\1\u038b\14\0\1\u038d\1\u038e\4\0\1\u0733\6\0"+
    "\1\u0735\7\0\1\u0735\74\0\1\u0736\7\0\1\u0736\74\0"+
    "\1\u0737\7\0\1\u0737\2\0\1\u0737\71\0\1\u0738\7\0"+
    "\1\u0738\74\0\1\u0733\71\0";

  private static int [] zzUnpackTrans() {
    int [] result = new int[111860];
    int offset = 0;
    offset = zzUnpackTrans(ZZ_TRANS_PACKED_0, offset, result);
    return result;
  }

  private static int zzUnpackTrans(String packed, int offset, int [] result) {
    int i = 0;       /* index in packed string  */
    int j = offset;  /* index in unpacked array */
    int l = packed.length();
    while (i < l) {
      int count = packed.charAt(i++);
      int value = packed.charAt(i++);
      value--;
      do result[j++] = value; while (--count > 0);
    }
    return j;
  }


  /* error codes */
  private static final int ZZ_UNKNOWN_ERROR = 0;
  private static final int ZZ_NO_MATCH = 1;
  private static final int ZZ_PUSHBACK_2BIG = 2;

  /* error messages for the codes above */
  private static final String ZZ_ERROR_MSG[] = {
    "Unknown internal scanner error",
    "Error: could not match input",
    "Error: pushback value was too large"
  };

  /**
   * ZZ_ATTRIBUTE[aState] contains the attributes of state <code>aState</code>
   */
  private static final int [] ZZ_ATTRIBUTE = zzUnpackAttribute();

  private static final String ZZ_ATTRIBUTE_PACKED_0 =
    "\2\0\2\1\1\11\1\1\1\11\1\1\u01fa\0\1\11"+
    "\5\0\1\11\1\1\50\0\1\11\1\1\14\0\1\11"+
    "\1\1\55\0\1\11\1\1\16\0\1\11\1\1\24\0"+
    "\1\11\1\1\70\0\1\11\1\1\17\0\1\11\1\1"+
    "\33\0\1\11\1\1\5\0\1\11\1\1\1\11\1\1"+
    "\4\0\1\11\1\1\26\0\1\11\1\1\50\0\1\11"+
    "\1\1\40\0\1\11\1\1\1\11\1\1\40\0\1\11"+
    "\1\1\5\0\1\11\1\1\16\0\1\11\1\1\5\0"+
    "\1\11\1\1\3\0\1\11\1\1\5\0\1\11\1\1"+
    "\1\0\1\11\1\1\1\0\1\11\1\1\2\0\1\11"+
    "\1\1\6\0\1\11\1\1\13\0\1\11\1\1\1\11"+
    "\1\1\1\0\1\11\3\1\2\0\1\11\1\1\6\0"+
    "\1\11\1\1\3\0\1\11\1\1\1\11\3\1\4\0"+
    "\1\11\1\1\3\0\1\11\1\1\1\0\1\11\1\1"+
    "\1\0\1\11\3\1\13\0\1\11\1\1\1\11\1\1"+
    "\2\0\1\11\1\1\7\0\1\11\1\1\1\11\1\1"+
    "\2\0\1\11\3\1\3\0\1\11\1\1\5\0\1\11"+
    "\1\1\1\11\1\1\1\0\1\11\1\1\3\0\1\11"+
    "\1\1\26\0\1\11\1\1\1\11\1\1\1\11\1\1"+
    "\1\0\1\11\1\1\1\0\1\11\1\1\2\0\1\11"+
    "\1\1\10\0\1\11\3\1\16\0\1\11\1\1\56\0"+
    "\1\11\1\1\1\0\1\11\1\1\1\0\1\11\1\1"+
    "\2\0\1\11\1\1\2\0\1\11\1\1\4\0\1\11"+
    "\1\1\5\0\1\11\1\1\3\0\1\11\1\1\1\0"+
    "\1\11\1\1\1\0\1\11\1\1\1\0\1\11\1\1"+
    "\1\11\1\1\1\11\1\1\1\0\1\11\1\1\1\0"+
    "\1\11\1\1\1\0\1\11\1\1\12\0\1\11\3\1"+
    "\7\0\1\11\1\1\10\0\1\11\1\1\2\0\1\11"+
    "\1\1\1\11\1\1\10\0\1\11\1\1\1\11\1\1"+
    "\1\11\1\1\1\11\1\1\1\0\1\11\1\1\7\0"+
    "\1\11\1\1\1\11\1\1\1\11\1\1\4\0\1\11"+
    "\1\1\1\11\1\1\1\11\1\1\1\11\1\1\4\0"+
    "\1\11\1\1\1\11\1\1\1\11\1\1\1\11\1\1"+
    "\6\0\1\11\1\1\1\0\1\11\1\1\1\11\1\1"+
    "\3\0\1\11\1\1\1\11\1\1\1\11\1\1\2\0"+
    "\1\11\1\1\17\0\1\11\1\1\1\11\1\1\4\0"+
    "\1\11\1\1\1\11\1\1\1\11\1\1\1\0\1\11"+
    "\1\1\4\0\1\11\1\1\2\0\1\11\1\1\1\0"+
    "\1\11\1\1\4\0\1\11\1\1\1\11\1\1\1\11"+
    "\1\1\20\0\1\11\1\1\1\0\1\11\1\1\1\11"+
    "\1\1\1\0\1\11\1\1\1\11\1\1\2\0\1\11"+
    "\1\1\1\11\1\1\1\11\1\1\1\11\1\1\1\11"+
    "\1\1\1\0\1\11\1\1\1\11\1\1\2\0\1\11"+
    "\1\1\1\0\1\11\1\1\5\0\1\11\1\1\1\11"+
    "\1\1\4\0\1\11\1\1\5\0\1\11\1\1\3\0"+
    "\1\11\1\1\3\0\1\11\1\1\1\0\1\11\1\1"+
    "\1\11\1\1\1\0\1\11\1\1\4\0\1\11\1\1"+
    "\1\11\1\1\3\0\1\11\1\1\1\0\1\11\1\1"+
    "\2\0\1\11\1\1\1\11\1\1\6\0\1\11\1\1"+
    "\1\0\1\11\1\1\1\11\1\1\14\0\1\11\1\1"+
    "\1\11\1\1\5\0\1\11\1\1\1\11\1\1\1\0"+
    "\1\11\1\1\1\0\1\11\1\1\11\0\1\11\1\1"+
    "\1\11\3\1\3\0\1\11\1\1\1\0\1\11\1\1"+
    "\2\0\1\11\1\1\1\11\1\1\1\11\1\1\2\0"+
    "\1\11\1\1\7\0\1\11\3\0\1\11\1\1\12\0"+
    "\1\11\1\1\3\0\1\11\1\1\14\0\1\11\1\1"+
    "\13\0\1\11\1\1\1\11\1\1\3\0\1\11\1\1"+
    "\1\11\1\1\2\0\1\11\1\1\1\0\1\11\1\1"+
    "\1\0\1\11\1\1\1\11\1\1\7\0\1\11\1\1"+
    "\1\11\1\1\4\0\1\11\1\1\6\0\1\11\1\1"+
    "\6\0\1\11\1\1\4\0\1\11\1\1\5\0\1\11"+
    "\1\1\1\11\1\1\11\0\1\11\1\1\4\0\1\1"+
    "\1\11\1\1\1\0\1\11\1\1\14\0\1\1\1\11"+
    "\1\1\4\0\1\11\1\1\4\0\1\11\1\1\3\0"+
    "\1\11\1\1\11\0\2\1\6\0\1\1\5\0\1\1"+
    "\14\0";

  private static int [] zzUnpackAttribute() {
    int [] result = new int[1848];
    int offset = 0;
    offset = zzUnpackAttribute(ZZ_ATTRIBUTE_PACKED_0, offset, result);
    return result;
  }

  private static int zzUnpackAttribute(String packed, int offset, int [] result) {
    int i = 0;       /* index in packed string  */
    int j = offset;  /* index in unpacked array */
    int l = packed.length();
    while (i < l) {
      int count = packed.charAt(i++);
      int value = packed.charAt(i++);
      do result[j++] = value; while (--count > 0);
    }
    return j;
  }

  /** the input device */
  private java.io.Reader zzReader;

  /** the current state of the DFA */
  private int zzState;

  /** the current lexical state */
  private int zzLexicalState = YYINITIAL;

  /** this buffer contains the current text to be matched and is
      the source of the yytext() string */
  private char zzBuffer[] = new char[ZZ_BUFFERSIZE];

  /** the textposition at the last accepting state */
  private int zzMarkedPos;

  /** the current text position in the buffer */
  private int zzCurrentPos;

  /** startRead marks the beginning of the yytext() string in the buffer */
  private int zzStartRead;

  /** endRead marks the last character in the buffer, that has been read
      from input */
  private int zzEndRead;

  /** number of newlines encountered up to the start of the matched text */
  private int yyline;

  /** the number of characters up to the start of the matched text */
  private int yychar;

  /**
   * the number of characters from the last newline up to the start of the 
   * matched text
   */
  private int yycolumn;

  /** 
   * zzAtBOL == true iff the scanner is currently at the beginning of a line
   */
  private boolean zzAtBOL = true;

  /** zzAtEOF == true iff the scanner is at the EOF */
  private boolean zzAtEOF;

  /** denotes if the user-EOF-code has already been executed */
  private boolean zzEOFDone;
  
  /** 
   * The number of occupied positions in zzBuffer beyond zzEndRead.
   * When a lead/high surrogate has been read from the input stream
   * into the final zzBuffer position, this will have a value of 1;
   * otherwise, it will have a value of 0.
   */
  private int zzFinalHighSurrogate = 0;

  /* user code: */
	
	/* Custom java code */

    @Override
	public String language() { return "IT"; }

	@Override
	public String version() { return "1.1"; }


	/* An empty default constructor is required to comply with LinkolnService */
	
	public Geos() { }
	
	@Override
	public final boolean run() {
		
		try {
			
			yyreset(new StringReader(getInput()));
			yylex();
			
		} catch (IOException e) {

			e.printStackTrace();
			return false;
		}
		
		return true;
	}
	


  /**
   * Creates a new scanner
   *
   * @param   in  the java.io.Reader to read input from.
   */
  public Geos(java.io.Reader in) {
    this.zzReader = in;
  }


  /** 
   * Unpacks the compressed character translation table.
   *
   * @param packed   the packed character translation table
   * @return         the unpacked character translation table
   */
  private static char [] zzUnpackCMap(String packed) {
    char [] map = new char[0x110000];
    int i = 0;  /* index in packed string  */
    int j = 0;  /* index in unpacked array */
    while (i < 382) {
      int  count = packed.charAt(i++);
      char value = packed.charAt(i++);
      do map[j++] = value; while (--count > 0);
    }
    return map;
  }


  /**
   * Refills the input buffer.
   *
   * @return      <code>false</code>, iff there was new input.
   * 
   * @exception   java.io.IOException  if any I/O-Error occurs
   */
  private boolean zzRefill() throws java.io.IOException {

    /* first: make room (if you can) */
    if (zzStartRead > 0) {
      zzEndRead += zzFinalHighSurrogate;
      zzFinalHighSurrogate = 0;
      System.arraycopy(zzBuffer, zzStartRead,
                       zzBuffer, 0,
                       zzEndRead-zzStartRead);

      /* translate stored positions */
      zzEndRead-= zzStartRead;
      zzCurrentPos-= zzStartRead;
      zzMarkedPos-= zzStartRead;
      zzStartRead = 0;
    }

    /* is the buffer big enough? */
    if (zzCurrentPos >= zzBuffer.length - zzFinalHighSurrogate) {
      /* if not: blow it up */
      char newBuffer[] = new char[zzBuffer.length*2];
      System.arraycopy(zzBuffer, 0, newBuffer, 0, zzBuffer.length);
      zzBuffer = newBuffer;
      zzEndRead += zzFinalHighSurrogate;
      zzFinalHighSurrogate = 0;
    }

    /* fill the buffer with new input */
    int requested = zzBuffer.length - zzEndRead;
    int numRead = zzReader.read(zzBuffer, zzEndRead, requested);

    /* not supposed to occur according to specification of java.io.Reader */
    if (numRead == 0) {
      throw new java.io.IOException("Reader returned 0 characters. See JFlex examples for workaround.");
    }
    if (numRead > 0) {
      zzEndRead += numRead;
      /* If numRead == requested, we might have requested to few chars to
         encode a full Unicode character. We assume that a Reader would
         otherwise never return half characters. */
      if (numRead == requested) {
        if (Character.isHighSurrogate(zzBuffer[zzEndRead - 1])) {
          --zzEndRead;
          zzFinalHighSurrogate = 1;
        }
      }
      /* potentially more input available */
      return false;
    }

    /* numRead < 0 ==> end of stream */
    return true;
  }

    
  /**
   * Closes the input stream.
   */
  public final void yyclose() throws java.io.IOException {
    zzAtEOF = true;            /* indicate end of file */
    zzEndRead = zzStartRead;  /* invalidate buffer    */

    if (zzReader != null)
      zzReader.close();
  }


  /**
   * Resets the scanner to read from a new input stream.
   * Does not close the old reader.
   *
   * All internal variables are reset, the old input stream 
   * <b>cannot</b> be reused (internal buffer is discarded and lost).
   * Lexical state is set to <tt>ZZ_INITIAL</tt>.
   *
   * Internal scan buffer is resized down to its initial length, if it has grown.
   *
   * @param reader   the new input stream 
   */
  public final void yyreset(java.io.Reader reader) {
    zzReader = reader;
    zzAtBOL  = true;
    zzAtEOF  = false;
    zzEOFDone = false;
    zzEndRead = zzStartRead = 0;
    zzCurrentPos = zzMarkedPos = 0;
    zzFinalHighSurrogate = 0;
    yyline = yychar = yycolumn = 0;
    zzLexicalState = YYINITIAL;
    if (zzBuffer.length > ZZ_BUFFERSIZE)
      zzBuffer = new char[ZZ_BUFFERSIZE];
  }


  /**
   * Returns the current lexical state.
   */
  public final int yystate() {
    return zzLexicalState;
  }


  /**
   * Enters a new lexical state
   *
   * @param newState the new lexical state
   */
  public final void yybegin(int newState) {
    zzLexicalState = newState;
  }


  /**
   * Returns the text matched by the current regular expression.
   */
  public final String yytext() {
    return new String( zzBuffer, zzStartRead, zzMarkedPos-zzStartRead );
  }


  /**
   * Returns the character at position <tt>pos</tt> from the 
   * matched text. 
   * 
   * It is equivalent to yytext().charAt(pos), but faster
   *
   * @param pos the position of the character to fetch. 
   *            A value from 0 to yylength()-1.
   *
   * @return the character at position pos
   */
  public final char yycharat(int pos) {
    return zzBuffer[zzStartRead+pos];
  }


  /**
   * Returns the length of the matched text region.
   */
  public final int yylength() {
    return zzMarkedPos-zzStartRead;
  }


  /**
   * Reports an error that occured while scanning.
   *
   * In a wellformed scanner (no or only correct usage of 
   * yypushback(int) and a match-all fallback rule) this method 
   * will only be called with things that "Can't Possibly Happen".
   * If this method is called, something is seriously wrong
   * (e.g. a JFlex bug producing a faulty scanner etc.).
   *
   * Usual syntax/scanner level error handling should be done
   * in error fallback rules.
   *
   * @param   errorCode  the code of the errormessage to display
   */
  private void zzScanError(int errorCode) {
    String message;
    try {
      message = ZZ_ERROR_MSG[errorCode];
    }
    catch (ArrayIndexOutOfBoundsException e) {
      message = ZZ_ERROR_MSG[ZZ_UNKNOWN_ERROR];
    }

    throw new Error(message);
  } 


  /**
   * Pushes the specified amount of characters back into the input stream.
   *
   * They will be read again by then next call of the scanning method
   *
   * @param number  the number of characters to be read again.
   *                This number must not be greater than yylength()!
   */
  public void yypushback(int number)  {
    if ( number > yylength() )
      zzScanError(ZZ_PUSHBACK_2BIG);

    zzMarkedPos -= number;
  }


  /**
   * Resumes scanning until the next regular expression is matched,
   * the end of input is encountered or an I/O-Error occurs.
   *
   * @return      the next token
   * @exception   java.io.IOException  if any I/O-Error occurs
   */
  public int yylex() throws java.io.IOException {
    int zzInput;
    int zzAction;

    // cached fields:
    int zzCurrentPosL;
    int zzMarkedPosL;
    int zzEndReadL = zzEndRead;
    char [] zzBufferL = zzBuffer;
    char [] zzCMapL = ZZ_CMAP;

    int [] zzTransL = ZZ_TRANS;
    int [] zzRowMapL = ZZ_ROWMAP;
    int [] zzAttrL = ZZ_ATTRIBUTE;

    while (true) {
      zzMarkedPosL = zzMarkedPos;

      yychar+= zzMarkedPosL-zzStartRead;

      boolean zzR = false;
      int zzCh;
      int zzCharCount;
      for (zzCurrentPosL = zzStartRead  ;
           zzCurrentPosL < zzMarkedPosL ;
           zzCurrentPosL += zzCharCount ) {
        zzCh = Character.codePointAt(zzBufferL, zzCurrentPosL, zzMarkedPosL);
        zzCharCount = Character.charCount(zzCh);
        switch (zzCh) {
        case '\u000B':  // fall through
        case '\u000C':  // fall through
        case '\u0085':  // fall through
        case '\u2028':  // fall through
        case '\u2029':
          yyline++;
          yycolumn = 0;
          zzR = false;
          break;
        case '\r':
          yyline++;
          yycolumn = 0;
          zzR = true;
          break;
        case '\n':
          if (zzR)
            zzR = false;
          else {
            yyline++;
            yycolumn = 0;
          }
          break;
        default:
          zzR = false;
          yycolumn += zzCharCount;
        }
      }

      if (zzR) {
        // peek one character ahead if it is \n (if we have counted one line too much)
        boolean zzPeek;
        if (zzMarkedPosL < zzEndReadL)
          zzPeek = zzBufferL[zzMarkedPosL] == '\n';
        else if (zzAtEOF)
          zzPeek = false;
        else {
          boolean eof = zzRefill();
          zzEndReadL = zzEndRead;
          zzMarkedPosL = zzMarkedPos;
          zzBufferL = zzBuffer;
          if (eof) 
            zzPeek = false;
          else 
            zzPeek = zzBufferL[zzMarkedPosL] == '\n';
        }
        if (zzPeek) yyline--;
      }
      zzAction = -1;

      zzCurrentPosL = zzCurrentPos = zzStartRead = zzMarkedPosL;
  
      zzState = ZZ_LEXSTATE[zzLexicalState];

      // set up zzAction for empty match case:
      int zzAttributes = zzAttrL[zzState];
      if ( (zzAttributes & 1) == 1 ) {
        zzAction = zzState;
      }


      zzForAction: {
        while (true) {
    
          if (zzCurrentPosL < zzEndReadL) {
            zzInput = Character.codePointAt(zzBufferL, zzCurrentPosL, zzEndReadL);
            zzCurrentPosL += Character.charCount(zzInput);
          }
          else if (zzAtEOF) {
            zzInput = YYEOF;
            break zzForAction;
          }
          else {
            // store back cached positions
            zzCurrentPos  = zzCurrentPosL;
            zzMarkedPos   = zzMarkedPosL;
            boolean eof = zzRefill();
            // get translated positions and possibly new buffer
            zzCurrentPosL  = zzCurrentPos;
            zzMarkedPosL   = zzMarkedPos;
            zzBufferL      = zzBuffer;
            zzEndReadL     = zzEndRead;
            if (eof) {
              zzInput = YYEOF;
              break zzForAction;
            }
            else {
              zzInput = Character.codePointAt(zzBufferL, zzCurrentPosL, zzEndReadL);
              zzCurrentPosL += Character.charCount(zzInput);
            }
          }
          int zzNext = zzTransL[ zzRowMapL[zzState] + zzCMapL[zzInput] ];
          if (zzNext == -1) break zzForAction;
          zzState = zzNext;

          zzAttributes = zzAttrL[zzState];
          if ( (zzAttributes & 1) == 1 ) {
            zzAction = zzState;
            zzMarkedPosL = zzCurrentPosL;
            if ( (zzAttributes & 8) == 8 ) break zzForAction;
          }

        }
      }

      // store back cached position
      zzMarkedPos = zzMarkedPosL;

      if (zzInput == YYEOF && zzStartRead == zzCurrentPos) {
        zzAtEOF = true;
        return YYEOF;
      }
      else {
        switch (zzAction < 0 ? zzAction : ZZ_ACTION[zzAction]) {
          case 1: 
            { addText(yytext());
	position++;
            } 
            // fall through
          case 190: break;
          case 2: 
            { addText(yytext());
		position++;
            } 
            // fall through
          case 191: break;
          case 3: 
            { addText(yytext());
		position--; //account for the following {LKN_C} character
		yybegin(YYINITIAL);
            } 
            // fall through
          case 192: break;
          case 4: 
            { annotate(new City(), "IT_BA", true, true);
            } 
            // fall through
          case 193: break;
          case 5: 
            { annotate(new City(), "IT_PI", true, true);
            } 
            // fall through
          case 194: break;
          case 6: 
            { annotate(new City(), "IT_AT", true, true);
            } 
            // fall through
          case 195: break;
          case 7: 
            { annotate(new City(), "IT_RM", true, true);
            } 
            // fall through
          case 196: break;
          case 8: 
            { annotate(new City(), "IT_EN", true, true);
            } 
            // fall through
          case 197: break;
          case 9: 
            { annotate(new City(), "IT_CO", true, true);
            } 
            // fall through
          case 198: break;
          case 10: 
            { annotate(new City(), "IT_LO", true, true);
            } 
            // fall through
          case 199: break;
          case 11: 
            { annotate(new City(), "IT_NU", true, true);
            } 
            // fall through
          case 200: break;
          case 12: 
            { annotate(new City(), "IT_SI", true, true);
            } 
            // fall through
          case 201: break;
          case 13: 
            { annotate(new City(), "IT_PR", true, true);
            } 
            // fall through
          case 202: break;
          case 14: 
            { annotate(new City(), "IT_PV", true, true);
            } 
            // fall through
          case 203: break;
          case 15: 
            { annotate(new City(), "IT_PO", true, true);
            } 
            // fall through
          case 204: break;
          case 16: 
            { annotate(new City(), "IT_AO", true, true);
            } 
            // fall through
          case 205: break;
          case 17: 
            { annotate(new City(), "IT_RI", true, true);
            } 
            // fall through
          case 206: break;
          case 18: 
            { annotate(new City(), "IT_CN", true, true);
            } 
            // fall through
          case 207: break;
          case 19: 
            { annotate(new Country(), "CY", true, true);
            } 
            // fall through
          case 208: break;
          case 20: 
            { annotate(new City(), "IT_UD", true, true);
            } 
            // fall through
          case 209: break;
          case 21: 
            { annotate(new City(), "IT_TR", true, true);
            } 
            // fall through
          case 210: break;
          case 22: 
            { annotate(new City(), "IT_G015", true, true);
            } 
            // fall through
          case 211: break;
          case 23: 
            { annotate(new Country(), "MT", true, true);
            } 
            // fall through
          case 212: break;
          case 24: 
            { annotate(new City(), "IT_MB", true, true);
            } 
            // fall through
          case 213: break;
          case 25: 
            { annotate(new City(), "IT_F023", true, true);
            } 
            // fall through
          case 214: break;
          case 26: 
            { annotate(new Region(), "IT_LAZ", true, true);
            } 
            // fall through
          case 215: break;
          case 27: 
            { annotate(new City(), "IT_LE", true, true);
            } 
            // fall through
          case 216: break;
          case 28: 
            { annotate(new City(), "IT_LU", true, true);
            } 
            // fall through
          case 217: break;
          case 29: 
            { annotate(new City(), "IT_LC", true, true);
            } 
            // fall through
          case 218: break;
          case 30: 
            { annotate(new City(), "IT_D704", true, true);
            } 
            // fall through
          case 219: break;
          case 31: 
            { annotate(new City(), "IT_FM", true, true);
            } 
            // fall through
          case 220: break;
          case 32: 
            { annotate(new City(), "IT_NA", true, true);
            } 
            // fall through
          case 221: break;
          case 33: 
            { annotate(new City(), "IT_NO", true, true);
            } 
            // fall through
          case 222: break;
          case 34: 
            { annotate(new Country(), "BE", true, true);
            } 
            // fall through
          case 223: break;
          case 35: 
            { annotate(new City(), "IT_BI", true, true);
            } 
            // fall through
          case 224: break;
          case 36: 
            { annotate(new Country(), "BA", true, true);
            } 
            // fall through
          case 225: break;
          case 37: 
            { annotate(new Country(), "ES", true, true);
            } 
            // fall through
          case 226: break;
          case 38: 
            { annotate(new City(), "IT_SV", true, true);
            } 
            // fall through
          case 227: break;
          case 39: 
            { annotate(new Country(), "SE", true, true);
            } 
            // fall through
          case 228: break;
          case 40: 
            { annotate(new Country(), "RS", true, true);
            } 
            // fall through
          case 229: break;
          case 41: 
            { annotate(new City(), "IT_PD", true, true);
            } 
            // fall through
          case 230: break;
          case 42: 
            { annotate(new City(), "IT_G479", true, true);
            } 
            // fall through
          case 231: break;
          case 43: 
            { annotate(new Region(), "IT_PUG", true, true);
            } 
            // fall through
          case 232: break;
          case 44: 
            { annotate(new City(), "IT_SP", true, true);
            } 
            // fall through
          case 233: break;
          case 45: 
            { annotate(new City(), "IT_AN", true, true);
            } 
            // fall through
          case 234: break;
          case 46: 
            { annotate(new City(), "IT_AP", true, true);
            } 
            // fall through
          case 235: break;
          case 47: 
            { annotate(new City(), "IT_AR", true, true);
            } 
            // fall through
          case 236: break;
          case 48: 
            { annotate(new City(), "IT_AQ", true, true);
            } 
            // fall through
          case 237: break;
          case 49: 
            { annotate(new Country(), "GR", true, true);
            } 
            // fall through
          case 238: break;
          case 50: 
            { annotate(new City(), "IT_GE", true, true);
            } 
            // fall through
          case 239: break;
          case 51: 
            { annotate(new City(), "IT_RG", true, true);
            } 
            // fall through
          case 240: break;
          case 52: 
            { annotate(new Country(), "RU", true, true);
            } 
            // fall through
          case 241: break;
          case 53: 
            { annotate(new City(), "IT_RN", true, true);
            } 
            // fall through
          case 242: break;
          case 54: 
            { annotate(new City(), "IT_RO", true, true);
            } 
            // fall through
          case 243: break;
          case 55: 
            { annotate(new City(), "IT_VA", true, true);
            } 
            // fall through
          case 244: break;
          case 56: 
            { annotate(new Region(), "IT_VEN", true, true);
            } 
            // fall through
          case 245: break;
          case 57: 
            { annotate(new City(), "IT_VR", true, true);
            } 
            // fall through
          case 246: break;
          case 58: 
            { annotate(new Region(), "IT_EMR", true, true);
            } 
            // fall through
          case 247: break;
          case 59: 
            { annotate(new City(), "IT_C573", true, true);
            } 
            // fall through
          case 248: break;
          case 60: 
            { annotate(new City(), "IT_CH", true, true);
            } 
            // fall through
          case 249: break;
          case 61: 
            { annotate(new City(), "IT_L500", true, true);
            } 
            // fall through
          case 250: break;
          case 62: 
            { annotate(new Region(), "IT_UMB", true, true);
            } 
            // fall through
          case 251: break;
          case 63: 
            { annotate(new City(), "IT_TN", true, true);
            } 
            // fall through
          case 252: break;
          case 64: 
            { annotate(new City(), "IT_TE", true, true);
            } 
            // fall through
          case 253: break;
          case 65: 
            { annotate(new City(), "IT_TO", true, true);
            } 
            // fall through
          case 254: break;
          case 66: 
            { annotate(new Country(), "IT", true, true);
            } 
            // fall through
          case 255: break;
          case 67: 
            { annotate(new Country(), "NL", true, true);
            } 
            // fall through
          case 256: break;
          case 68: 
            { annotate(new Region(), "IT_MAR", true, true);
            } 
            // fall through
          case 257: break;
          case 69: 
            { annotate(new City(), "IT_MT", true, true);
            } 
            // fall through
          case 258: break;
          case 70: 
            { annotate(new City(), "IT_L736", true, true);
            } 
            // fall through
          case 259: break;
          case 71: 
            { annotate(new City(), "IT_MI", true, true);
            } 
            // fall through
          case 260: break;
          case 72: 
            { annotate(new Country(), "MC", true, true);
            } 
            // fall through
          case 261: break;
          case 73: 
            { annotate(new Region(), "IT_MOL", true, true);
            } 
            // fall through
          case 262: break;
          case 74: 
            { annotate(new City(), "IT_MO", true, true);
            } 
            // fall through
          case 263: break;
          case 75: 
            { annotate(new City(), "IT_LT", true, true);
            } 
            // fall through
          case 264: break;
          case 76: 
            { annotate(new Region(), "IT_FVG", true, true);
            } 
            // fall through
          case 265: break;
          case 77: 
            { annotate(new City(), "IT_FG", true, true);
            } 
            // fall through
          case 266: break;
          case 78: 
            { annotate(new City(), "IT_BS", true, true);
            } 
            // fall through
          case 267: break;
          case 79: 
            { annotate(new City(), "IT_BG", true, true);
            } 
            // fall through
          case 268: break;
          case 80: 
            { annotate(new City(), "IT_BL", true, true);
            } 
            // fall through
          case 269: break;
          case 81: 
            { annotate(new City(), "IT_BZ", true, true);
            } 
            // fall through
          case 270: break;
          case 82: 
            { annotate(new City(), "IT_BO", true, true);
            } 
            // fall through
          case 271: break;
          case 83: 
            { annotate(new City(), "IT_I138", true, true);
            } 
            // fall through
          case 272: break;
          case 84: 
            { annotate(new City(), "IT_SS", true, true);
            } 
            // fall through
          case 273: break;
          case 85: 
            { annotate(new City(), "IT_SA", true, true);
            } 
            // fall through
          case 274: break;
          case 86: 
            { annotate(new Region(), "IT_SIC", true, true);
            } 
            // fall through
          case 275: break;
          case 87: 
            { annotate(new City(), "IT_SO", true, true);
            } 
            // fall through
          case 276: break;
          case 88: 
            { annotate(new Country(), "SM", true, true);
            } 
            // fall through
          case 277: break;
          case 89: 
            { annotate(new City(), "IT_PA", true, true);
            } 
            // fall through
          case 278: break;
          case 90: 
            { annotate(new City(), "IT_PE", true, true);
            } 
            // fall through
          case 279: break;
          case 91: 
            { annotate(new City(), "IT_PG", true, true);
            } 
            // fall through
          case 280: break;
          case 92: 
            { annotate(new City(), "IT_PT", true, true);
            } 
            // fall through
          case 281: break;
          case 93: 
            { annotate(new City(), "IT_PZ", true, true);
            } 
            // fall through
          case 282: break;
          case 94: 
            { annotate(new Country(), "PL", true, true);
            } 
            // fall through
          case 283: break;
          case 95: 
            { annotate(new Country(), "AD", true, true);
            } 
            // fall through
          case 284: break;
          case 96: 
            { annotate(new Region(), "IT_ABR", true, true);
            } 
            // fall through
          case 285: break;
          case 97: 
            { annotate(new Country(), "AM", true, true);
            } 
            // fall through
          case 286: break;
          case 98: 
            { annotate(new Country(), "AT", true, true);
            } 
            // fall through
          case 287: break;
          case 99: 
            { annotate(new Country(), "AL", true, true);
            } 
            // fall through
          case 288: break;
          case 100: 
            { annotate(new Country(), "GE", true, true);
            } 
            // fall through
          case 289: break;
          case 101: 
            { annotate(new City(), "IT_GO", true, true);
            } 
            // fall through
          case 290: break;
          case 102: 
            { annotate(new City(), "IT_RA", true, true);
            } 
            // fall through
          case 291: break;
          case 103: 
            { annotate(new Country(), "CZ", true, true);
            } 
            // fall through
          case 292: break;
          case 104: 
            { annotate(new Country(), "RO", true, true);
            } 
            // fall through
          case 293: break;
          case 105: 
            { annotate(new City(), "IT_VE", true, true);
            } 
            // fall through
          case 294: break;
          case 106: 
            { annotate(new City(), "IT_VI", true, true);
            } 
            // fall through
          case 295: break;
          case 107: 
            { annotate(new City(), "IT_VT", true, true);
            } 
            // fall through
          case 296: break;
          case 108: 
            { annotate(new Region(), "IT_VDA", true, true);
            } 
            // fall through
          case 297: break;
          case 109: 
            { annotate(new Country(), "EE", true, true);
            } 
            // fall through
          case 298: break;
          case 110: 
            { annotate(new City(), "IT_CE", true, true);
            } 
            // fall through
          case 299: break;
          case 111: 
            { annotate(new City(), "IT_B832", true, true);
            } 
            // fall through
          case 300: break;
          case 112: 
            { annotate(new City(), "IT_CT", true, true);
            } 
            // fall through
          case 301: break;
          case 113: 
            { annotate(new City(), "IT_CR", true, true);
            } 
            // fall through
          case 302: break;
          case 114: 
            { annotate(new Country(), "HR", true, true);
            } 
            // fall through
          case 303: break;
          case 115: 
            { annotate(new City(), "IT_KR", true, true);
            } 
            // fall through
          case 304: break;
          case 116: 
            { annotate(new City(), "IT_CS", true, true);
            } 
            // fall through
          case 305: break;
          case 117: 
            { annotate(new Country(), "UA", true, true);
            } 
            // fall through
          case 306: break;
          case 118: 
            { annotate(new City(), "IT_TA", true, true);
            } 
            // fall through
          case 307: break;
          case 119: 
            { annotate(new City(), "IT_TV", true, true);
            } 
            // fall through
          case 308: break;
          case 120: 
            { annotate(new City(), "IT_TS", true, true);
            } 
            // fall through
          case 309: break;
          case 121: 
            { annotate(new Country(), "TR", true, true);
            } 
            // fall through
          case 310: break;
          case 122: 
            { annotate(new Region(), "IT_TOS", true, true);
            } 
            // fall through
          case 311: break;
          case 123: 
            { annotate(new City(), "IT_TP", true, true);
            } 
            // fall through
          case 312: break;
          case 124: 
            { annotate(new City(), "IT_IS", true, true);
            } 
            // fall through
          case 313: break;
          case 125: 
            { annotate(new Country(), "IS", true, true);
            } 
            // fall through
          case 314: break;
          case 126: 
            { annotate(new Country(), "IE", true, true);
            } 
            // fall through
          case 315: break;
          case 127: 
            { annotate(new City(), "IT_IM", true, true);
            } 
            // fall through
          case 316: break;
          case 128: 
            { annotate(new City(), "IT_MN", true, true);
            } 
            // fall through
          case 317: break;
          case 129: 
            { annotate(new City(), "IT_ME", true, true);
            } 
            // fall through
          case 318: break;
          case 130: 
            { annotate(new Region(), "IT_LIG", true, true);
            } 
            // fall through
          case 319: break;
          case 131: 
            { annotate(new City(), "IT_LI", true, true);
            } 
            // fall through
          case 320: break;
          case 132: 
            { annotate(new Country(), "FR", true, true);
            } 
            // fall through
          case 321: break;
          case 133: 
            { annotate(new City(), "IT_FE", true, true);
            } 
            // fall through
          case 322: break;
          case 134: 
            { annotate(new City(), "IT_FI", true, true);
            } 
            // fall through
          case 323: break;
          case 135: 
            { annotate(new Country(), "NO", true, true);
            } 
            // fall through
          case 324: break;
          case 136: 
            { annotate(new City(), "IT_BT", true, true);
            } 
            // fall through
          case 325: break;
          case 137: 
            { annotate(new City(), "IT_BR", true, true);
            } 
            // fall through
          case 326: break;
          case 138: 
            { annotate(new Country(), "BG", true, true);
            } 
            // fall through
          case 327: break;
          case 139: 
            { annotate(new Region(), "IT_SAR", true, true);
            } 
            // fall through
          case 328: break;
          case 140: 
            { annotate(new Country(), "CH", true, true);
            } 
            // fall through
          case 329: break;
          case 141: 
            { annotate(new City(), "IT_SR", true, true);
            } 
            // fall through
          case 330: break;
          case 142: 
            { annotate(new Country(), "SI", true, true);
            } 
            // fall through
          case 331: break;
          case 143: 
            { annotate(new City(), "IT_PC", true, true);
            } 
            // fall through
          case 332: break;
          case 144: 
            { annotate(new Region(), "IT_PIE", true, true);
            } 
            // fall through
          case 333: break;
          case 145: 
            { annotate(new City(), "IT_AV", true, true);
            } 
            // fall through
          case 334: break;
          case 146: 
            { annotate(new City(), "IT_GR", true, true);
            } 
            // fall through
          case 335: break;
          case 147: 
            { annotate(new Country(), "DE", true, true);
            } 
            // fall through
          case 336: break;
          case 148: 
            { annotate(new City(), "IT_L746", true, true);
            } 
            // fall through
          case 337: break;
          case 149: 
            { annotate(new City(), "IT_VC", true, true);
            } 
            // fall through
          case 338: break;
          case 150: 
            { annotate(new City(), "IT_CA", true, true);
            } 
            // fall through
          case 339: break;
          case 151: 
            { annotate(new City(), "IT_B745", true, true);
            } 
            // fall through
          case 340: break;
          case 152: 
            { annotate(new Region(), "IT_CAM", true, true);
            } 
            // fall through
          case 341: break;
          case 153: 
            { annotate(new Region(), "IT_CAL", true, true);
            } 
            // fall through
          case 342: break;
          case 154: 
            { annotate(new Country(), "HU", true, true);
            } 
            // fall through
          case 343: break;
          case 155: 
            { annotate(new Region(), "IT_TAA", true, true);
            } 
            // fall through
          case 344: break;
          case 156: 
            { annotate(new City(), "IT_E281", true, true);
            } 
            // fall through
          case 345: break;
          case 157: 
            { annotate(new City(), "IT_OR", true, true);
            } 
            // fall through
          case 346: break;
          case 158: 
            { annotate(new Country(), "MD", true, true);
            } 
            // fall through
          case 347: break;
          case 159: 
            { annotate(new City(), "IT_MC", true, true);
            } 
            // fall through
          case 348: break;
          case 160: 
            { annotate(new Country(), "LV", true, true);
            } 
            // fall through
          case 349: break;
          case 161: 
            { annotate(new Country(), "LT", true, true);
            } 
            // fall through
          case 350: break;
          case 162: 
            { addText(yytext()); 
	yybegin(lkn);
            } 
            // fall through
          case 351: break;
          case 163: 
            { annotate(new City(), "IT_BN", true, true);
            } 
            // fall through
          case 352: break;
          case 164: 
            { annotate(new City(), "IT_PN", true, true);
            } 
            // fall through
          case 353: break;
          case 165: 
            { annotate(new City(), "IT_AG", true, true);
            } 
            // fall through
          case 354: break;
          case 166: 
            { annotate(new City(), "IT_CZ", true, true);
            } 
            // fall through
          case 355: break;
          case 167: 
            { annotate(new City(), "IT_OG", true, true);
            } 
            // fall through
          case 356: break;
          case 168: 
            { annotate(new Country(), "MK", true, true);
            } 
            // fall through
          case 357: break;
          case 169: 
            { annotate(new Region(), "IT_LOM", true, true);
            } 
            // fall through
          case 358: break;
          case 170: 
            { annotate(new Country(), "DK", true, true);
            } 
            // fall through
          case 359: break;
          case 171: 
            { annotate(new City(), "IT_FR", true, true);
            } 
            // fall through
          case 360: break;
          case 172: 
            { annotate(new Country(), "FI", true, true);
            } 
            // fall through
          case 361: break;
          case 173: 
            { annotate(new City(), "IT_NN", true, true);
            } 
            // fall through
          case 362: break;
          case 174: 
            { annotate(new Region(), "IT_BAS", true, true);
            } 
            // fall through
          case 363: break;
          case 175: 
            { annotate(new Country(), "SK", true, true);
            } 
            // fall through
          case 364: break;
          case 176: 
            { annotate(new Country(), "PT", true, true);
            } 
            // fall through
          case 365: break;
          case 177: 
            { annotate(new Country(), "GB", true, true);
            } 
            // fall through
          case 366: break;
          case 178: 
            { annotate(new City(), "IT_CB", true, true);
            } 
            // fall through
          case 367: break;
          case 179: 
            { annotate(new Country(), "ME", true, true);
            } 
            // fall through
          case 368: break;
          case 180: 
            { annotate(new Country(), "BY", true, true);
            } 
            // fall through
          case 369: break;
          case 181: 
            { annotate(new Country(), "AZ", true, true);
            } 
            // fall through
          case 370: break;
          case 182: 
            { annotate(new City(), "IT_AL", true, true);
            } 
            // fall through
          case 371: break;
          case 183: 
            { annotate(new Country(), "LU", true, true);
            } 
            // fall through
          case 372: break;
          case 184: 
            { annotate(new City(), "IT_RE", true, true);
            } 
            // fall through
          case 373: break;
          case 185: 
            { annotate(new City(), "IT_VV", true, true);
            } 
            // fall through
          case 374: break;
          case 186: 
            { annotate(new City(), "IT_CL", true, true);
            } 
            // fall through
          case 375: break;
          case 187: 
            { annotate(new Country(), "LI", true, true);
            } 
            // fall through
          case 376: break;
          case 188: 
            { annotate(new City(), "IT_RC", true, true);
            } 
            // fall through
          case 377: break;
          case 189: 
            { annotate(new City(), "IT_L093", true, true);
            } 
            // fall through
          case 378: break;
          default:
            zzScanError(ZZ_NO_MATCH);
        }
      }
    }
  }

  /**
   * Runs the scanner on input files.
   *
   * This is a standalone scanner, it will print any unmatched
   * text to System.out unchanged.
   *
   * @param argv   the command line, contains the filenames to run
   *               the scanner on.
   */
  public static void main(String argv[]) {
    if (argv.length == 0) {
      System.out.println("Usage : java Geos [ --encoding <name> ] <inputfile(s)>");
    }
    else {
      int firstFilePos = 0;
      String encodingName = "UTF-8";
      if (argv[0].equals("--encoding")) {
        firstFilePos = 2;
        encodingName = argv[1];
        try {
          java.nio.charset.Charset.forName(encodingName); // Side-effect: is encodingName valid? 
        } catch (Exception e) {
          System.out.println("Invalid encoding '" + encodingName + "'");
          return;
        }
      }
      for (int i = firstFilePos; i < argv.length; i++) {
        Geos scanner = null;
        try {
          java.io.FileInputStream stream = new java.io.FileInputStream(argv[i]);
          java.io.Reader reader = new java.io.InputStreamReader(stream, encodingName);
          scanner = new Geos(reader);
          while ( !scanner.zzAtEOF ) scanner.yylex();
        }
        catch (java.io.FileNotFoundException e) {
          System.out.println("File not found : \""+argv[i]+"\"");
        }
        catch (java.io.IOException e) {
          System.out.println("IO error scanning file \""+argv[i]+"\"");
          System.out.println(e);
        }
        catch (Exception e) {
          System.out.println("Unexpected exception:");
          e.printStackTrace();
        }
      }
    }
  }


}
